{
  "contractName": "PartitionInstantiator",
  "sourceName": "contracts/PartitionInstantiator.sol",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_state",
          "type": "uint8"
        }
      ],
      "name": "ChallengeEnded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_timeOfDivergence",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_hashAtDivergenceTime",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_hashRigthAfterDivergenceTime",
          "type": "bytes32"
        }
      ],
      "name": "DivergenceFound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "HashesPosted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "PartitionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "QueryPosted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "claimVictoryByTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "deactivate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "divergenceTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getCurrentState",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_roundDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timeToStartMachine",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_partitionSize",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxCycle",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_picoSecondsToRunInsn",
          "type": "uint256"
        }
      ],
      "name": "getMaxInstanceDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentNonce",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getPartitionGameIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getQuerySize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getState",
      "outputs": [
        {
          "internalType": "address",
          "name": "_challenger",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_queryArray",
          "type": "uint256[]"
        },
        {
          "internalType": "bool[]",
          "name": "_submittedArray",
          "type": "bool[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "_hashArray",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32",
          "name": "_currentState",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "_uintValues",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getSubInstances",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_challenger",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_initialHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_claimerFinalHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_finalTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_querySize",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_roundDuration",
          "type": "uint256"
        }
      ],
      "name": "instantiate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "isConcerned",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        }
      ],
      "name": "log2OverTwo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "queryPiece",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "leftPoint",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rightPoint",
          "type": "uint256"
        }
      ],
      "name": "makeQuery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_divergenceTime",
          "type": "uint256"
        }
      ],
      "name": "presentDivergence",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "queryArray",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "postedTimes",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "postedHashes",
          "type": "bytes32[]"
        }
      ],
      "name": "replyQuery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "stateIsChallengerWon",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "stateIsClaimerWon",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "stateIsDivergenceFound",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "stateIsWaitingHashes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "stateIsWaitingQuery",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "key",
          "type": "uint256"
        }
      ],
      "name": "timeHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "key",
          "type": "uint256"
        }
      ],
      "name": "timeSubmitted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526000805534801561001457600080fd5b5061280f806100246000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c80635748c130116100de578063916b9bef11610097578063a91565df11610071578063a91565df1461070f578063c526656c1461072c578063d0a068cf146107f1578063daaadf4e1461080e5761018d565b8063916b9bef146106b2578063a2c58835146106cf578063a2dc7973146106f25761018d565b80635748c1301461049357806360696f81146104b05780636547429e146104d357806373df1612146104f0578063823bb67c1461066657806382afd23b146106955761018d565b806326987b601161014b578063370f31aa11610125578063370f31aa146102f65780633d46b8191461032b578063402f02051461034857806341fde16f146104765761018d565b806326987b6014610283578063326ff2f51461028b5780633562820d146102a85761018d565b80624463861461019257806301ff62ab146101c15780630c0be5a6146102015780631d0cda78146102265780631d9f2d7714610243578063224de3ea14610260575b600080fd5b6101af600480360360208110156101a857600080fd5b503561082b565b60408051918252519081900360200190f35b6101ed600480360360408110156101d757600080fd5b50803590602001356001600160a01b031661088d565b604080519115158252519081900360200190f35b6102246004803603604081101561021757600080fd5b50803590602001356108d8565b005b6101ed6004803603602081101561023c57600080fd5b5035610ba3565b6101ed6004803603602081101561025957600080fd5b5035610c15565b6101ed6004803603604081101561027657600080fd5b5080359060200135610c63565b6101af610ccf565b6101af600480360360208110156102a157600080fd5b5035610cd5565b6101af600480360360e08110156102be57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a08101359060c00135610d33565b6101af600480360360a081101561030c57600080fd5b50803590602081013590604081013590606081013590608001356110e8565b6101af6004803603602081101561034157600080fd5b5035611135565b6102246004803603606081101561035e57600080fd5b8135919081019060408101602082013564010000000081111561038057600080fd5b82018360208201111561039257600080fd5b803590602001918460208302840111640100000000831117156103b457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561040457600080fd5b82018360208201111561041657600080fd5b8035906020019184602083028401116401000000008311171561043857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506111db945050505050565b6101af6004803603602081101561048c57600080fd5b50356115d2565b6101af600480360360208110156104a957600080fd5b5035611630565b6101af600480360360408110156104c657600080fd5b50803590602001356117f5565b6101ed600480360360208110156104e957600080fd5b503561185f565b61051c6004803603604081101561050657600080fd5b50803590602001356001600160a01b03166118ad565b60405180886001600160a01b03168152602001876001600160a01b031681526020018060200180602001806020018681526020018060200185810385528a818151815260200191508051906020019060200280838360005b8381101561058c578181015183820152602001610574565b50505050905001858103845289818151815260200191508051906020019060200280838360005b838110156105cb5781810151838201526020016105b3565b50505050905001858103835288818151815260200191508051906020019060200280838360005b8381101561060a5781810151838201526020016105f2565b50505050905001858103825286818151815260200191508051906020019060200280838360005b83811015610649578181015183820152602001610631565b505050509050019b50505050505050505050505060405180910390f35b6102246004803603608081101561067c57600080fd5b5080359060208101359060408101359060600135611c2a565b6101ed600480360360208110156106ab57600080fd5b5035611f2d565b610224600480360360208110156106c857600080fd5b5035611f42565b6101af600480360360408110156106e557600080fd5b5080359060200135611f65565b6102246004803603602081101561070857600080fd5b5035611fdd565b6101ed6004803603602081101561072557600080fd5b5035612214565b6107586004803603604081101561074257600080fd5b50803590602001356001600160a01b0316612262565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b8381101561079c578181015183820152602001610784565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156107db5781810151838201526020016107c3565b5050505090500194505050505060405180910390f35b6101ed6004803603602081101561080757600080fd5b503561227d565b6101af6004803603602081101561082457600080fd5b50356122cb565b6000818060005411610872576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b60008381526003602052604090206009015491505b50919050565b6000828152600360205260408120546001600160a01b03838116911614806108d157506000838152600360205260409020600101546001600160a01b038381169116145b9392505050565b81806000541161091d576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b6000838152600360205260409020546001600160a01b0316338114610984576040805162461bcd60e51b815260206004820152601860248201527721b0b73737ba1031329031b0b63632b210313c903ab9b2b960411b604482015290519081900360640190fd5b60008481526002602081815260408084208054600101905560039091529091200154849084106109e55760405162461bcd60e51b815260040180806020018281038252602d8152602001806125da602d913960400191505060405180910390fd5b6000858152600360208181526040808420888552909201905290205460ff16610a3f5760405162461bcd60e51b81526004018080602001828103825260298152602001806127306029913960400191505060405180910390fd5b6000858152600360208181526040808420600189018552909201905290205460ff16610a9c5760405162461bcd60e51b815260040180806020018281038252602d815260200180612689602d913960400191505060405180910390fd5b6000858152600360205260409020600b8101859055600a01805460ff19166004179055610ac885611f42565b6000858152600360205260409020600a01547f60aa3f6370bfca526a425b273a4701c067bc6a9c65dd5e1f718093968caf49f390869060ff166004811115610b0c57fe5b6040805192835260ff90911660208301528051918290030190a16000858152600360209081526040808320600b8101548085526004909101835281842054600182018552938290205482518a81529384019190915282820193909352606082019290925290517f8197b77bb2176a2166b421dae05fdada3bfe369f4cadf7da2162160ef6978ab29181900360800190a15050505050565b6000818060005411610bea576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b60005b6000848152600360205260409020600a015460ff166004811115610c0d57fe5b149392505050565b6000818060005411610c5c576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b6004610bed565b6000828060005411610caa576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b5050600091825260036020818152604080852093855292909101905290205460ff1690565b60005481565b6000818060005411610d1c576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b50506000908152600360205260409020600b015490565b6000866001600160a01b0316886001600160a01b03161415610d865760405162461bcd60e51b815260040180806020018281038252602c815260200180612589602c913960400191505060405180910390fd5b60008411610dc55760405162461bcd60e51b81526004018080602001828103825260258152602001806125b56025913960400191505060405180910390fd5b60028311610e1a576040805162461bcd60e51b815260206004820181905260248201527f51756572792053697a65206d75737420626520626967676572207468616e2032604482015290519081900360640190fd5b60148310610e6f576040805162461bcd60e51b815260206004820181905260248201527f51756572792053697a65206d757374206265206c657373207468616e206d6178604482015290519081900360640190fd5b60328211610eae5760405162461bcd60e51b81526004018080602001828103825260308152602001806126b66030913960400191505060405180910390fd5b60008054815260036020818152604080842080546001600160a01b03808f166001600160a01b0319928316179092558554865282862060019081018054938f1693909216929092179055845485528185206002018990558454855281852085805284018352818520805460ff199081168317909155855486528484528286208a8752850184528286208054909116909117905583548452828252808420848052600490810183528185208b905584548552838352818520898652018252808420899055835484529190528082206005908101869055825483529120015467ffffffffffffffff81118015610fa157600080fd5b50604051908082528060200260200182016040528015610fcb578160200160208202803683370190505b5060036000805481526020019081526020016000206006019080519060200190610ff6929190612528565b50600080548082526003602052604082206002015461101592906122fc565b600080548152600360209081526040808320600801859055825483528083204260079091015582548352808320600a01805460ff191660011790559154825190815291517f9bbb2706e0fa7fffe2a1c188dae1a32922e2be76d89d3b89d6677f3e5fe0c1f99281900390910190a160005460408051918252517f8aa2a1e24480c14317a6c2d823c81f4fef15130c883be64c185441531f7b96e89181900360200190a1506000805481526001602081905260408220805460ff19168217905581549081019091555b979650505050505050565b6000806110fc600088888860008989612472565b90506000611111600189898960008a8a612472565b905061111c856122cb565b8802816002028360020201019250505095945050505050565b600081806000541161117c576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b61118581611f2d565b6111c7576040805162461bcd60e51b815260206004820152600e60248201526d496e64657820696e61637469766560901b604482015290519081900360640190fd5b505060009081526002602052604090205490565b828060005411611220576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b6000848152600360205260409020600101546001600160a01b031633811461128a576040805162461bcd60e51b815260206004820152601860248201527721b0b73737ba1031329031b0b63632b210313c903ab9b2b960411b604482015290519081900360640190fd5b60008581526002602052604090208054600190810190915585906000878152600360205260409020600a015460ff1660048111156112c457fe5b146113005760405162461bcd60e51b81526004018080602001828103825260348152602001806126556034913960400191505060405180910390fd5b600086815260036020526040902060050154855114611366576040805162461bcd60e51b815260206004820152601f60248201527f706f7374656454696d65732e6c656e67746820213d20717565727953697a6500604482015290519081900360640190fd5b6000868152600360205260409020600501548451146113cc576040805162461bcd60e51b815260206004820181905260248201527f706f737465644861736865732e6c656e67746820213d20717565727953697a65604482015290519081900360640190fd5b60005b60008781526003602052604090206005015481101561156a57600087815260036020526040902060060180548290811061140557fe5b906000526020600020015486828151811061141c57fe5b602002602001015114611476576040805162461bcd60e51b815260206004820152601f60248201527f706f7374656454696d65735b695d20213d20717565727941727261795b695d00604482015290519081900360640190fd5b60036000888152602001908152602001600020600301600087838151811061149a57fe5b60209081029190910181015182528101919091526040016000205460ff166115625760016003600089815260200190815260200160002060030160008884815181106114e257fe5b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555084818151811061151b57fe5b602002602001015160036000898152602001908152602001600020600401600088848151811061154757fe5b60200260200101518152602001908152602001600020819055505b6001016113cf565b50600086815260036020908152604091829020600a8101805460ff1916905542600782015560090180546001019055815188815291517f9f48f0365c0924940e64ac12fca39f480beeada18cca76e8544a3ac295068bac9281900390910190a1505050505050565b6000818060005411611619576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b505060009081526003602052604090206005015490565b6000818060005411611677576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b6000838152600360205260408120600a015460ff16600481111561169757fe5b14156116b4576b57616974696e67517565727960a01b9150610887565b60016000848152600360205260409020600a015460ff1660048111156116d657fe5b14156116f4576c57616974696e6748617368657360981b9150610887565b60026000848152600360205260409020600a015460ff16600481111561171657fe5b1415611734576c21b430b63632b733b2b92bb7b760991b9150610887565b60036000848152600360205260409020600a015460ff16600481111561175657fe5b1415611771576921b630b4b6b2b92bb7b760b11b9150610887565b60046000848152600360205260409020600a015460ff16600481111561179357fe5b14156117b3576e111a5d995c99d95b98d9519bdd5b99608a1b9150610887565b6040805162461bcd60e51b8152602060048201526012602482015271556e7265636f676e697a656420737461746560701b604482015290519081900360640190fd5b600082806000541161183c576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b505060009182526003602090815260408084209284526004909201905290205490565b60008180600054116118a6576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b6002610bed565b60008281526003602090815260408083208151600480825260a082019093528493606093849384938793859384929182016080803683370190505090508160020154816000815181106118fc57fe5b60200260200101818152505081600501548160018151811061191a57fe5b6020908102919091010152600a82015460088301546005840154600985015460028601546119549460ff16939260289290916101f4612472565b8260070154018160028151811061196757fe5b60200260200101818152505081600b01548160038151811061198557fe5b60209081029190910101526040805160148082526102a0820190925260609181602001602082028036833750506040805160148082526102a082019092529293506060929150602082016102808036833701905050905060005b8460050154811015611ab257600360008f81526020019081526020016000206003016000866006018381548110611a1257fe5b9060005260206000200154815260200190815260200160002060009054906101000a900460ff16838281518110611a4557fe5b91151560209283029190910182015260008f81526003909152604081206006870180546004909201929184908110611a7957fe5b9060005260206000200154815260200190815260200160002054828281518110611a9f57fe5b60209081029190910101526001016119df565b50600080600a86015460ff166004811115611ac957fe5b1415611ae157506b57616974696e67517565727960a01b5b6001600a86015460ff166004811115611af657fe5b1415611b0f57506c57616974696e6748617368657360981b5b6002600a86015460ff166004811115611b2457fe5b1415611b3d57506c21b430b63632b733b2b92bb7b760991b5b6003600a86015460ff166004811115611b5257fe5b1415611b6857506921b630b4b6b2b92bb7b760b11b5b6004600a86015460ff166004811115611b7d57fe5b1415611b9857506e111a5d995c99d95b98d9519bdd5b99608a1b5b84546001860154600687018054604080516020808402820181019092528281526001600160a01b0395861695909416938892889288928c929091879190830182828015611c0457602002820191906000526020600020905b815481526020019060010190808311611bf0575b505050505094509b509b509b509b509b509b509b50505050505092959891949750929550565b838060005411611c6f576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b6000858152600360205260409020546001600160a01b0316338114611cd6576040805162461bcd60e51b815260206004820152601860248201527721b0b73737ba1031329031b0b63632b210313c903ab9b2b960411b604482015290519081900360640190fd5b60008681526002602052604081208054600101905586906000888152600360205260409020600a015460ff166004811115611d0d57fe5b14611d495760405162461bcd60e51b81526004018080602001828103825260328152602001806127886032913960400191505060405180910390fd5b600087815260036020526040902060050154600019018610611d9c5760405162461bcd60e51b81526004018080602001828103825260278152602001806126e66027913960400191505060405180910390fd5b6000878152600360205260409020600601805487908110611db957fe5b90600052602060002001548514611e015760405162461bcd60e51b815260040180806020018281038252602381526020018061270d6023913960400191505060405180910390fd5b6000878152600360205260409020600601805460018801908110611e2157fe5b90600052602060002001548414611e695760405162461bcd60e51b81526004018080602001828103825260248152602001806126316024913960400191505060405180910390fd5b600185850311611ec0576040805162461bcd60e51b815260206004820152601960248201527f496e74657276616c206973206c657373207468616e206f6e6500000000000000604482015290519081900360640190fd5b611ecb8786866122fc565b600087815260036020908152604091829020600a8101805460ff1916600117905542600790910155815189815291517f8aa2a1e24480c14317a6c2d823c81f4fef15130c883be64c185441531f7b96e89281900390910190a150505050505050565b60009081526001602052604090205460ff1690565b6000908152600160209081526040808320805460ff191690556002909152812055565b6000828060005411611fac576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b6000848152600360205260409020600601805484908110611fc957fe5b906000526020600020015491505092915050565b808060005411612022576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b60008281526002602081815260408084208054600101905560039091528220600a81015460088201546005830154600984015493909401548795946120729460ff909416936028926101f4612472565b6000858152600360205260409020600781015490549101421191506001600160a01b0316331480156120c3575060016000858152600360205260409020600a015460ff1660048111156120c157fe5b145b80156120cc5750805b15612162576000848152600360205260409020600a0180546002919060ff19166001835b02179055506120fe84611f42565b6000848152600360205260409020600a01547f60aa3f6370bfca526a425b273a4701c067bc6a9c65dd5e1f718093968caf49f390859060ff16600481111561214257fe5b6040805192835260ff90911660208301528051918290030190a15061220f565b6000848152600360205260409020600101546001600160a01b0316331480156121a857506000848152600360205260408120600a015460ff1660048111156121a657fe5b145b80156121b15750805b156121d8576000848152600360208190526040909120600a01805460ff19166001836120f0565b60405162461bcd60e51b815260040180806020018281038252602f815260200180612759602f913960400191505060405180910390fd5b505050565b600081806000541161225b576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b6001610bed565b50506040805160008082526020820190815281830190925291565b60008180600054116122c4576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b6003610bed565b60006101005b82156122e75760019290921c91600019016122d1565b60028160ff03816122f457fe5b049392505050565b81811161233a5760405162461bcd60e51b815260040180806020018281038252602a815260200180612607602a913960400191505060405180910390fd5b6000838152600360205260408120600501548383039060001901600281028210156123e657600092505b808310156123e1578383860110156123a9576000868152600360205260409020600601805486850191908590811061239857fe5b6000918252602090912001556123d6565b60008681526003602052604090206006018054859190859081106123c957fe5b6000918252602090912001555b600190920191612364565b61243e565b60008183816123f157fe5b049050600093505b8184101561243c5760008781526003602052604090206006018054858302880191908690811061242557fe5b6000918252602090912001556001909301926123f9565b505b600086815260036020526040902060060180548591908390811061245e57fe5b600091825260209091200155505050505050565b60008084860a848161248057fe5b0490508415612490576000198601025b600089600481111561249e57fe5b14156124bb578764e8d4a510008285025b048801019150506110dd565b60018960048111156124c957fe5b14156124de578764e8d4a510008285026124af565b60038960048111156124ec57fe5b14806125035750600289600481111561250157fe5b145b806125195750600489600481111561251757fe5b145b156117b35760009150506110dd565b828054828255906000526020600020908101928215612563579160200282015b82811115612563578251825591602001919060010190612548565b5061256f929150612573565b5090565b5b8082111561256f576000815560010161257456fe4368616c6c656e67657220616e6420636c61696d65722068617665207468652073616d65206164647265737346696e616c2054696d652068617320746f20626520626967676572207468616e207a65726f646976657267656e63652074696d652068617320746f206265206c657373207468616e2066696e616c54696d657269676874506f696e742068617320746f20626520626967676572207468616e206c656674506f696e747269676874506f696e7420213d20717565727941727261795b717565727950696563655d43757272656e745374617465206973206e6f742057616974696e674861736865732c2063616e6e6f74207265706c795175657279646976657267656e636554696d65202b20312068617320746f2068617665206265656e207375626d6974746564526f756e64204475726174696f6e2068617320746f2062652067726561746572207468616e203530207365636f6e64737175657279506965636520697320626967676572207468616e20717565727953697a65202d20316c656674506f696e7420213d20717565727941727261795b717565727950696563655d646976657267656e636554696d652068617320746f2068617665206265656e207375626d69747465644661696c20746f20436c61696d566963746f7279427954696d6520696e2063757272656e7420636f6e646974696f6e43757272656e745374617465206973206e6f742057616974696e6751756572792c2063616e6e6f74206d616b655175657279496e646578206e6f7420696e7374616e74696174656400000000000000000000a2646970667358221220d000eab83b924ebc023699f166b52451b40a6b6429626866c50fbaee2d2fa66464736f6c63430007040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018d5760003560e01c80635748c130116100de578063916b9bef11610097578063a91565df11610071578063a91565df1461070f578063c526656c1461072c578063d0a068cf146107f1578063daaadf4e1461080e5761018d565b8063916b9bef146106b2578063a2c58835146106cf578063a2dc7973146106f25761018d565b80635748c1301461049357806360696f81146104b05780636547429e146104d357806373df1612146104f0578063823bb67c1461066657806382afd23b146106955761018d565b806326987b601161014b578063370f31aa11610125578063370f31aa146102f65780633d46b8191461032b578063402f02051461034857806341fde16f146104765761018d565b806326987b6014610283578063326ff2f51461028b5780633562820d146102a85761018d565b80624463861461019257806301ff62ab146101c15780630c0be5a6146102015780631d0cda78146102265780631d9f2d7714610243578063224de3ea14610260575b600080fd5b6101af600480360360208110156101a857600080fd5b503561082b565b60408051918252519081900360200190f35b6101ed600480360360408110156101d757600080fd5b50803590602001356001600160a01b031661088d565b604080519115158252519081900360200190f35b6102246004803603604081101561021757600080fd5b50803590602001356108d8565b005b6101ed6004803603602081101561023c57600080fd5b5035610ba3565b6101ed6004803603602081101561025957600080fd5b5035610c15565b6101ed6004803603604081101561027657600080fd5b5080359060200135610c63565b6101af610ccf565b6101af600480360360208110156102a157600080fd5b5035610cd5565b6101af600480360360e08110156102be57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a08101359060c00135610d33565b6101af600480360360a081101561030c57600080fd5b50803590602081013590604081013590606081013590608001356110e8565b6101af6004803603602081101561034157600080fd5b5035611135565b6102246004803603606081101561035e57600080fd5b8135919081019060408101602082013564010000000081111561038057600080fd5b82018360208201111561039257600080fd5b803590602001918460208302840111640100000000831117156103b457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561040457600080fd5b82018360208201111561041657600080fd5b8035906020019184602083028401116401000000008311171561043857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506111db945050505050565b6101af6004803603602081101561048c57600080fd5b50356115d2565b6101af600480360360208110156104a957600080fd5b5035611630565b6101af600480360360408110156104c657600080fd5b50803590602001356117f5565b6101ed600480360360208110156104e957600080fd5b503561185f565b61051c6004803603604081101561050657600080fd5b50803590602001356001600160a01b03166118ad565b60405180886001600160a01b03168152602001876001600160a01b031681526020018060200180602001806020018681526020018060200185810385528a818151815260200191508051906020019060200280838360005b8381101561058c578181015183820152602001610574565b50505050905001858103845289818151815260200191508051906020019060200280838360005b838110156105cb5781810151838201526020016105b3565b50505050905001858103835288818151815260200191508051906020019060200280838360005b8381101561060a5781810151838201526020016105f2565b50505050905001858103825286818151815260200191508051906020019060200280838360005b83811015610649578181015183820152602001610631565b505050509050019b50505050505050505050505060405180910390f35b6102246004803603608081101561067c57600080fd5b5080359060208101359060408101359060600135611c2a565b6101ed600480360360208110156106ab57600080fd5b5035611f2d565b610224600480360360208110156106c857600080fd5b5035611f42565b6101af600480360360408110156106e557600080fd5b5080359060200135611f65565b6102246004803603602081101561070857600080fd5b5035611fdd565b6101ed6004803603602081101561072557600080fd5b5035612214565b6107586004803603604081101561074257600080fd5b50803590602001356001600160a01b0316612262565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b8381101561079c578181015183820152602001610784565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156107db5781810151838201526020016107c3565b5050505090500194505050505060405180910390f35b6101ed6004803603602081101561080757600080fd5b503561227d565b6101af6004803603602081101561082457600080fd5b50356122cb565b6000818060005411610872576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b60008381526003602052604090206009015491505b50919050565b6000828152600360205260408120546001600160a01b03838116911614806108d157506000838152600360205260409020600101546001600160a01b038381169116145b9392505050565b81806000541161091d576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b6000838152600360205260409020546001600160a01b0316338114610984576040805162461bcd60e51b815260206004820152601860248201527721b0b73737ba1031329031b0b63632b210313c903ab9b2b960411b604482015290519081900360640190fd5b60008481526002602081815260408084208054600101905560039091529091200154849084106109e55760405162461bcd60e51b815260040180806020018281038252602d8152602001806125da602d913960400191505060405180910390fd5b6000858152600360208181526040808420888552909201905290205460ff16610a3f5760405162461bcd60e51b81526004018080602001828103825260298152602001806127306029913960400191505060405180910390fd5b6000858152600360208181526040808420600189018552909201905290205460ff16610a9c5760405162461bcd60e51b815260040180806020018281038252602d815260200180612689602d913960400191505060405180910390fd5b6000858152600360205260409020600b8101859055600a01805460ff19166004179055610ac885611f42565b6000858152600360205260409020600a01547f60aa3f6370bfca526a425b273a4701c067bc6a9c65dd5e1f718093968caf49f390869060ff166004811115610b0c57fe5b6040805192835260ff90911660208301528051918290030190a16000858152600360209081526040808320600b8101548085526004909101835281842054600182018552938290205482518a81529384019190915282820193909352606082019290925290517f8197b77bb2176a2166b421dae05fdada3bfe369f4cadf7da2162160ef6978ab29181900360800190a15050505050565b6000818060005411610bea576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b60005b6000848152600360205260409020600a015460ff166004811115610c0d57fe5b149392505050565b6000818060005411610c5c576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b6004610bed565b6000828060005411610caa576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b5050600091825260036020818152604080852093855292909101905290205460ff1690565b60005481565b6000818060005411610d1c576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b50506000908152600360205260409020600b015490565b6000866001600160a01b0316886001600160a01b03161415610d865760405162461bcd60e51b815260040180806020018281038252602c815260200180612589602c913960400191505060405180910390fd5b60008411610dc55760405162461bcd60e51b81526004018080602001828103825260258152602001806125b56025913960400191505060405180910390fd5b60028311610e1a576040805162461bcd60e51b815260206004820181905260248201527f51756572792053697a65206d75737420626520626967676572207468616e2032604482015290519081900360640190fd5b60148310610e6f576040805162461bcd60e51b815260206004820181905260248201527f51756572792053697a65206d757374206265206c657373207468616e206d6178604482015290519081900360640190fd5b60328211610eae5760405162461bcd60e51b81526004018080602001828103825260308152602001806126b66030913960400191505060405180910390fd5b60008054815260036020818152604080842080546001600160a01b03808f166001600160a01b0319928316179092558554865282862060019081018054938f1693909216929092179055845485528185206002018990558454855281852085805284018352818520805460ff199081168317909155855486528484528286208a8752850184528286208054909116909117905583548452828252808420848052600490810183528185208b905584548552838352818520898652018252808420899055835484529190528082206005908101869055825483529120015467ffffffffffffffff81118015610fa157600080fd5b50604051908082528060200260200182016040528015610fcb578160200160208202803683370190505b5060036000805481526020019081526020016000206006019080519060200190610ff6929190612528565b50600080548082526003602052604082206002015461101592906122fc565b600080548152600360209081526040808320600801859055825483528083204260079091015582548352808320600a01805460ff191660011790559154825190815291517f9bbb2706e0fa7fffe2a1c188dae1a32922e2be76d89d3b89d6677f3e5fe0c1f99281900390910190a160005460408051918252517f8aa2a1e24480c14317a6c2d823c81f4fef15130c883be64c185441531f7b96e89181900360200190a1506000805481526001602081905260408220805460ff19168217905581549081019091555b979650505050505050565b6000806110fc600088888860008989612472565b90506000611111600189898960008a8a612472565b905061111c856122cb565b8802816002028360020201019250505095945050505050565b600081806000541161117c576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b61118581611f2d565b6111c7576040805162461bcd60e51b815260206004820152600e60248201526d496e64657820696e61637469766560901b604482015290519081900360640190fd5b505060009081526002602052604090205490565b828060005411611220576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b6000848152600360205260409020600101546001600160a01b031633811461128a576040805162461bcd60e51b815260206004820152601860248201527721b0b73737ba1031329031b0b63632b210313c903ab9b2b960411b604482015290519081900360640190fd5b60008581526002602052604090208054600190810190915585906000878152600360205260409020600a015460ff1660048111156112c457fe5b146113005760405162461bcd60e51b81526004018080602001828103825260348152602001806126556034913960400191505060405180910390fd5b600086815260036020526040902060050154855114611366576040805162461bcd60e51b815260206004820152601f60248201527f706f7374656454696d65732e6c656e67746820213d20717565727953697a6500604482015290519081900360640190fd5b6000868152600360205260409020600501548451146113cc576040805162461bcd60e51b815260206004820181905260248201527f706f737465644861736865732e6c656e67746820213d20717565727953697a65604482015290519081900360640190fd5b60005b60008781526003602052604090206005015481101561156a57600087815260036020526040902060060180548290811061140557fe5b906000526020600020015486828151811061141c57fe5b602002602001015114611476576040805162461bcd60e51b815260206004820152601f60248201527f706f7374656454696d65735b695d20213d20717565727941727261795b695d00604482015290519081900360640190fd5b60036000888152602001908152602001600020600301600087838151811061149a57fe5b60209081029190910181015182528101919091526040016000205460ff166115625760016003600089815260200190815260200160002060030160008884815181106114e257fe5b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555084818151811061151b57fe5b602002602001015160036000898152602001908152602001600020600401600088848151811061154757fe5b60200260200101518152602001908152602001600020819055505b6001016113cf565b50600086815260036020908152604091829020600a8101805460ff1916905542600782015560090180546001019055815188815291517f9f48f0365c0924940e64ac12fca39f480beeada18cca76e8544a3ac295068bac9281900390910190a1505050505050565b6000818060005411611619576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b505060009081526003602052604090206005015490565b6000818060005411611677576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b6000838152600360205260408120600a015460ff16600481111561169757fe5b14156116b4576b57616974696e67517565727960a01b9150610887565b60016000848152600360205260409020600a015460ff1660048111156116d657fe5b14156116f4576c57616974696e6748617368657360981b9150610887565b60026000848152600360205260409020600a015460ff16600481111561171657fe5b1415611734576c21b430b63632b733b2b92bb7b760991b9150610887565b60036000848152600360205260409020600a015460ff16600481111561175657fe5b1415611771576921b630b4b6b2b92bb7b760b11b9150610887565b60046000848152600360205260409020600a015460ff16600481111561179357fe5b14156117b3576e111a5d995c99d95b98d9519bdd5b99608a1b9150610887565b6040805162461bcd60e51b8152602060048201526012602482015271556e7265636f676e697a656420737461746560701b604482015290519081900360640190fd5b600082806000541161183c576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b505060009182526003602090815260408084209284526004909201905290205490565b60008180600054116118a6576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b6002610bed565b60008281526003602090815260408083208151600480825260a082019093528493606093849384938793859384929182016080803683370190505090508160020154816000815181106118fc57fe5b60200260200101818152505081600501548160018151811061191a57fe5b6020908102919091010152600a82015460088301546005840154600985015460028601546119549460ff16939260289290916101f4612472565b8260070154018160028151811061196757fe5b60200260200101818152505081600b01548160038151811061198557fe5b60209081029190910101526040805160148082526102a0820190925260609181602001602082028036833750506040805160148082526102a082019092529293506060929150602082016102808036833701905050905060005b8460050154811015611ab257600360008f81526020019081526020016000206003016000866006018381548110611a1257fe5b9060005260206000200154815260200190815260200160002060009054906101000a900460ff16838281518110611a4557fe5b91151560209283029190910182015260008f81526003909152604081206006870180546004909201929184908110611a7957fe5b9060005260206000200154815260200190815260200160002054828281518110611a9f57fe5b60209081029190910101526001016119df565b50600080600a86015460ff166004811115611ac957fe5b1415611ae157506b57616974696e67517565727960a01b5b6001600a86015460ff166004811115611af657fe5b1415611b0f57506c57616974696e6748617368657360981b5b6002600a86015460ff166004811115611b2457fe5b1415611b3d57506c21b430b63632b733b2b92bb7b760991b5b6003600a86015460ff166004811115611b5257fe5b1415611b6857506921b630b4b6b2b92bb7b760b11b5b6004600a86015460ff166004811115611b7d57fe5b1415611b9857506e111a5d995c99d95b98d9519bdd5b99608a1b5b84546001860154600687018054604080516020808402820181019092528281526001600160a01b0395861695909416938892889288928c929091879190830182828015611c0457602002820191906000526020600020905b815481526020019060010190808311611bf0575b505050505094509b509b509b509b509b509b509b50505050505092959891949750929550565b838060005411611c6f576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b6000858152600360205260409020546001600160a01b0316338114611cd6576040805162461bcd60e51b815260206004820152601860248201527721b0b73737ba1031329031b0b63632b210313c903ab9b2b960411b604482015290519081900360640190fd5b60008681526002602052604081208054600101905586906000888152600360205260409020600a015460ff166004811115611d0d57fe5b14611d495760405162461bcd60e51b81526004018080602001828103825260328152602001806127886032913960400191505060405180910390fd5b600087815260036020526040902060050154600019018610611d9c5760405162461bcd60e51b81526004018080602001828103825260278152602001806126e66027913960400191505060405180910390fd5b6000878152600360205260409020600601805487908110611db957fe5b90600052602060002001548514611e015760405162461bcd60e51b815260040180806020018281038252602381526020018061270d6023913960400191505060405180910390fd5b6000878152600360205260409020600601805460018801908110611e2157fe5b90600052602060002001548414611e695760405162461bcd60e51b81526004018080602001828103825260248152602001806126316024913960400191505060405180910390fd5b600185850311611ec0576040805162461bcd60e51b815260206004820152601960248201527f496e74657276616c206973206c657373207468616e206f6e6500000000000000604482015290519081900360640190fd5b611ecb8786866122fc565b600087815260036020908152604091829020600a8101805460ff1916600117905542600790910155815189815291517f8aa2a1e24480c14317a6c2d823c81f4fef15130c883be64c185441531f7b96e89281900390910190a150505050505050565b60009081526001602052604090205460ff1690565b6000908152600160209081526040808320805460ff191690556002909152812055565b6000828060005411611fac576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b6000848152600360205260409020600601805484908110611fc957fe5b906000526020600020015491505092915050565b808060005411612022576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b60008281526002602081815260408084208054600101905560039091528220600a81015460088201546005830154600984015493909401548795946120729460ff909416936028926101f4612472565b6000858152600360205260409020600781015490549101421191506001600160a01b0316331480156120c3575060016000858152600360205260409020600a015460ff1660048111156120c157fe5b145b80156120cc5750805b15612162576000848152600360205260409020600a0180546002919060ff19166001835b02179055506120fe84611f42565b6000848152600360205260409020600a01547f60aa3f6370bfca526a425b273a4701c067bc6a9c65dd5e1f718093968caf49f390859060ff16600481111561214257fe5b6040805192835260ff90911660208301528051918290030190a15061220f565b6000848152600360205260409020600101546001600160a01b0316331480156121a857506000848152600360205260408120600a015460ff1660048111156121a657fe5b145b80156121b15750805b156121d8576000848152600360208190526040909120600a01805460ff19166001836120f0565b60405162461bcd60e51b815260040180806020018281038252602f815260200180612759602f913960400191505060405180910390fd5b505050565b600081806000541161225b576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b6001610bed565b50506040805160008082526020820190815281830190925291565b60008180600054116122c4576040805162461bcd60e51b815260206004820152601660248201526000805160206127ba833981519152604482015290519081900360640190fd5b6003610bed565b60006101005b82156122e75760019290921c91600019016122d1565b60028160ff03816122f457fe5b049392505050565b81811161233a5760405162461bcd60e51b815260040180806020018281038252602a815260200180612607602a913960400191505060405180910390fd5b6000838152600360205260408120600501548383039060001901600281028210156123e657600092505b808310156123e1578383860110156123a9576000868152600360205260409020600601805486850191908590811061239857fe5b6000918252602090912001556123d6565b60008681526003602052604090206006018054859190859081106123c957fe5b6000918252602090912001555b600190920191612364565b61243e565b60008183816123f157fe5b049050600093505b8184101561243c5760008781526003602052604090206006018054858302880191908690811061242557fe5b6000918252602090912001556001909301926123f9565b505b600086815260036020526040902060060180548591908390811061245e57fe5b600091825260209091200155505050505050565b60008084860a848161248057fe5b0490508415612490576000198601025b600089600481111561249e57fe5b14156124bb578764e8d4a510008285025b048801019150506110dd565b60018960048111156124c957fe5b14156124de578764e8d4a510008285026124af565b60038960048111156124ec57fe5b14806125035750600289600481111561250157fe5b145b806125195750600489600481111561251757fe5b145b156117b35760009150506110dd565b828054828255906000526020600020908101928215612563579160200282015b82811115612563578251825591602001919060010190612548565b5061256f929150612573565b5090565b5b8082111561256f576000815560010161257456fe4368616c6c656e67657220616e6420636c61696d65722068617665207468652073616d65206164647265737346696e616c2054696d652068617320746f20626520626967676572207468616e207a65726f646976657267656e63652074696d652068617320746f206265206c657373207468616e2066696e616c54696d657269676874506f696e742068617320746f20626520626967676572207468616e206c656674506f696e747269676874506f696e7420213d20717565727941727261795b717565727950696563655d43757272656e745374617465206973206e6f742057616974696e674861736865732c2063616e6e6f74207265706c795175657279646976657267656e636554696d65202b20312068617320746f2068617665206265656e207375626d6974746564526f756e64204475726174696f6e2068617320746f2062652067726561746572207468616e203530207365636f6e64737175657279506965636520697320626967676572207468616e20717565727953697a65202d20316c656674506f696e7420213d20717565727941727261795b717565727950696563655d646976657267656e636554696d652068617320746f2068617665206265656e207375626d69747465644661696c20746f20436c61696d566963746f7279427954696d6520696e2063757272656e7420636f6e646974696f6e43757272656e745374617465206973206e6f742057616974696e6751756572792c2063616e6e6f74206d616b655175657279496e646578206e6f7420696e7374616e74696174656400000000000000000000a2646970667358221220d000eab83b924ebc023699f166b52451b40a6b6429626866c50fbaee2d2fa66464736f6c63430007040033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getMaxInstanceDuration(uint256,uint256,uint256,uint256,uint256)": {
        "params": {
          "_maxCycle": "number of instructions until the machine is forcibly halted",
          "_picoSecondsToRunInsn": "time the offchain will take to run one instruction"
        }
      },
      "instantiate(address,address,bytes32,bytes32,uint256,uint256,uint256)": {
        "params": {
          "_challenger": "address of the challenger.",
          "_claimer": "address of the claimer.",
          "_claimerFinalHash": "final hash claimed by claimer",
          "_finalTime": "max cycle of the machine for that computation",
          "_initialHash": "hash in which both claimer and challenger agree on",
          "_querySize": "size of postedHashes and postedTimes",
          "_roundDuration": "duration of the round (security param)"
        },
        "returns": {
          "_0": "Partition index."
        }
      },
      "makeQuery(uint256,uint256,uint256,uint256)": {
        "params": {
          "leftPoint": "confirmation of the leftPoint of the interval to be split. Should be an aggreement point.",
          "queryPiece": "is the index of queryArray corresponding to the left limit of the next interval to be queried.",
          "rightPoint": "confirmation of the rightPoint of the interval to be split. Should be a disagreement point."
        }
      },
      "presentDivergence(uint256,uint256)": {
        "params": {
          "_divergenceTime": "The time when the divergence happended. It should be a point of aggreement, while _divergenceTime + 1 should be a point of disagreement (both queried)."
        }
      },
      "replyQuery(uint256,uint256[],bytes32[])": {
        "params": {
          "postedHashes": "An array (of size querySize) with the hashes corresponding to the queried times",
          "postedTimes": "An array (of size querySize) with the times that have been queried."
        }
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280F DUP1 PUSH2 0x24 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5748C130 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x916B9BEF GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA91565DF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA91565DF EQ PUSH2 0x70F JUMPI DUP1 PUSH4 0xC526656C EQ PUSH2 0x72C JUMPI DUP1 PUSH4 0xD0A068CF EQ PUSH2 0x7F1 JUMPI DUP1 PUSH4 0xDAAADF4E EQ PUSH2 0x80E JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x916B9BEF EQ PUSH2 0x6B2 JUMPI DUP1 PUSH4 0xA2C58835 EQ PUSH2 0x6CF JUMPI DUP1 PUSH4 0xA2DC7973 EQ PUSH2 0x6F2 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x5748C130 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x60696F81 EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x6547429E EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0x73DF1612 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x823BB67C EQ PUSH2 0x666 JUMPI DUP1 PUSH4 0x82AFD23B EQ PUSH2 0x695 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x26987B60 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x370F31AA GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x370F31AA EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x3D46B819 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x402F0205 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x41FDE16F EQ PUSH2 0x476 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x26987B60 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x326FF2F5 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x3562820D EQ PUSH2 0x2A8 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH3 0x446386 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x1FF62AB EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xC0BE5A6 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x1D0CDA78 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x1D9F2D77 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x224DE3EA EQ PUSH2 0x260 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x82B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x88D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x8D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xBA3 JUMP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xC15 JUMP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC63 JUMP JUMPDEST PUSH2 0x1AF PUSH2 0xCCF JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xCD5 JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0xD33 JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x10E8 JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1135 JUMP JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x11DB SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x15D2 JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1630 JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x17F5 JUMP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x185F JUMP JUMPDEST PUSH2 0x51C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP6 DUP2 SUB DUP6 MSTORE DUP11 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x58C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x574 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP6 DUP2 SUB DUP5 MSTORE DUP10 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5CB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5B3 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP6 DUP2 SUB DUP4 MSTORE DUP9 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x60A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5F2 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP6 DUP2 SUB DUP3 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x649 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x631 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1F42 JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1F65 JUMP JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1FDD JUMP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2214 JUMP JUMPDEST PUSH2 0x758 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x79C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x784 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7DB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7C3 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x227D JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x872 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x9 ADD SLOAD SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x8D1 JUMPI POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x91D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ PUSH2 0x984 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x21B0B73737BA1031329031B0B63632B210313C903AB9B2B9 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP5 SWAP1 DUP5 LT PUSH2 0x9E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25DA PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP9 DUP6 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2730 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 DUP10 ADD DUP6 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2689 PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xB DUP2 ADD DUP6 SWAP1 SSTORE PUSH1 0xA ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x4 OR SWAP1 SSTORE PUSH2 0xAC8 DUP6 PUSH2 0x1F42 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD PUSH32 0x60AA3F6370BFCA526A425B273A4701C067BC6A9C65DD5E1F718093968CAF49F3 SWAP1 DUP7 SWAP1 PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xB0C JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xB DUP2 ADD SLOAD DUP1 DUP6 MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD PUSH1 0x1 DUP3 ADD DUP6 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD DUP11 DUP2 MSTORE SWAP4 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH32 0x8197B77BB2176A2166B421DAE05FDADA3BFE369F4CADF7DA2162160EF6978AB2 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0xBEA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xC0D JUMPI INVALID JUMPDEST EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0xC5C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0xCAA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP4 DUP6 MSTORE SWAP3 SWAP1 SWAP2 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0xD1C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xB ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xD86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2589 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0xDC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25B5 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP4 GT PUSH2 0xE1A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x51756572792053697A65206D75737420626520626967676572207468616E2032 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x14 DUP4 LT PUSH2 0xE6F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x51756572792053697A65206D757374206265206C657373207468616E206D6178 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x32 DUP3 GT PUSH2 0xEAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26B6 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP16 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE DUP6 SLOAD DUP7 MSTORE DUP3 DUP7 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD SWAP4 DUP16 AND SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE DUP5 SLOAD DUP6 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x2 ADD DUP10 SWAP1 SSTORE DUP5 SLOAD DUP6 MSTORE DUP2 DUP6 KECCAK256 DUP6 DUP1 MSTORE DUP5 ADD DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE DUP6 SLOAD DUP7 MSTORE DUP5 DUP5 MSTORE DUP3 DUP7 KECCAK256 DUP11 DUP8 MSTORE DUP6 ADD DUP5 MSTORE DUP3 DUP7 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 SLOAD DUP5 MSTORE DUP3 DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP5 DUP1 MSTORE PUSH1 0x4 SWAP1 DUP2 ADD DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP12 SWAP1 SSTORE DUP5 SLOAD DUP6 MSTORE DUP4 DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP10 DUP7 MSTORE ADD DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP10 SWAP1 SSTORE DUP4 SLOAD DUP5 MSTORE SWAP2 SWAP1 MSTORE DUP1 DUP3 KECCAK256 PUSH1 0x5 SWAP1 DUP2 ADD DUP7 SWAP1 SSTORE DUP3 SLOAD DUP4 MSTORE SWAP2 KECCAK256 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xFA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFCB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x3 PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xFF6 SWAP3 SWAP2 SWAP1 PUSH2 0x2528 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD DUP1 DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1015 SWAP3 SWAP1 PUSH2 0x22FC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x8 ADD DUP6 SWAP1 SSTORE DUP3 SLOAD DUP4 MSTORE DUP1 DUP4 KECCAK256 TIMESTAMP PUSH1 0x7 SWAP1 SWAP2 ADD SSTORE DUP3 SLOAD DUP4 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP2 SLOAD DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x9BBB2706E0FA7FFFE2A1C188DAE1A32922E2BE76D89D3B89D6677F3E5FE0C1F9 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0x8AA2A1E24480C14317A6C2D823C81F4FEF15130C883BE64C185441531F7B96E8 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 OR SWAP1 SSTORE DUP2 SLOAD SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x10FC PUSH1 0x0 DUP9 DUP9 DUP9 PUSH1 0x0 DUP10 DUP10 PUSH2 0x2472 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1111 PUSH1 0x1 DUP10 DUP10 DUP10 PUSH1 0x0 DUP11 DUP11 PUSH2 0x2472 JUMP JUMPDEST SWAP1 POP PUSH2 0x111C DUP6 PUSH2 0x22CB JUMP JUMPDEST DUP9 MUL DUP2 PUSH1 0x2 MUL DUP4 PUSH1 0x2 MUL ADD ADD SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x117C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1185 DUP2 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x11C7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E64657820696E616374697665 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST DUP3 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x1220 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ PUSH2 0x128A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x21B0B73737BA1031329031B0B63632B210313C903AB9B2B9 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP6 SWAP1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x12C4 JUMPI INVALID JUMPDEST EQ PUSH2 0x1300 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2655 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD DUP6 MLOAD EQ PUSH2 0x1366 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x706F7374656454696D65732E6C656E67746820213D20717565727953697A6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD DUP5 MLOAD EQ PUSH2 0x13CC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x706F737465644861736865732E6C656E67746820213D20717565727953697A65 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 LT ISZERO PUSH2 0x156A JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x1405 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x141C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD EQ PUSH2 0x1476 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x706F7374656454696D65735B695D20213D20717565727941727261795B695D00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x149A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1562 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x14E2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x151B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1547 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x13CF JUMP JUMPDEST POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0xA DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE TIMESTAMP PUSH1 0x7 DUP3 ADD SSTORE PUSH1 0x9 ADD DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP2 MLOAD DUP9 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x9F48F0365C0924940E64AC12FCA39F480BEEADA18CCA76E8544A3AC295068BAC SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x1619 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x1677 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1697 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x16B4 JUMPI PUSH12 0x57616974696E675175657279 PUSH1 0xA0 SHL SWAP2 POP PUSH2 0x887 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x16D6 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x16F4 JUMPI PUSH13 0x57616974696E67486173686573 PUSH1 0x98 SHL SWAP2 POP PUSH2 0x887 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1716 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1734 JUMPI PUSH13 0x21B430B63632B733B2B92BB7B7 PUSH1 0x99 SHL SWAP2 POP PUSH2 0x887 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1756 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1771 JUMPI PUSH10 0x21B630B4B6B2B92BB7B7 PUSH1 0xB1 SHL SWAP2 POP PUSH2 0x887 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1793 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x17B3 JUMPI PUSH15 0x111A5D995C99D95B98D9519BDD5B99 PUSH1 0x8A SHL SWAP2 POP PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x556E7265636F676E697A6564207374617465 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x183C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP5 MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x18A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x4 DUP1 DUP3 MSTORE PUSH1 0xA0 DUP3 ADD SWAP1 SWAP4 MSTORE DUP5 SWAP4 PUSH1 0x60 SWAP4 DUP5 SWAP4 DUP5 SWAP4 DUP8 SWAP4 DUP6 SWAP4 DUP5 SWAP3 SWAP2 DUP3 ADD PUSH1 0x80 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP2 PUSH1 0x2 ADD SLOAD DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x18FC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x5 ADD SLOAD DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x191A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0xA DUP3 ADD SLOAD PUSH1 0x8 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x9 DUP6 ADD SLOAD PUSH1 0x2 DUP7 ADD SLOAD PUSH2 0x1954 SWAP5 PUSH1 0xFF AND SWAP4 SWAP3 PUSH1 0x28 SWAP3 SWAP1 SWAP2 PUSH2 0x1F4 PUSH2 0x2472 JUMP JUMPDEST DUP3 PUSH1 0x7 ADD SLOAD ADD DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1967 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xB ADD SLOAD DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x1985 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x14 DUP1 DUP3 MSTORE PUSH2 0x2A0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x14 DUP1 DUP3 MSTORE PUSH2 0x2A0 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP4 POP PUSH1 0x60 SWAP3 SWAP2 POP PUSH1 0x20 DUP3 ADD PUSH2 0x280 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 PUSH1 0x5 ADD SLOAD DUP2 LT ISZERO PUSH2 0x1AB2 JUMPI PUSH1 0x3 PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP7 PUSH1 0x6 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1A12 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A45 JUMPI INVALID JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD DUP3 ADD MSTORE PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 DUP8 ADD DUP1 SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SWAP3 SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0x1A79 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A9F JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x19DF JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH1 0xA DUP7 ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1AC9 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1AE1 JUMPI POP PUSH12 0x57616974696E675175657279 PUSH1 0xA0 SHL JUMPDEST PUSH1 0x1 PUSH1 0xA DUP7 ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1AF6 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1B0F JUMPI POP PUSH13 0x57616974696E67486173686573 PUSH1 0x98 SHL JUMPDEST PUSH1 0x2 PUSH1 0xA DUP7 ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B24 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1B3D JUMPI POP PUSH13 0x21B430B63632B733B2B92BB7B7 PUSH1 0x99 SHL JUMPDEST PUSH1 0x3 PUSH1 0xA DUP7 ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B52 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1B68 JUMPI POP PUSH10 0x21B630B4B6B2B92BB7B7 PUSH1 0xB1 SHL JUMPDEST PUSH1 0x4 PUSH1 0xA DUP7 ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B7D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1B98 JUMPI POP PUSH15 0x111A5D995C99D95B98D9519BDD5B99 PUSH1 0x8A SHL JUMPDEST DUP5 SLOAD PUSH1 0x1 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP5 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND SWAP6 SWAP1 SWAP5 AND SWAP4 DUP9 SWAP3 DUP9 SWAP3 DUP9 SWAP3 DUP13 SWAP3 SWAP1 SWAP2 DUP8 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1C04 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1BF0 JUMPI JUMPDEST POP POP POP POP POP SWAP5 POP SWAP12 POP SWAP12 POP SWAP12 POP SWAP12 POP SWAP12 POP SWAP12 POP SWAP12 POP POP POP POP POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST DUP4 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x1C6F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ PUSH2 0x1CD6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x21B0B73737BA1031329031B0B63632B210313C903AB9B2B9 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 SWAP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1D0D JUMPI INVALID JUMPDEST EQ PUSH2 0x1D49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2788 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x0 NOT ADD DUP7 LT PUSH2 0x1D9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26E6 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD DUP8 SWAP1 DUP2 LT PUSH2 0x1DB9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP6 EQ PUSH2 0x1E01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x270D PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD PUSH1 0x1 DUP9 ADD SWAP1 DUP2 LT PUSH2 0x1E21 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP5 EQ PUSH2 0x1E69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2631 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 DUP6 SUB GT PUSH2 0x1EC0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E74657276616C206973206C657373207468616E206F6E6500000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1ECB DUP8 DUP7 DUP7 PUSH2 0x22FC JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0xA DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE TIMESTAMP PUSH1 0x7 SWAP1 SWAP2 ADD SSTORE DUP2 MLOAD DUP10 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8AA2A1E24480C14317A6C2D823C81F4FEF15130C883BE64C185441531F7B96E8 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x1FAC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x1FC9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x2022 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE DUP3 KECCAK256 PUSH1 0xA DUP2 ADD SLOAD PUSH1 0x8 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x9 DUP5 ADD SLOAD SWAP4 SWAP1 SWAP5 ADD SLOAD DUP8 SWAP6 SWAP5 PUSH2 0x2072 SWAP5 PUSH1 0xFF SWAP1 SWAP5 AND SWAP4 PUSH1 0x28 SWAP3 PUSH2 0x1F4 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 DUP2 ADD SLOAD SWAP1 SLOAD SWAP2 ADD TIMESTAMP GT SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x20C3 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x20C1 JUMPI INVALID JUMPDEST EQ JUMPDEST DUP1 ISZERO PUSH2 0x20CC JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x2162 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD PUSH1 0x2 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x20FE DUP5 PUSH2 0x1F42 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD PUSH32 0x60AA3F6370BFCA526A425B273A4701C067BC6A9C65DD5E1F718093968CAF49F3 SWAP1 DUP6 SWAP1 PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2142 JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP PUSH2 0x220F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x21A8 JUMPI POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x21A6 JUMPI INVALID JUMPDEST EQ JUMPDEST DUP1 ISZERO PUSH2 0x21B1 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x21D8 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH2 0x20F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2759 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x225B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH2 0xBED JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x22C4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 JUMPDEST DUP3 ISZERO PUSH2 0x22E7 JUMPI PUSH1 0x1 SWAP3 SWAP1 SWAP3 SHR SWAP2 PUSH1 0x0 NOT ADD PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0xFF SUB DUP2 PUSH2 0x22F4 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 GT PUSH2 0x233A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2607 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD SLOAD DUP4 DUP4 SUB SWAP1 PUSH1 0x0 NOT ADD PUSH1 0x2 DUP2 MUL DUP3 LT ISZERO PUSH2 0x23E6 JUMPI PUSH1 0x0 SWAP3 POP JUMPDEST DUP1 DUP4 LT ISZERO PUSH2 0x23E1 JUMPI DUP4 DUP4 DUP7 ADD LT ISZERO PUSH2 0x23A9 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD DUP7 DUP6 ADD SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x2398 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH2 0x23D6 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD DUP6 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x23C9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE JUMPDEST PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x2364 JUMP JUMPDEST PUSH2 0x243E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x23F1 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 SWAP4 POP JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0x243C JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD DUP6 DUP4 MUL DUP9 ADD SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x2425 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 PUSH2 0x23F9 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD DUP6 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x245E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP7 EXP DUP5 DUP2 PUSH2 0x2480 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP5 ISZERO PUSH2 0x2490 JUMPI PUSH1 0x0 NOT DUP7 ADD MUL JUMPDEST PUSH1 0x0 DUP10 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x249E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x24BB JUMPI DUP8 PUSH5 0xE8D4A51000 DUP3 DUP6 MUL JUMPDEST DIV DUP9 ADD ADD SWAP2 POP POP PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x1 DUP10 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x24C9 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x24DE JUMPI DUP8 PUSH5 0xE8D4A51000 DUP3 DUP6 MUL PUSH2 0x24AF JUMP JUMPDEST PUSH1 0x3 DUP10 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x24EC JUMPI INVALID JUMPDEST EQ DUP1 PUSH2 0x2503 JUMPI POP PUSH1 0x2 DUP10 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2501 JUMPI INVALID JUMPDEST EQ JUMPDEST DUP1 PUSH2 0x2519 JUMPI POP PUSH1 0x4 DUP10 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2517 JUMPI INVALID JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x17B3 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x10DD JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2563 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2563 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2548 JUMP JUMPDEST POP PUSH2 0x256F SWAP3 SWAP2 POP PUSH2 0x2573 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x256F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2574 JUMP INVALID NUMBER PUSH9 0x616C6C656E67657220 PUSH2 0x6E64 KECCAK256 PUSH4 0x6C61696D PUSH6 0x722068617665 KECCAK256 PUSH21 0x68652073616D65206164647265737346696E616C20 SLOAD PUSH10 0x6D652068617320746F20 PUSH3 0x652062 PUSH10 0x67676572207468616E20 PUSH27 0x65726F646976657267656E63652074696D652068617320746F2062 PUSH6 0x206C65737320 PUSH21 0x68616E2066696E616C54696D657269676874506F69 PUSH15 0x742068617320746F20626520626967 PUSH8 0x6572207468616E20 PUSH13 0x656674506F696E747269676874 POP PUSH16 0x696E7420213D20717565727941727261 PUSH26 0x5B717565727950696563655D43757272656E7453746174652069 PUSH20 0x206E6F742057616974696E674861736865732C20 PUSH4 0x616E6E6F PUSH21 0x207265706C795175657279646976657267656E6365 SLOAD PUSH10 0x6D65202B203120686173 KECCAK256 PUSH21 0x6F2068617665206265656E207375626D6974746564 MSTORE PUSH16 0x756E64204475726174696F6E20686173 KECCAK256 PUSH21 0x6F2062652067726561746572207468616E20353020 PUSH20 0x65636F6E64737175657279506965636520697320 PUSH3 0x696767 PUSH6 0x72207468616E KECCAK256 PUSH18 0x7565727953697A65202D20316C656674506F PUSH10 0x6E7420213D2071756572 PUSH26 0x41727261795B717565727950696563655D646976657267656E63 PUSH6 0x54696D652068 PUSH2 0x7320 PUSH21 0x6F2068617665206265656E207375626D6974746564 CHAINID PUSH2 0x696C KECCAK256 PUSH21 0x6F20436C61696D566963746F7279427954696D6520 PUSH10 0x6E2063757272656E7420 PUSH4 0x6F6E6469 PUSH21 0x696F6E43757272656E745374617465206973206E6F PUSH21 0x2057616974696E6751756572792C2063616E6E6F74 KECCAK256 PUSH14 0x616B655175657279496E64657820 PUSH15 0x6F7420696E7374616E746961746564 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 STOP 0xEA 0xB8 EXTCODESIZE SWAP3 0x4E 0xBC MUL CALLDATASIZE SWAP10 CALL PUSH7 0xB52451B40A6B64 0x29 PUSH3 0x6866C5 0xF 0xBA 0xEE 0x2D 0x2F 0xA6 PUSH5 0x64736F6C63 NUMBER STOP SMOD DIV STOP CALLER ",
      "sourceMap": "1412:23697:9:-:0;;;759:1:2;729:31;;1412:23697:9;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "generatedSources": [],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5748C130 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x916B9BEF GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA91565DF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA91565DF EQ PUSH2 0x70F JUMPI DUP1 PUSH4 0xC526656C EQ PUSH2 0x72C JUMPI DUP1 PUSH4 0xD0A068CF EQ PUSH2 0x7F1 JUMPI DUP1 PUSH4 0xDAAADF4E EQ PUSH2 0x80E JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x916B9BEF EQ PUSH2 0x6B2 JUMPI DUP1 PUSH4 0xA2C58835 EQ PUSH2 0x6CF JUMPI DUP1 PUSH4 0xA2DC7973 EQ PUSH2 0x6F2 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x5748C130 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x60696F81 EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x6547429E EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0x73DF1612 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x823BB67C EQ PUSH2 0x666 JUMPI DUP1 PUSH4 0x82AFD23B EQ PUSH2 0x695 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x26987B60 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x370F31AA GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x370F31AA EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x3D46B819 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x402F0205 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x41FDE16F EQ PUSH2 0x476 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x26987B60 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x326FF2F5 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x3562820D EQ PUSH2 0x2A8 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH3 0x446386 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x1FF62AB EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xC0BE5A6 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x1D0CDA78 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x1D9F2D77 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x224DE3EA EQ PUSH2 0x260 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x82B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x88D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x8D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xBA3 JUMP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xC15 JUMP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC63 JUMP JUMPDEST PUSH2 0x1AF PUSH2 0xCCF JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xCD5 JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0xD33 JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x10E8 JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1135 JUMP JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x11DB SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x15D2 JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1630 JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x17F5 JUMP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x185F JUMP JUMPDEST PUSH2 0x51C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP6 DUP2 SUB DUP6 MSTORE DUP11 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x58C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x574 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP6 DUP2 SUB DUP5 MSTORE DUP10 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5CB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5B3 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP6 DUP2 SUB DUP4 MSTORE DUP9 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x60A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5F2 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP6 DUP2 SUB DUP3 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x649 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x631 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1F42 JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1F65 JUMP JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1FDD JUMP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2214 JUMP JUMPDEST PUSH2 0x758 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x79C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x784 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7DB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7C3 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x227D JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x872 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x9 ADD SLOAD SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x8D1 JUMPI POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x91D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ PUSH2 0x984 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x21B0B73737BA1031329031B0B63632B210313C903AB9B2B9 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP5 SWAP1 DUP5 LT PUSH2 0x9E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25DA PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP9 DUP6 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2730 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 DUP10 ADD DUP6 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2689 PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xB DUP2 ADD DUP6 SWAP1 SSTORE PUSH1 0xA ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x4 OR SWAP1 SSTORE PUSH2 0xAC8 DUP6 PUSH2 0x1F42 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD PUSH32 0x60AA3F6370BFCA526A425B273A4701C067BC6A9C65DD5E1F718093968CAF49F3 SWAP1 DUP7 SWAP1 PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xB0C JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xB DUP2 ADD SLOAD DUP1 DUP6 MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD PUSH1 0x1 DUP3 ADD DUP6 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD DUP11 DUP2 MSTORE SWAP4 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH32 0x8197B77BB2176A2166B421DAE05FDADA3BFE369F4CADF7DA2162160EF6978AB2 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0xBEA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xC0D JUMPI INVALID JUMPDEST EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0xC5C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0xCAA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP4 DUP6 MSTORE SWAP3 SWAP1 SWAP2 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0xD1C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xB ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xD86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2589 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0xDC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25B5 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP4 GT PUSH2 0xE1A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x51756572792053697A65206D75737420626520626967676572207468616E2032 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x14 DUP4 LT PUSH2 0xE6F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x51756572792053697A65206D757374206265206C657373207468616E206D6178 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x32 DUP3 GT PUSH2 0xEAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26B6 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP16 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE DUP6 SLOAD DUP7 MSTORE DUP3 DUP7 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD SWAP4 DUP16 AND SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE DUP5 SLOAD DUP6 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x2 ADD DUP10 SWAP1 SSTORE DUP5 SLOAD DUP6 MSTORE DUP2 DUP6 KECCAK256 DUP6 DUP1 MSTORE DUP5 ADD DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE DUP6 SLOAD DUP7 MSTORE DUP5 DUP5 MSTORE DUP3 DUP7 KECCAK256 DUP11 DUP8 MSTORE DUP6 ADD DUP5 MSTORE DUP3 DUP7 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 SLOAD DUP5 MSTORE DUP3 DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP5 DUP1 MSTORE PUSH1 0x4 SWAP1 DUP2 ADD DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP12 SWAP1 SSTORE DUP5 SLOAD DUP6 MSTORE DUP4 DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP10 DUP7 MSTORE ADD DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP10 SWAP1 SSTORE DUP4 SLOAD DUP5 MSTORE SWAP2 SWAP1 MSTORE DUP1 DUP3 KECCAK256 PUSH1 0x5 SWAP1 DUP2 ADD DUP7 SWAP1 SSTORE DUP3 SLOAD DUP4 MSTORE SWAP2 KECCAK256 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xFA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFCB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x3 PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xFF6 SWAP3 SWAP2 SWAP1 PUSH2 0x2528 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD DUP1 DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1015 SWAP3 SWAP1 PUSH2 0x22FC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x8 ADD DUP6 SWAP1 SSTORE DUP3 SLOAD DUP4 MSTORE DUP1 DUP4 KECCAK256 TIMESTAMP PUSH1 0x7 SWAP1 SWAP2 ADD SSTORE DUP3 SLOAD DUP4 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP2 SLOAD DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x9BBB2706E0FA7FFFE2A1C188DAE1A32922E2BE76D89D3B89D6677F3E5FE0C1F9 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0x8AA2A1E24480C14317A6C2D823C81F4FEF15130C883BE64C185441531F7B96E8 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 OR SWAP1 SSTORE DUP2 SLOAD SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x10FC PUSH1 0x0 DUP9 DUP9 DUP9 PUSH1 0x0 DUP10 DUP10 PUSH2 0x2472 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1111 PUSH1 0x1 DUP10 DUP10 DUP10 PUSH1 0x0 DUP11 DUP11 PUSH2 0x2472 JUMP JUMPDEST SWAP1 POP PUSH2 0x111C DUP6 PUSH2 0x22CB JUMP JUMPDEST DUP9 MUL DUP2 PUSH1 0x2 MUL DUP4 PUSH1 0x2 MUL ADD ADD SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x117C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1185 DUP2 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x11C7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E64657820696E616374697665 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST DUP3 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x1220 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ PUSH2 0x128A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x21B0B73737BA1031329031B0B63632B210313C903AB9B2B9 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP6 SWAP1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x12C4 JUMPI INVALID JUMPDEST EQ PUSH2 0x1300 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2655 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD DUP6 MLOAD EQ PUSH2 0x1366 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x706F7374656454696D65732E6C656E67746820213D20717565727953697A6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD DUP5 MLOAD EQ PUSH2 0x13CC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x706F737465644861736865732E6C656E67746820213D20717565727953697A65 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 LT ISZERO PUSH2 0x156A JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x1405 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x141C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD EQ PUSH2 0x1476 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x706F7374656454696D65735B695D20213D20717565727941727261795B695D00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x149A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1562 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x14E2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x151B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1547 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x13CF JUMP JUMPDEST POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0xA DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE TIMESTAMP PUSH1 0x7 DUP3 ADD SSTORE PUSH1 0x9 ADD DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP2 MLOAD DUP9 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x9F48F0365C0924940E64AC12FCA39F480BEEADA18CCA76E8544A3AC295068BAC SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x1619 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x1677 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1697 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x16B4 JUMPI PUSH12 0x57616974696E675175657279 PUSH1 0xA0 SHL SWAP2 POP PUSH2 0x887 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x16D6 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x16F4 JUMPI PUSH13 0x57616974696E67486173686573 PUSH1 0x98 SHL SWAP2 POP PUSH2 0x887 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1716 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1734 JUMPI PUSH13 0x21B430B63632B733B2B92BB7B7 PUSH1 0x99 SHL SWAP2 POP PUSH2 0x887 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1756 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1771 JUMPI PUSH10 0x21B630B4B6B2B92BB7B7 PUSH1 0xB1 SHL SWAP2 POP PUSH2 0x887 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1793 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x17B3 JUMPI PUSH15 0x111A5D995C99D95B98D9519BDD5B99 PUSH1 0x8A SHL SWAP2 POP PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x556E7265636F676E697A6564207374617465 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x183C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP5 MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x18A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x4 DUP1 DUP3 MSTORE PUSH1 0xA0 DUP3 ADD SWAP1 SWAP4 MSTORE DUP5 SWAP4 PUSH1 0x60 SWAP4 DUP5 SWAP4 DUP5 SWAP4 DUP8 SWAP4 DUP6 SWAP4 DUP5 SWAP3 SWAP2 DUP3 ADD PUSH1 0x80 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP2 PUSH1 0x2 ADD SLOAD DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x18FC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x5 ADD SLOAD DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x191A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0xA DUP3 ADD SLOAD PUSH1 0x8 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x9 DUP6 ADD SLOAD PUSH1 0x2 DUP7 ADD SLOAD PUSH2 0x1954 SWAP5 PUSH1 0xFF AND SWAP4 SWAP3 PUSH1 0x28 SWAP3 SWAP1 SWAP2 PUSH2 0x1F4 PUSH2 0x2472 JUMP JUMPDEST DUP3 PUSH1 0x7 ADD SLOAD ADD DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1967 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xB ADD SLOAD DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x1985 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x14 DUP1 DUP3 MSTORE PUSH2 0x2A0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x14 DUP1 DUP3 MSTORE PUSH2 0x2A0 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP4 POP PUSH1 0x60 SWAP3 SWAP2 POP PUSH1 0x20 DUP3 ADD PUSH2 0x280 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 PUSH1 0x5 ADD SLOAD DUP2 LT ISZERO PUSH2 0x1AB2 JUMPI PUSH1 0x3 PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP7 PUSH1 0x6 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1A12 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A45 JUMPI INVALID JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD DUP3 ADD MSTORE PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 DUP8 ADD DUP1 SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SWAP3 SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0x1A79 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A9F JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x19DF JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH1 0xA DUP7 ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1AC9 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1AE1 JUMPI POP PUSH12 0x57616974696E675175657279 PUSH1 0xA0 SHL JUMPDEST PUSH1 0x1 PUSH1 0xA DUP7 ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1AF6 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1B0F JUMPI POP PUSH13 0x57616974696E67486173686573 PUSH1 0x98 SHL JUMPDEST PUSH1 0x2 PUSH1 0xA DUP7 ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B24 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1B3D JUMPI POP PUSH13 0x21B430B63632B733B2B92BB7B7 PUSH1 0x99 SHL JUMPDEST PUSH1 0x3 PUSH1 0xA DUP7 ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B52 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1B68 JUMPI POP PUSH10 0x21B630B4B6B2B92BB7B7 PUSH1 0xB1 SHL JUMPDEST PUSH1 0x4 PUSH1 0xA DUP7 ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B7D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1B98 JUMPI POP PUSH15 0x111A5D995C99D95B98D9519BDD5B99 PUSH1 0x8A SHL JUMPDEST DUP5 SLOAD PUSH1 0x1 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP5 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND SWAP6 SWAP1 SWAP5 AND SWAP4 DUP9 SWAP3 DUP9 SWAP3 DUP9 SWAP3 DUP13 SWAP3 SWAP1 SWAP2 DUP8 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1C04 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1BF0 JUMPI JUMPDEST POP POP POP POP POP SWAP5 POP SWAP12 POP SWAP12 POP SWAP12 POP SWAP12 POP SWAP12 POP SWAP12 POP SWAP12 POP POP POP POP POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST DUP4 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x1C6F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ PUSH2 0x1CD6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x21B0B73737BA1031329031B0B63632B210313C903AB9B2B9 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 SWAP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1D0D JUMPI INVALID JUMPDEST EQ PUSH2 0x1D49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2788 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x0 NOT ADD DUP7 LT PUSH2 0x1D9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26E6 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD DUP8 SWAP1 DUP2 LT PUSH2 0x1DB9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP6 EQ PUSH2 0x1E01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x270D PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD PUSH1 0x1 DUP9 ADD SWAP1 DUP2 LT PUSH2 0x1E21 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP5 EQ PUSH2 0x1E69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2631 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 DUP6 SUB GT PUSH2 0x1EC0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E74657276616C206973206C657373207468616E206F6E6500000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1ECB DUP8 DUP7 DUP7 PUSH2 0x22FC JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0xA DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE TIMESTAMP PUSH1 0x7 SWAP1 SWAP2 ADD SSTORE DUP2 MLOAD DUP10 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8AA2A1E24480C14317A6C2D823C81F4FEF15130C883BE64C185441531F7B96E8 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x1FAC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x1FC9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x2022 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE DUP3 KECCAK256 PUSH1 0xA DUP2 ADD SLOAD PUSH1 0x8 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x9 DUP5 ADD SLOAD SWAP4 SWAP1 SWAP5 ADD SLOAD DUP8 SWAP6 SWAP5 PUSH2 0x2072 SWAP5 PUSH1 0xFF SWAP1 SWAP5 AND SWAP4 PUSH1 0x28 SWAP3 PUSH2 0x1F4 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 DUP2 ADD SLOAD SWAP1 SLOAD SWAP2 ADD TIMESTAMP GT SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x20C3 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x20C1 JUMPI INVALID JUMPDEST EQ JUMPDEST DUP1 ISZERO PUSH2 0x20CC JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x2162 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD PUSH1 0x2 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x20FE DUP5 PUSH2 0x1F42 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD PUSH32 0x60AA3F6370BFCA526A425B273A4701C067BC6A9C65DD5E1F718093968CAF49F3 SWAP1 DUP6 SWAP1 PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2142 JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP PUSH2 0x220F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x21A8 JUMPI POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x21A6 JUMPI INVALID JUMPDEST EQ JUMPDEST DUP1 ISZERO PUSH2 0x21B1 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x21D8 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH2 0x20F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2759 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x225B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH2 0xBED JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x22C4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x27BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 JUMPDEST DUP3 ISZERO PUSH2 0x22E7 JUMPI PUSH1 0x1 SWAP3 SWAP1 SWAP3 SHR SWAP2 PUSH1 0x0 NOT ADD PUSH2 0x22D1 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0xFF SUB DUP2 PUSH2 0x22F4 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 GT PUSH2 0x233A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2607 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD SLOAD DUP4 DUP4 SUB SWAP1 PUSH1 0x0 NOT ADD PUSH1 0x2 DUP2 MUL DUP3 LT ISZERO PUSH2 0x23E6 JUMPI PUSH1 0x0 SWAP3 POP JUMPDEST DUP1 DUP4 LT ISZERO PUSH2 0x23E1 JUMPI DUP4 DUP4 DUP7 ADD LT ISZERO PUSH2 0x23A9 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD DUP7 DUP6 ADD SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x2398 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH2 0x23D6 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD DUP6 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x23C9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE JUMPDEST PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x2364 JUMP JUMPDEST PUSH2 0x243E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x23F1 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 SWAP4 POP JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0x243C JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD DUP6 DUP4 MUL DUP9 ADD SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x2425 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 PUSH2 0x23F9 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD DUP6 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x245E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP7 EXP DUP5 DUP2 PUSH2 0x2480 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP5 ISZERO PUSH2 0x2490 JUMPI PUSH1 0x0 NOT DUP7 ADD MUL JUMPDEST PUSH1 0x0 DUP10 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x249E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x24BB JUMPI DUP8 PUSH5 0xE8D4A51000 DUP3 DUP6 MUL JUMPDEST DIV DUP9 ADD ADD SWAP2 POP POP PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x1 DUP10 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x24C9 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x24DE JUMPI DUP8 PUSH5 0xE8D4A51000 DUP3 DUP6 MUL PUSH2 0x24AF JUMP JUMPDEST PUSH1 0x3 DUP10 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x24EC JUMPI INVALID JUMPDEST EQ DUP1 PUSH2 0x2503 JUMPI POP PUSH1 0x2 DUP10 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2501 JUMPI INVALID JUMPDEST EQ JUMPDEST DUP1 PUSH2 0x2519 JUMPI POP PUSH1 0x4 DUP10 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2517 JUMPI INVALID JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x17B3 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x10DD JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2563 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2563 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2548 JUMP JUMPDEST POP PUSH2 0x256F SWAP3 SWAP2 POP PUSH2 0x2573 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x256F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2574 JUMP INVALID NUMBER PUSH9 0x616C6C656E67657220 PUSH2 0x6E64 KECCAK256 PUSH4 0x6C61696D PUSH6 0x722068617665 KECCAK256 PUSH21 0x68652073616D65206164647265737346696E616C20 SLOAD PUSH10 0x6D652068617320746F20 PUSH3 0x652062 PUSH10 0x67676572207468616E20 PUSH27 0x65726F646976657267656E63652074696D652068617320746F2062 PUSH6 0x206C65737320 PUSH21 0x68616E2066696E616C54696D657269676874506F69 PUSH15 0x742068617320746F20626520626967 PUSH8 0x6572207468616E20 PUSH13 0x656674506F696E747269676874 POP PUSH16 0x696E7420213D20717565727941727261 PUSH26 0x5B717565727950696563655D43757272656E7453746174652069 PUSH20 0x206E6F742057616974696E674861736865732C20 PUSH4 0x616E6E6F PUSH21 0x207265706C795175657279646976657267656E6365 SLOAD PUSH10 0x6D65202B203120686173 KECCAK256 PUSH21 0x6F2068617665206265656E207375626D6974746564 MSTORE PUSH16 0x756E64204475726174696F6E20686173 KECCAK256 PUSH21 0x6F2062652067726561746572207468616E20353020 PUSH20 0x65636F6E64737175657279506965636520697320 PUSH3 0x696767 PUSH6 0x72207468616E KECCAK256 PUSH18 0x7565727953697A65202D20316C656674506F PUSH10 0x6E7420213D2071756572 PUSH26 0x41727261795B717565727950696563655D646976657267656E63 PUSH6 0x54696D652068 PUSH2 0x7320 PUSH21 0x6F2068617665206265656E207375626D6974746564 CHAINID PUSH2 0x696C KECCAK256 PUSH21 0x6F20436C61696D566963746F7279427954696D6520 PUSH10 0x6E2063757272656E7420 PUSH4 0x6F6E6469 PUSH21 0x696F6E43757272656E745374617465206973206E6F PUSH21 0x2057616974696E6751756572792C2063616E6E6F74 KECCAK256 PUSH14 0x616B655175657279496E64657820 PUSH15 0x6F7420696E7374616E746961746564 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 STOP 0xEA 0xB8 EXTCODESIZE SWAP3 0x4E 0xBC MUL CALLDATASIZE SWAP10 CALL PUSH7 0xB52451B40A6B64 0x29 PUSH3 0x6866C5 0xF 0xBA 0xEE 0x2D 0x2F 0xA6 PUSH5 0x64736F6C63 NUMBER STOP SMOD DIV STOP CALLER ",
      "sourceMap": "1412:23697:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20249:214;;;;;;;;;;;;;;;;-1:-1:-1;20249:214:9;;:::i;:::-;;;;;;;;;;;;;;;;20693:239;;;;;;;;;;;;;;;;-1:-1:-1;20693:239:9;;;;;;-1:-1:-1;;;;;20693:239:9;;:::i;:::-;;;;;;;;;;;;;;;;;;11461:1125;;;;;;;;;;;;;;;;-1:-1:-1;11461:1125:9;;;;;;;:::i;:::-;;22046:225;;;;;;;;;;;;;;;;-1:-1:-1;22046:225:9;;:::i;22970:231::-;;;;;;;;;;;;;;;;-1:-1:-1;22970:231:9;;:::i;19631:199::-;;;;;;;;;;;;;;;;-1:-1:-1;19631:199:9;;;;;;;:::i;729:31:2:-;;;:::i;19422:203:9:-;;;;;;;;;;;;;;;;-1:-1:-1;19422:203:9;;:::i;4168:1904::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4168:1904:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;15220:1197::-;;;;;;;;;;;;;;;;-1:-1:-1;15220:1197:9;;;;;;;;;;;;;;;;;;;;;;:::i;1405:186:2:-;;;;;;;;;;;;;;;;-1:-1:-1;1405:186:2;;:::i;6358:1459:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6358:1459:9;;;;;;;;-1:-1:-1;6358:1459:9;;-1:-1:-1;;6358:1459:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6358:1459:9;;-1:-1:-1;6358:1459:9;;-1:-1:-1;;;;;6358:1459:9:i;20469:196::-;;;;;;;;;;;;;;;;-1:-1:-1;20469:196:9;;:::i;21213:768::-;;;;;;;;;;;;;;;;-1:-1:-1;21213:768:9;;:::i;19836:209::-;;;;;;;;;;;;;;;;-1:-1:-1;19836:209:9;;;;;;;:::i;22510:227::-;;;;;;;;;;;;;;;;-1:-1:-1;22510:227:9;;:::i;16447:2226::-;;;;;;;;;;;;;;;;-1:-1:-1;16447:2226:9;;;;;;-1:-1:-1;;;;;16447:2226:9;;:::i;:::-;;;;;-1:-1:-1;;;;;16447:2226:9;;;;;;-1:-1:-1;;;;;16447:2226:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8262:1337;;;;;;;;;;;;;;;;-1:-1:-1;8262:1337:9;;;;;;;;;;;;;;;;;:::i;1289:110:2:-;;;;;;;;;;;;;;;;-1:-1:-1;1289:110:2;;:::i;1597:118::-;;;;;;;;;;;;;;;;-1:-1:-1;1597:118:2;;:::i;20051:192:9:-;;;;;;;;;;;;;;;;-1:-1:-1;20051:192:9;;;;;;;:::i;9657:1502::-;;;;;;;;;;;;;;;;-1:-1:-1;9657:1502:9;;:::i;22277:227::-;;;;;;;;;;;;;;;;-1:-1:-1;22277:227:9;;:::i;20938:269::-;;;;;;;;;;;;;;;;-1:-1:-1;20938:269:9;;;;;;-1:-1:-1;;;;;20938:269:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22743:221;;;;;;;;;;;;;;;;-1:-1:-1;22743:221:9;;:::i;24842:265::-;;;;;;;;;;;;;;;;-1:-1:-1;24842:265:9;;:::i;20249:214::-;20391:7;20366:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;20421:16:9::1;::::0;;;:8:::1;:16;::::0;;;;:35:::1;;::::0;;-1:-1:-1;989:1:2::1;20249:214:9::0;;;;:::o;20693:239::-;20807:4;20836:16;;;:8;:16;;;;;:27;-1:-1:-1;;;;;20836:36:9;;;:27;;:36;;20835:89;;-1:-1:-1;20890:16:9;;;;:8;:16;;;;;:24;;;-1:-1:-1;;;;;20890:33:9;;;:24;;:33;20835:89;20827:98;20693:239;-1:-1:-1;;;20693:239:9:o;11461:1125::-;11569:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;11592:16:9::1;::::0;;;:8:::1;:16;::::0;;;;:27;-1:-1:-1;;;;;11592:27:9::1;834:10:0;:18:::0;::::1;826:55;;;::::0;;-1:-1:-1;;;826:55:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;826:55:0;;;;;;;;;;;;;::::1;;1250:13:2::2;::::0;;;:5:::2;:13;::::0;;;;;;;:15;;::::2;;::::0;;11705:8:9::3;:16:::0;;;;;;:26:::3;::::0;11644:6;;11687:44;::::3;11666:136;;;;-1:-1:-1::0;;;11666:136:9::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11833:16;::::0;;;:8:::3;:16;::::0;;;;;;;:47;;;:30;;::::3;:47:::0;;;;;::::3;;11812:135;;;;-1:-1:-1::0;;;11812:135:9::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11978:16;::::0;;;:8:::3;:16;::::0;;;;;;;12027:1:::3;12009:19:::0;::::3;11978:51:::0;;:30;;::::3;:51:::0;;;;;::::3;;11957:143;;;;-1:-1:-1::0;;;11957:143:9::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12111:16;::::0;;;:8:::3;:16;::::0;;;;:31:::3;::::0;::::3;:49:::0;;;12170:29:::3;;:53:::0;;-1:-1:-1;;12170:53:9::3;12202:21;12170:53;::::0;;12233:18:::3;12111:16:::0;12233:10:::3;:18::i;:::-;12295:16;::::0;;;:8:::3;:16;::::0;;;;:29:::3;;::::0;12266:60:::3;::::0;12281:6;;12295:29:::3;;12289:36;::::0;::::3;;;;;;12266:60;::::0;;;;;::::3;::::0;;::::3;;::::0;::::3;::::0;;;;;;;;;::::3;12390:16;::::0;;;:8:::3;:16;::::0;;;;;;;:31:::3;::::0;::::3;::::0;12435:58;;;:25:::3;::::0;;::::3;:58:::0;;;;;;12567:1:::3;12533:35:::0;::::3;12507:62:::0;;;;;;;12341:238;;;;;;;::::3;::::0;;;;;;;;;;;;;;;;;;;;::::3;::::0;;;;;;;::::3;891:1:0::2;989::2::1;11461:1125:9::0;;;:::o;22046:225::-;22186:4;22161:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;22246:18:9::1;22213:51;:16;::::0;;;:8:::1;:16;::::0;;;;:29:::1;;::::0;::::1;;:51;::::0;::::1;;;;;;;::::0;22046:225;-1:-1:-1;;;22046:225:9:o;22970:231::-;23113:4;23088:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;23173:21:9::1;23140:54;::::0;19631:199;19761:4;19736:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;-1:-1:-1;;19788:16:9::1;::::0;;;:8:::1;:16;::::0;;;;;;;:35;;;:30;;;::::1;:35:::0;;;;;::::1;;::::0;19631:199::o;729:31:2:-;;;;:::o;19422:203:9:-;19557:7;19532:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;-1:-1:-1;;19587:16:9::1;::::0;;;:8:::1;:16;::::0;;;;:31:::1;;::::0;;19422:203::o;4168:1904::-;4428:7;4483:8;-1:-1:-1;;;;;4468:23:9;:11;-1:-1:-1;;;;;4468:23:9;;;4447:114;;;;-1:-1:-1;;;4447:114:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4592:1;4579:10;:14;4571:64;;;;-1:-1:-1;;;4571:64:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4666:1;4653:10;:14;4645:59;;;;;-1:-1:-1;;;4645:59:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1546:2;4735:10;:27;4714:106;;;;;-1:-1:-1;;;4714:106:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4868:2;4851:14;:19;4830:114;;;;-1:-1:-1;;;4830:114:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4954:22;4963:12;;4954:22;;:8;:22;;;;;;;;:47;;-1:-1:-1;;;;;4954:47:9;;;-1:-1:-1;;;;;;4954:47:9;;;;;;;5020:12;;5011:22;;;;;4954:47;5011:30;;;:41;;;;;;;;;;;;;;;5071:12;;5062:22;;;;;:32;;:45;;;5126:12;;5117:22;;;;;:39;;;:36;;:39;;;;;:46;;-1:-1:-1;;5117:46:9;;;;;;;;5182:12;;5173:22;;;;;;;;:48;;;:36;;:48;;;;;:55;;;;;;;;;;5247:12;;5238:22;;;;;;;;:34;;;:31;;;;:34;;;;;:49;;;5306:12;;5297:22;;;;;;;;:43;;;:31;:43;;;;;:63;;;5379:12;;5370:22;;;;;;;;:32;;;;:45;;;5549:12;;5540:22;;;;:32;;5513:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5513:69:9;;5477:8;:22;5486:12;;5477:22;;;;;;;;;;;:33;;:105;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5666:12:9;;;5683:22;;;:8;:22;;;;;:32;;;5660:56;;5666:12;5660:5;:56::i;:::-;5726:22;5735:12;;5726:22;;:8;:22;;;;;;;;:36;;:53;;;5798:12;;5789:22;;;;;5829:15;5789:37;;;;:55;5863:12;;5854:22;;;;;:35;;:57;;-1:-1:-1;;5854:57:9;-1:-1:-1;5854:57:9;;;5943:12;;5926:30;;;;;;;;;;;;;;;;;5983:12;;5971:25;;;;;;;;;;;;;;;;-1:-1:-1;6007:20:9;6014:12;;6007:20;;6030:4;6007:20;;;;;;;:27;;-1:-1:-1;;6007:27:9;;;;;6051:14;;;;;;;;4168:1904;;;;;;;;;;:::o;15220:1197::-;15455:7;15474:28;15505:266;15538:18;15570:14;15598:19;15631:14;15659:1;15717:9;15740:21;15505:19;:266::i;:::-;15474:297;;15782:29;15814:267;15847:19;15880:14;15908:19;15941:14;15969:1;16027:9;16050:21;15814:19;:267::i;:::-;15782:299;;16387:22;16399:9;16387:11;:22::i;:::-;16370:14;:39;16332:21;16327:1;16319:34;16282:20;16277:1;16269:33;16268:86;:142;16249:161;;;;15220:1197;;;;;;;:::o;1405:186:2:-;1528:20;1503:6;1081;1066:12;;:21;1058:56;;;;;-1:-1:-1;;;1058:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1058:56:2;;;;;;;;;;;;;;;1132:16;1141:6;1132:8;:16::i;:::-;1124:43;;;;;-1:-1:-1;;;1124:43:2;;;;;;;;;;;;-1:-1:-1;;;1124:43:2;;;;;;;;;;;;;;;-1:-1:-1;;1571:13:2::1;::::0;;;:5:::1;:13;::::0;;;;;;1405:186::o;6358:1459:9:-;6525:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;6548:16:9::1;::::0;;;:8:::1;:16;::::0;;;;:24:::1;;::::0;-1:-1:-1;;;;;6548:24:9::1;834:10:0;:18:::0;::::1;826:55;;;::::0;;-1:-1:-1;;;826:55:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;826:55:0;;;;;;;;;;;;;::::1;;1250:13:2::2;::::0;;;:5:::2;:13;::::0;;;;:15;;::::2;::::0;;::::2;::::0;;;6597:6:9;;6640:16:::3;::::0;;;:8:::3;:16;::::0;;;;:29:::3;;::::0;::::3;;:52;::::0;::::3;;;;;;;6619:151;;;;-1:-1:-1::0;;;6619:151:9::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6823:16;::::0;;;:8:::3;:16;::::0;;;;:26:::3;;::::0;6801:18;;:48:::3;6780:126;;;::::0;;-1:-1:-1;;;6780:126:9;;::::3;;::::0;::::3;::::0;::::3;::::0;;;;::::3;::::0;;;;;;;;;;;;;::::3;;6960:16;::::0;;;:8:::3;:16;::::0;;;;:26:::3;;::::0;6937:19;;:49:::3;6916:128;;;::::0;;-1:-1:-1;;;6916:128:9;;::::3;;::::0;::::3;::::0;;;;;;;::::3;::::0;;;;;;;;;;;;;::::3;;7059:9;7054:556;7078:16;::::0;;;:8:::3;:16;::::0;;;;:26:::3;;::::0;7074:30;::::3;7054:556;;;7229:16;::::0;;;:8:::3;:16;::::0;;;;:27:::3;;:30:::0;;7257:1;;7229:30;::::3;;;;;;;;;;;;;7211:11;7223:1;7211:14;;;;;;;;;;;;;;:48;7186:138;;;::::0;;-1:-1:-1;;;7186:138:9;;::::3;;::::0;::::3;::::0;::::3;::::0;;;;::::3;::::0;;;;;;;;;;;;;::::3;;7389:8;:16;7398:6;7389:16;;;;;;;;;;;:30;;:46;7420:11;7432:1;7420:14;;;;;;;;;::::0;;::::3;::::0;;;;;;;7389:46;;;::::3;::::0;;;;;;-1:-1:-1;7389:46:9;;::::3;;7384:216;;7504:4;7455:8;:16;7464:6;7455:16;;;;;;;;;;;:30;;:46;7486:11;7498:1;7486:14;;;;;;;;;;;;;;7455:46;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;7570:12;7583:1;7570:15;;;;;;;;;;;;;;7526:8;:16;7535:6;7526:16;;;;;;;;;;;:25;;:41;7552:11;7564:1;7552:14;;;;;;;;;;;;;;7526:41;;;;;;;;;;;:59;;;;7384:216;7106:3;;7054:556;;;-1:-1:-1::0;7651:18:9::3;7619:16:::0;;;:8:::3;:16;::::0;;;;;;;;:29:::3;::::0;::::3;:50:::0;;-1:-1:-1;;7619:50:9::3;::::0;;7713:15:::3;7679:31;::::0;::::3;:49:::0;7738:35:::3;;:37:::0;;7619:50;7738:37:::3;::::0;;7790:20;;;;;;;::::3;::::0;;;;;;;;::::3;891:1:0::2;989::2::1;6358:1459:9::0;;;;:::o;20469:196::-;20602:7;20577:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;-1:-1:-1;;20632:16:9::1;::::0;;;:8:::1;:16;::::0;;;;:26:::1;;::::0;;20469:196::o;21213:768::-;21349:7;21324:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;21409:18:9::1;21376:16:::0;;;:8:::1;:16;::::0;;;;:29:::1;;::::0;::::1;;:51;::::0;::::1;;;;;;;21372:103;;;-1:-1:-1::0;;;21443:21:9::1;;;;21372:103;21521:19;21488:16;::::0;;;:8:::1;:16;::::0;;;;:29:::1;;::::0;::::1;;:52;::::0;::::1;;;;;;;21484:105;;;-1:-1:-1::0;;;21556:22:9::1;;;;21484:105;21635:19;21602:16;::::0;;;:8:::1;:16;::::0;;;;:29:::1;;::::0;::::1;;:52;::::0;::::1;;;;;;;21598:105;;;-1:-1:-1::0;;;21670:22:9::1;;;;21598:105;21749:16;21716;::::0;;;:8:::1;:16;::::0;;;;:29:::1;;::::0;::::1;;:49;::::0;::::1;;;;;;;21712:99;;;-1:-1:-1::0;;;21781:19:9::1;;;;21712:99;21857:21;21824:16;::::0;;;:8:::1;:16;::::0;;;;:29:::1;;::::0;::::1;;:54;::::0;::::1;;;;;;;21820:109;;;-1:-1:-1::0;;;21894:24:9::1;;;;21820:109;21938:36;::::0;;-1:-1:-1;;;21938:36:9;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;21938:36:9;;;;;;;;;;;;;::::1;19836:209:::0;19978:7;19953:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;-1:-1:-1;;20008:16:9::1;::::0;;;:8:::1;:16;::::0;;;;;;;:30;;;:25:::1;::::0;;::::1;:30:::0;;;;;;19836:209::o;22510:227::-;22651:4;22626:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;22711:19:9::1;22678:52;::::0;16447:2226;16587:19;16889:16;;;:8;:16;;;;;;;;16946;;16960:1;16946:16;;;;;;;;;16587:19;;16650:28;;;;;;16587:19;;16650:28;;;;16946:16;;;;;;;;;;-1:-1:-1;16946:16:9;16916:46;;16988:1;:11;;;16972:10;16983:1;16972:13;;;;;;;;;;;;;:27;;;;;17025:1;:11;;;17009:10;17020:1;17009:13;;;;;;;;;;;;;;;;;:27;17142:14;;;;17174:15;;;;17227:11;;;;17256:20;;;;17294:11;;;;17105:235;;17142:14;;;17174:15;17207:2;;17227:11;;17323:3;17105:19;:235::i;:::-;17074:1;:16;;;:266;17046:10;17057:1;17046:13;;;;;;;;;;;;;:294;;;;;17433:1;:16;;;17417:10;17428:1;17417:13;;;;;;;;;;;;;;;;;:32;17491:26;;;1546:2;17491:26;;;;;;;;;17460:28;;17491:26;;;;;;;;;;-1:-1:-1;;17556:29:9;;;1546:2;17556:29;;;;;;;;;17460:57;;-1:-1:-1;17527:26:9;;17556:29;-1:-1:-1;17556:29:9;;;;;;;;;;-1:-1:-1;17556:29:9;17527:58;;17601:9;17596:205;17620:1;:11;;;17616:1;:15;17596:205;;;17672:8;:16;17681:6;17672:16;;;;;;;;;;;:30;;:47;17703:1;:12;;17716:1;17703:15;;;;;;;;;;;;;;;;17672:47;;;;;;;;;;;;;;;;;;;;;17652:14;17667:1;17652:17;;;;;;;;:67;;;:17;;;;;;;;;;:67;17748:16;;;;:8;:16;;;;;;17774:12;;;:15;;17748:25;;;;;:16;17787:1;;17774:15;;;;;;;;;;;;;;17748:42;;;;;;;;;;;;17733:9;17743:1;17733:12;;;;;;;;;;;;;;;;;:57;17633:3;;17596:205;;;-1:-1:-1;17911:20:9;;17945:14;;;;;;:36;;;;;;;;;17941:96;;;-1:-1:-1;;;;17941:96:9;18068:19;18050:14;;;;;;:37;;;;;;;;;18046:98;;;-1:-1:-1;;;;18046:98:9;18175:19;18157:14;;;;;;:37;;;;;;;;;18153:98;;;-1:-1:-1;;;;18153:98:9;18282:16;18264:14;;;;;;:34;;;;;;;;;18260:92;;;-1:-1:-1;;;;18260:92:9;18383:21;18365:14;;;;;;:39;;;;;;;;;18361:102;;;-1:-1:-1;;;;18361:102:9;18494:12;;;18520:9;;;18543:12;;;18473:193;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18494:12:9;;;;18520:9;;;;18569:14;;18597:9;;18620:12;;18646:10;;18473:193;;18543:12;;18473:193;;;18543:12;18473:193;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16447:2226;;;;;;;;;;:::o;8262:1337::-;8434:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;8457:16:9::1;::::0;;;:8:::1;:16;::::0;;;;:27;-1:-1:-1;;;;;8457:27:9::1;834:10:0;:18:::0;::::1;826:55;;;::::0;;-1:-1:-1;;;826:55:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;826:55:0;;;;;;;;;;;;;::::1;;1250:13:2::2;::::0;;;:5:::2;:13;::::0;;;;:15;;::::2;;::::0;;8509:6:9;;8552:16:::3;::::0;;;:8:::3;:16;::::0;;;;:29:::3;;::::0;::::3;;:51;::::0;::::3;;;;;;;8531:148;;;;-1:-1:-1::0;;;8531:148:9::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8723:16;::::0;;;:8:::3;:16;::::0;;;;:26:::3;;::::0;-1:-1:-1;;8723:30:9;8710:43;::::3;8689:129;;;;-1:-1:-1::0;;;8689:129:9::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8923:16;::::0;;;:8:::3;:16;::::0;;;;:27:::3;;:39:::0;;8951:10;;8923:39;::::3;;;;;;;;;;;;;8910:9;:52;8889:134;;;;-1:-1:-1::0;;;8889:134:9::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9068:16;::::0;;;:8:::3;:16;::::0;;;;:27:::3;;:43:::0;;9109:1:::3;9096:14:::0;::::3;::::0;9068:43;::::3;;;;;;;;;;;;;9054:10;:57;9033:140;;;;-1:-1:-1::0;;;9033:140:9::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9361:1;9349:9;9336:10;:22;:26;9328:64;;;::::0;;-1:-1:-1;;;9328:64:9;;::::3;;::::0;::::3;::::0;::::3;::::0;;;;::::3;::::0;;;;;;;;;;;;;::::3;;9402:36;9408:6;9416:9;9427:10;9402:5;:36::i;:::-;9448:16;::::0;;;:8:::3;:16;::::0;;;;;;;;:29:::3;::::0;::::3;:51:::0;;-1:-1:-1;;9448:51:9::3;9480:19;9448:51;::::0;;9543:15:::3;9509:31;::::0;;::::3;:49:::0;9573:19;;;;;;;::::3;::::0;;;;;;;;::::3;891:1:0::2;989::2::1;8262:1337:9::0;;;;;:::o;1289:110:2:-;1353:4;1377:14;;;:6;:14;;;;;;;;;1289:110::o;1597:118::-;1676:5;1659:14;;;:6;:14;;;;;;;;:22;;-1:-1:-1;;1659:22:2;;;1691:5;:13;;;;;:17;1597:118::o;20051:192:9:-;20176:7;20151:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;20206:16:9::1;::::0;;;:8:::1;:16;::::0;;;;:27:::1;;:30:::0;;20234:1;;20206:30;::::1;;;;;;;;;;;;;20199:37;;20051:192:::0;;;;;:::o;9657:1502::-;9741:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;1250:13:::1;::::0;;;:5:::1;:13;::::0;;;;;;;:15;;::::1;;::::0;;9937:8:9::2;:16:::0;;;;;:29:::2;::::0;::::2;::::0;9988:30:::2;::::0;::::2;::::0;10108:26:::2;::::0;::::2;::::0;10156:35:::2;::::0;::::2;::::0;10213:26;;;::::2;::::0;9772:6;;1250:13:2;9896:422:9::2;::::0;9937:29:::2;::::0;;::::2;::::0;10040:2:::2;::::0;10261:3:::2;9896:19;:422::i;:::-;9846:16;::::0;;;:8:::2;:16;::::0;;;;:31:::2;::::0;::::2;::::0;10362:27;;9846:472;::::2;9816:15;:502;::::0;-1:-1:-1;;;;;;10362:27:9::2;10348:10;:41;10347:113:::0;::::2;;;-1:-1:-1::0;10440:19:9::2;10407:16;::::0;;;:8:::2;:16;::::0;;;;:29:::2;;::::0;::::2;;:52;::::0;::::2;;;;;;;10347:113;:142;;;;;10476:13;10347:142;10330:377;;;10514:16;::::0;;;:8:::2;:16;::::0;;;;:29:::2;;:51:::0;;10546:19:::2;::::0;10514:29;-1:-1:-1;;10514:51:9::2;::::0;10546:19;10514:51:::2;;;;;;10579:18;10590:6;10579:10;:18::i;:::-;10645:16;::::0;;;:8:::2;:16;::::0;;;;:29:::2;;::::0;10616:60:::2;::::0;10631:6;;10645:29:::2;;10639:36;::::0;::::2;;;;;;10616:60;::::0;;;;;::::2;::::0;;::::2;;::::0;::::2;::::0;;;;;;;;;::::2;10690:7;;;10330:377;10748:16;::::0;;;:8:::2;:16;::::0;;;;:24:::2;;::::0;-1:-1:-1;;;;;10748:24:9::2;10734:10;:38;10733:109:::0;::::2;;;-1:-1:-1::0;10823:18:9::2;10790:16:::0;;;:8:::2;:16;::::0;;;;:29:::2;;::::0;::::2;;:51;::::0;::::2;;;;;;;10733:109;:138;;;;;10858:13;10733:138;10716:370;;;10896:16;::::0;;;10928::::2;10896;::::0;;;;;;;:29:::2;;:48:::0;;-1:-1:-1;;10896:48:9::2;::::0;10928:16;10896:48:::2;::::0;10716:370:::2;11095:57;;-1:-1:-1::0;;;11095:57:9::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1275:1:2;989::::1;9657:1502:9::0;;:::o;22277:227::-;22418:4;22393:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;22478:19:9::1;22445:52;::::0;20938:269;-1:-1:-1;;21114:16:9;;;21128:1;21114:16;;;;;;21161;;;;;;;;;21114;20938:269::o;22743:221::-;22881:4;22856:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;22941:16:9::1;22908:49;::::0;24842:265;24895:9;24934:3;24948:73;24955:6;;24948:73;;24986:1;24981:6;;;;;-1:-1:-1;;25001:9:9;24948:73;;;25099:1;25088:7;25082:3;:13;25081:19;;;;;;;24842:265;-1:-1:-1;;;24842:265:9:o;23360:1394::-;23513:9;23500:10;:22;23479:111;;;;-1:-1:-1;;;23479:111:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23600:9;23701:16;;;:8;:16;;;;;:26;;;23644:22;;;;-1:-1:-1;;23701:30:9;23879:1;:18;;23862:35;;23858:824;;;23922:1;23918:5;;23913:278;23929:14;23925:1;:18;23913:278;;;23988:10;23984:1;23972:9;:13;:26;23968:209;;;24022:16;;;;:8;:16;;;;;:27;;:30;;24055:13;;;;24022:27;24067:1;;24022:30;;;;;;;;;;;;;;;:46;23968:209;;;24115:16;;;;:8;:16;;;;;:27;;:30;;24148:10;;24115:27;24143:1;;24115:30;;;;;;;;;;;;;;;:43;23968:209;23945:3;;;;;23913:278;;;23858:824;;;24469:22;24511:14;24494;:31;;;;;;24469:56;;24548:1;24544:5;;24539:133;24555:14;24551:1;:18;24539:133;;;24594:16;;;;:8;:16;;;;;:27;;:30;;24639:18;;;24627:30;;;24594:27;24639:1;;24594:30;;;;;;;;;;;;;;;:63;24571:3;;;;;24539:133;;;23858:824;;24691:16;;;;:8;:16;;;;;:27;;:43;;24737:10;;24691:27;24719:14;;24691:43;;;;;;;;;;;;;;;:56;-1:-1:-1;;;;;;23360:1394:9:o;13307:1305::-;13590:7;13697:28;13769:19;13753:14;:35;13728:9;:61;;;;;;;-1:-1:-1;13804:24:9;;13800:121;;-1:-1:-1;;13891:18:9;;13867:43;13800:121;13945:18;13935:6;:28;;;;;;;;;13931:208;;;14114:14;14090:4;14042:44;;;14041:53;;14002:19;:93;:126;13979:149;;;;;13931:208;14162:19;14152:6;:29;;;;;;;;;14148:209;;;14332:14;14308:4;14260:44;;;14259:53;;14148:209;14393:16;14383:6;:26;;;;;;;;;:71;;;-1:-1:-1;14435:19:9;14425:6;:29;;;;;;;;;14383:71;:118;;;-1:-1:-1;14480:21:9;14470:6;:31;;;;;;;;;14383:118;14366:194;;;14533:1;14526:8;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "2051000",
        "executionCost": "7184",
        "totalCost": "2058184"
      },
      "external": {
        "claimVictoryByTime(uint256)": "infinite",
        "currentIndex()": "1044",
        "deactivate(uint256)": "26181",
        "divergenceTime(uint256)": "infinite",
        "getCurrentState(uint256)": "infinite",
        "getMaxInstanceDuration(uint256,uint256,uint256,uint256,uint256)": "infinite",
        "getNonce(uint256)": "infinite",
        "getPartitionGameIndex(uint256)": "infinite",
        "getQuerySize(uint256)": "infinite",
        "getState(uint256,address)": "infinite",
        "getSubInstances(uint256,address)": "678",
        "instantiate(address,address,bytes32,bytes32,uint256,uint256,uint256)": "infinite",
        "isActive(uint256)": "1251",
        "isConcerned(uint256,address)": "2160",
        "log2OverTwo(uint256)": "infinite",
        "makeQuery(uint256,uint256,uint256,uint256)": "infinite",
        "presentDivergence(uint256,uint256)": "infinite",
        "queryArray(uint256,uint256)": "infinite",
        "replyQuery(uint256,uint256[],bytes32[])": "infinite",
        "stateIsChallengerWon(uint256)": "infinite",
        "stateIsClaimerWon(uint256)": "infinite",
        "stateIsDivergenceFound(uint256)": "infinite",
        "stateIsWaitingHashes(uint256)": "infinite",
        "stateIsWaitingQuery(uint256)": "infinite",
        "timeHash(uint256,uint256)": "infinite",
        "timeSubmitted(uint256,uint256)": "infinite"
      },
      "internal": {
        "getMaxStateDuration(enum PartitionInterface.state,uint256,uint256,uint256,uint256,uint256,uint256)": "infinite",
        "slice(uint256,uint256,uint256)": "infinite"
      }
    },
    "methodIdentifiers": {
      "claimVictoryByTime(uint256)": "a2dc7973",
      "currentIndex()": "26987b60",
      "deactivate(uint256)": "916b9bef",
      "divergenceTime(uint256)": "326ff2f5",
      "getCurrentState(uint256)": "5748c130",
      "getMaxInstanceDuration(uint256,uint256,uint256,uint256,uint256)": "370f31aa",
      "getNonce(uint256)": "3d46b819",
      "getPartitionGameIndex(uint256)": "00446386",
      "getQuerySize(uint256)": "41fde16f",
      "getState(uint256,address)": "73df1612",
      "getSubInstances(uint256,address)": "c526656c",
      "instantiate(address,address,bytes32,bytes32,uint256,uint256,uint256)": "3562820d",
      "isActive(uint256)": "82afd23b",
      "isConcerned(uint256,address)": "01ff62ab",
      "log2OverTwo(uint256)": "daaadf4e",
      "makeQuery(uint256,uint256,uint256,uint256)": "823bb67c",
      "presentDivergence(uint256,uint256)": "0c0be5a6",
      "queryArray(uint256,uint256)": "a2c58835",
      "replyQuery(uint256,uint256[],bytes32[])": "402f0205",
      "stateIsChallengerWon(uint256)": "6547429e",
      "stateIsClaimerWon(uint256)": "d0a068cf",
      "stateIsDivergenceFound(uint256)": "1d9f2d77",
      "stateIsWaitingHashes(uint256)": "a91565df",
      "stateIsWaitingQuery(uint256)": "1d0cda78",
      "timeHash(uint256,uint256)": "60696f81",
      "timeSubmitted(uint256,uint256)": "224de3ea"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_state\",\"type\":\"uint8\"}],\"name\":\"ChallengeEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_timeOfDivergence\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_hashAtDivergenceTime\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_hashRigthAfterDivergenceTime\",\"type\":\"bytes32\"}],\"name\":\"DivergenceFound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"HashesPosted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"PartitionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"QueryPosted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"claimVictoryByTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"deactivate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"divergenceTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getCurrentState\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_roundDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timeToStartMachine\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_partitionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxCycle\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_picoSecondsToRunInsn\",\"type\":\"uint256\"}],\"name\":\"getMaxInstanceDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getPartitionGameIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getQuerySize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getState\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_challenger\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_queryArray\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"_submittedArray\",\"type\":\"bool[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"_hashArray\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"_currentState\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"_uintValues\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getSubInstances\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_challenger\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_initialHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_claimerFinalHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_finalTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_querySize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_roundDuration\",\"type\":\"uint256\"}],\"name\":\"instantiate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isConcerned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"log2OverTwo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"queryPiece\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"leftPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rightPoint\",\"type\":\"uint256\"}],\"name\":\"makeQuery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_divergenceTime\",\"type\":\"uint256\"}],\"name\":\"presentDivergence\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"queryArray\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"postedTimes\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"postedHashes\",\"type\":\"bytes32[]\"}],\"name\":\"replyQuery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"stateIsChallengerWon\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"stateIsClaimerWon\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"stateIsDivergenceFound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"stateIsWaitingHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"stateIsWaitingQuery\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"key\",\"type\":\"uint256\"}],\"name\":\"timeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"key\",\"type\":\"uint256\"}],\"name\":\"timeSubmitted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getMaxInstanceDuration(uint256,uint256,uint256,uint256,uint256)\":{\"params\":{\"_maxCycle\":\"number of instructions until the machine is forcibly halted\",\"_picoSecondsToRunInsn\":\"time the offchain will take to run one instruction\"}},\"instantiate(address,address,bytes32,bytes32,uint256,uint256,uint256)\":{\"params\":{\"_challenger\":\"address of the challenger.\",\"_claimer\":\"address of the claimer.\",\"_claimerFinalHash\":\"final hash claimed by claimer\",\"_finalTime\":\"max cycle of the machine for that computation\",\"_initialHash\":\"hash in which both claimer and challenger agree on\",\"_querySize\":\"size of postedHashes and postedTimes\",\"_roundDuration\":\"duration of the round (security param)\"},\"returns\":{\"_0\":\"Partition index.\"}},\"makeQuery(uint256,uint256,uint256,uint256)\":{\"params\":{\"leftPoint\":\"confirmation of the leftPoint of the interval to be split. Should be an aggreement point.\",\"queryPiece\":\"is the index of queryArray corresponding to the left limit of the next interval to be queried.\",\"rightPoint\":\"confirmation of the rightPoint of the interval to be split. Should be a disagreement point.\"}},\"presentDivergence(uint256,uint256)\":{\"params\":{\"_divergenceTime\":\"The time when the divergence happended. It should be a point of aggreement, while _divergenceTime + 1 should be a point of disagreement (both queried).\"}},\"replyQuery(uint256,uint256[],bytes32[])\":{\"params\":{\"postedHashes\":\"An array (of size querySize) with the hashes corresponding to the queried times\",\"postedTimes\":\"An array (of size querySize) with the times that have been queried.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimVictoryByTime(uint256)\":{\"notice\":\"Claim victory for opponent timeout.\"},\"instantiate(address,address,bytes32,bytes32,uint256,uint256,uint256)\":{\"notice\":\"Instantiate a partition instance.\"},\"makeQuery(uint256,uint256,uint256,uint256)\":{\"notice\":\"Makes a query (only challenger can call it).\"},\"presentDivergence(uint256,uint256)\":{\"notice\":\"Present a precise time of divergence (can only be called by challenger).\"},\"replyQuery(uint256,uint256[],bytes32[])\":{\"notice\":\"Answer the query (only claimer can call it).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PartitionInstantiator.sol\":\"PartitionInstantiator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@cartesi/util/contracts/Decorated.sol\":{\"content\":\"// Copyright 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity ^0.7.0;\\n\\n\\ncontract Decorated {\\n    // This contract defines several modifiers but does not use\\n    // them - they will be used in derived contracts.\\n    modifier onlyBy(address user) {\\n        require(msg.sender == user, \\\"Cannot be called by user\\\");\\n        _;\\n    }\\n\\n    modifier onlyAfter(uint256 time) {\\n        require(block.timestamp > time, \\\"Cannot be called now\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xdbba019b8f7f93b212a5bbae402ee988321c4fa82ed2b4c9e55b4d7ddf35dcc3\",\"license\":\"Apache-2.0\"},\"@cartesi/util/contracts/Instantiator.sol\":{\"content\":\"// Copyright 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\npragma solidity ^0.7.0;\\n\\n\\ninterface Instantiator {\\n\\n    modifier onlyInstantiated(uint256 _index) virtual;\\n\\n    modifier onlyActive(uint256 _index) virtual;\\n\\n    modifier increasesNonce(uint256 _index) virtual;\\n\\n    function isActive(uint256 _index) external view returns (bool);\\n\\n    function getNonce(uint256 _index) external view returns (uint256);\\n\\n    function isConcerned(uint256 _index, address _user) external view returns (bool);\\n\\n    function getSubInstances(uint256 _index, address) external view returns (address[] memory _addresses, uint256[] memory _indices);\\n\\n    function deactivate(uint256 _index) external;\\n}\\n\",\"keccak256\":\"0x084e3e769f423b3f32bd8faf119be132a478eeea8006bed69b527b2fdcfd45a1\",\"license\":\"Apache-2.0\"},\"@cartesi/util/contracts/InstantiatorImpl.sol\":{\"content\":\"// Copyright 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"./Instantiator.sol\\\";\\n\\nabstract contract InstantiatorImpl is Instantiator {\\n    uint256 public currentIndex = 0;\\n\\n    mapping(uint256 => bool) internal active;\\n    mapping(uint256 => uint256) internal nonce;\\n\\n    modifier onlyInstantiated(uint256 _index) override {\\n        require(currentIndex > _index, \\\"Index not instantiated\\\");\\n        _;\\n    }\\n\\n    modifier onlyActive(uint256 _index) override {\\n        require(currentIndex > _index, \\\"Index not instantiated\\\");\\n        require(isActive(_index), \\\"Index inactive\\\");\\n        _;\\n    }\\n\\n    modifier increasesNonce(uint256 _index) override {\\n        nonce[_index]++;\\n        _;\\n    }\\n\\n    function isActive(uint256 _index) public override view returns (bool) {\\n        return (active[_index]);\\n    }\\n\\n    function getNonce(uint256 _index)\\n        public\\n        override\\n        view\\n        onlyActive(_index)\\n        returns (uint256 currentNonce)\\n    {\\n        return nonce[_index];\\n    }\\n\\n    function deactivate(uint256 _index) public override {\\n        active[_index] = false;\\n        nonce[_index] = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xc1db237a28042f74224ae2d4398616fb670ce87709ffd8505c142cddedee6954\",\"license\":\"Apache-2.0\"},\"contracts/PartitionInstantiator.sol\":{\"content\":\"// Copyright (C) 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: GPL-3.0-only\\n// This program is free software: you can redistribute it and/or modify it under\\n// the terms of the GNU General Public License as published by the Free Software\\n// Foundation, either version 3 of the License, or (at your option) any later\\n// version.\\n\\n// This program is distributed in the hope that it will be useful, but WITHOUT ANY\\n// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\\n// PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n\\n// You should have received a copy of the GNU General Public License\\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n\\n// Note: This component currently has dependencies that are licensed under the GNU\\n// GPL, version 3, and so you should treat this component as a whole as being under\\n// the GPL version 3. But all Cartesi-written code in this component is licensed\\n// under the Apache License, version 2, or a compatible permissive license, and can\\n// be used independently under the Apache v2 license. After this component is\\n// rewritten, the entire component will be released under the Apache v2 license.\\n\\n/// @title Partition instantiator\\npragma solidity ^0.7.0;\\n\\nimport \\\"@cartesi/util/contracts/InstantiatorImpl.sol\\\";\\nimport \\\"@cartesi/util/contracts/Decorated.sol\\\";\\nimport \\\"./PartitionInterface.sol\\\";\\n\\ncontract PartitionInstantiator is\\n    InstantiatorImpl,\\n    Decorated,\\n    PartitionInterface\\n{\\n    uint256 constant MAX_QUERY_SIZE = 20;\\n\\n    // IMPLEMENT GARBAGE COLLECTOR AFTER AN INSTACE IS FINISHED!\\n    struct PartitionCtx {\\n        address challenger;\\n        address claimer;\\n        uint256 finalTime; // hashes provided between 0 and finalTime (inclusive)\\n        mapping(uint256 => bool) timeSubmitted; // marks a time as submitted\\n        mapping(uint256 => bytes32) timeHash; // hashes are signed by claimer\\n        uint256 querySize;\\n        uint256[] queryArray;\\n        uint256 timeOfLastMove;\\n        uint256 roundDuration;\\n        uint256 partitionGameIndex; // number of interactions that already happened in the partition interaction\\n        state currentState;\\n        uint256 divergenceTime;\\n    }\\n\\n    //Swap internal/private when done with testing\\n    mapping(uint256 => PartitionCtx) internal instance;\\n\\n    // These are the possible states and transitions of the contract.\\n    //\\n    //          +---+\\n    //          |   |\\n    //          +---+\\n    //            |\\n    //            | instantiate\\n    //            v\\n    //          +---------------+  claimVictoryByTimeout  +---------------+\\n    //          | WaitingHashes |------------------------>| ChallengerWon |\\n    //          +---------------+                         +---------------+\\n    //            |  ^\\n    // replyQuery |  | makeQuery\\n    //            v  |\\n    //          +--------------+   claimVictoryByTimeout  +------------+\\n    //          | WaitingQuery |------------------------->| ClaimerWon |\\n    //          +--------------+                          +------------+\\n    //            |\\n    //            | presentDivergence\\n    //            v\\n    //          +-----------------+\\n    //          | DivergenceFound |\\n    //          +-----------------+\\n    //\\n\\n    event PartitionCreated(uint256 _index);\\n    event QueryPosted(uint256 _index);\\n    event HashesPosted(uint256 _index);\\n    event ChallengeEnded(uint256 _index, uint8 _state);\\n    event DivergenceFound(\\n        uint256 _index,\\n        uint256 _timeOfDivergence,\\n        bytes32 _hashAtDivergenceTime,\\n        bytes32 _hashRigthAfterDivergenceTime\\n    );\\n\\n    /// @notice Instantiate a partition instance.\\n    /// @param _challenger address of the challenger.\\n    /// @param _claimer address of the claimer.\\n    /// @param _initialHash hash in which both claimer and challenger agree on\\n    /// @param _claimerFinalHash final hash claimed by claimer\\n    /// @param _finalTime max cycle of the machine for that computation\\n    /// @param _querySize size of postedHashes and postedTimes\\n    /// @param _roundDuration duration of the round (security param)\\n    /// @return Partition index.\\n    function instantiate(\\n        address _challenger,\\n        address _claimer,\\n        bytes32 _initialHash,\\n        bytes32 _claimerFinalHash,\\n        uint256 _finalTime,\\n        uint256 _querySize,\\n        uint256 _roundDuration\\n    ) public override returns (uint256) {\\n        require(\\n            _challenger != _claimer,\\n            \\\"Challenger and claimer have the same address\\\"\\n        );\\n        require(_finalTime > 0, \\\"Final Time has to be bigger than zero\\\");\\n        require(_querySize > 2, \\\"Query Size must be bigger than 2\\\");\\n        require(\\n            _querySize < MAX_QUERY_SIZE,\\n            \\\"Query Size must be less than max\\\"\\n        );\\n        require(\\n            _roundDuration > 50,\\n            \\\"Round Duration has to be greater than 50 seconds\\\"\\n        );\\n        instance[currentIndex].challenger = _challenger;\\n        instance[currentIndex].claimer = _claimer;\\n        instance[currentIndex].finalTime = _finalTime;\\n        instance[currentIndex].timeSubmitted[0] = true;\\n        instance[currentIndex].timeSubmitted[_finalTime] = true;\\n        instance[currentIndex].timeHash[0] = _initialHash;\\n        instance[currentIndex].timeHash[_finalTime] = _claimerFinalHash;\\n        instance[currentIndex].querySize = _querySize;\\n        // Creates queryArray with the correct size\\n        instance[currentIndex].queryArray = new uint256[](\\n            instance[currentIndex].querySize\\n        );\\n        // slice the interval, placing the separators in queryArray\\n        slice(currentIndex, 0, instance[currentIndex].finalTime);\\n        instance[currentIndex].roundDuration = _roundDuration;\\n        instance[currentIndex].timeOfLastMove = block.timestamp;\\n        instance[currentIndex].currentState = state.WaitingHashes;\\n        emit PartitionCreated(currentIndex);\\n        emit QueryPosted(currentIndex);\\n\\n        active[currentIndex] = true;\\n        return currentIndex++;\\n    }\\n\\n    /// @notice Answer the query (only claimer can call it).\\n    /// @param postedTimes An array (of size querySize) with the times that have\\n    /// been queried.\\n    /// @param postedHashes An array (of size querySize) with the hashes\\n    /// corresponding to the queried times\\n    function replyQuery(\\n        uint256 _index,\\n        uint256[] memory postedTimes,\\n        bytes32[] memory postedHashes\\n    )\\n        public\\n        onlyInstantiated(_index)\\n        onlyBy(instance[_index].claimer)\\n        increasesNonce(_index)\\n    {\\n        require(\\n            instance[_index].currentState == state.WaitingHashes,\\n            \\\"CurrentState is not WaitingHashes, cannot replyQuery\\\"\\n        );\\n        require(\\n            postedTimes.length == instance[_index].querySize,\\n            \\\"postedTimes.length != querySize\\\"\\n        );\\n        require(\\n            postedHashes.length == instance[_index].querySize,\\n            \\\"postedHashes.length != querySize\\\"\\n        );\\n        for (uint256 i = 0; i < instance[_index].querySize; i++) {\\n            // make sure the claimer knows the current query\\n            require(\\n                postedTimes[i] == instance[_index].queryArray[i],\\n                \\\"postedTimes[i] != queryArray[i]\\\"\\n            );\\n            // cannot rewrite previous answer\\n            if (!instance[_index].timeSubmitted[postedTimes[i]]) {\\n                instance[_index].timeSubmitted[postedTimes[i]] = true;\\n                instance[_index].timeHash[postedTimes[i]] = postedHashes[i];\\n            }\\n        }\\n        instance[_index].currentState = state.WaitingQuery;\\n        instance[_index].timeOfLastMove = block.timestamp;\\n        instance[_index].partitionGameIndex++;\\n        emit HashesPosted(_index);\\n    }\\n\\n    /// @notice Makes a query (only challenger can call it).\\n    /// @param queryPiece is the index of queryArray corresponding to the left\\n    /// limit of the next interval to be queried.\\n    /// @param leftPoint confirmation of the leftPoint of the interval to be\\n    /// split. Should be an aggreement point.\\n    /// @param rightPoint confirmation of the rightPoint of the interval to be\\n    /// split. Should be a disagreement point.\\n    function makeQuery(\\n        uint256 _index,\\n        uint256 queryPiece,\\n        uint256 leftPoint,\\n        uint256 rightPoint\\n    )\\n        public\\n        onlyInstantiated(_index)\\n        onlyBy(instance[_index].challenger)\\n        increasesNonce(_index)\\n    {\\n        require(\\n            instance[_index].currentState == state.WaitingQuery,\\n            \\\"CurrentState is not WaitingQuery, cannot makeQuery\\\"\\n        );\\n        require(\\n            queryPiece < instance[_index].querySize - 1,\\n            \\\"queryPiece is bigger than querySize - 1\\\"\\n        );\\n        // make sure the challenger knows the previous query\\n        require(\\n            leftPoint == instance[_index].queryArray[queryPiece],\\n            \\\"leftPoint != queryArray[queryPiece]\\\"\\n        );\\n        require(\\n            rightPoint == instance[_index].queryArray[queryPiece + 1],\\n            \\\"rightPoint != queryArray[queryPiece]\\\"\\n        );\\n        // no unitary queries. in unitary case, present divergence instead.\\n        // by avoiding unitary queries one forces the contest to end\\n        require(rightPoint - leftPoint > 1, \\\"Interval is less than one\\\");\\n        slice(_index, leftPoint, rightPoint);\\n        instance[_index].currentState = state.WaitingHashes;\\n        instance[_index].timeOfLastMove = block.timestamp;\\n        emit QueryPosted(_index);\\n    }\\n\\n    /// @notice Claim victory for opponent timeout.\\n    function claimVictoryByTime(uint256 _index)\\n        public\\n        onlyInstantiated(_index)\\n        increasesNonce(_index)\\n    {\\n        bool afterDeadline = (block.timestamp >\\n            instance[_index].timeOfLastMove +\\n                getMaxStateDuration(\\n                    instance[_index].currentState,\\n                    instance[_index].roundDuration,\\n                    40, // time to build machine for the first time\\n                    instance[_index].querySize,\\n                    instance[_index].partitionGameIndex,\\n                    instance[_index].finalTime,\\n                    500 // 500 pico seconds per instruction\\n                ));\\n\\n        if (\\n            (msg.sender == instance[_index].challenger) &&\\n            (instance[_index].currentState == state.WaitingHashes) &&\\n            afterDeadline\\n        ) {\\n            instance[_index].currentState = state.ChallengerWon;\\n            deactivate(_index);\\n            emit ChallengeEnded(_index, uint8(instance[_index].currentState));\\n            return;\\n        }\\n        if (\\n            (msg.sender == instance[_index].claimer) &&\\n            (instance[_index].currentState == state.WaitingQuery) &&\\n            afterDeadline\\n        ) {\\n            instance[_index].currentState = state.ClaimerWon;\\n            deactivate(_index);\\n            emit ChallengeEnded(_index, uint8(instance[_index].currentState));\\n            return;\\n        }\\n        revert(\\\"Fail to ClaimVictoryByTime in current condition\\\");\\n    }\\n\\n    /// @notice Present a precise time of divergence (can only be called by\\n    /// challenger).\\n    /// @param _divergenceTime The time when the divergence happended. It\\n    /// should be a point of aggreement, while _divergenceTime + 1 should be a\\n    /// point of disagreement (both queried).\\n    function presentDivergence(uint256 _index, uint256 _divergenceTime)\\n        public\\n        onlyInstantiated(_index)\\n        onlyBy(instance[_index].challenger)\\n        increasesNonce(_index)\\n    {\\n        require(\\n            _divergenceTime < instance[_index].finalTime,\\n            \\\"divergence time has to be less than finalTime\\\"\\n        );\\n        require(\\n            instance[_index].timeSubmitted[_divergenceTime],\\n            \\\"divergenceTime has to have been submitted\\\"\\n        );\\n        require(\\n            instance[_index].timeSubmitted[_divergenceTime + 1],\\n            \\\"divergenceTime + 1 has to have been submitted\\\"\\n        );\\n\\n        instance[_index].divergenceTime = _divergenceTime;\\n        instance[_index].currentState = state.DivergenceFound;\\n        deactivate(_index);\\n        emit ChallengeEnded(_index, uint8(instance[_index].currentState));\\n        emit DivergenceFound(\\n            _index,\\n            instance[_index].divergenceTime,\\n            instance[_index].timeHash[instance[_index].divergenceTime],\\n            instance[_index].timeHash[instance[_index].divergenceTime + 1]\\n        );\\n    }\\n\\n    /// @notice Get the worst case scenario duration for a specific state\\n    /// @param _roundDuration security parameter, the max time an agent\\n    //          has to react and submit one simple transaction\\n    /// @param _timeToStartMachine time to build the machine for the first time\\n    /// @param _partitionSize size of partition, how many instructions the\\n    //          will run to reach the necessary hash\\n    /// @param _partitionGameIndex number of interactions that already happened\\n    //          in the partition interaction\\n    /// @param _maxCycle number of instructions until the machine is forcibly halted\\n    /// @param _picoSecondsToRunInsn time the offchain will take to run one instruction\\n    function getMaxStateDuration(\\n        state _state,\\n        uint256 _roundDuration,\\n        uint256 _timeToStartMachine,\\n        uint256 _partitionSize,\\n        uint256 _partitionGameIndex,\\n        uint256 _maxCycle,\\n        uint256 _picoSecondsToRunInsn\\n    ) private pure returns (uint256) {\\n        // TO-DO: when we have DUMP then we can remove the partitionSize - 1 multiplier\\n        uint256 currentPartitionSize = _maxCycle /\\n            (_partitionSize**_partitionGameIndex);\\n\\n        if (_partitionGameIndex != 0) {\\n            currentPartitionSize = currentPartitionSize * (_partitionSize - 1);\\n        }\\n\\n        if (_state == state.WaitingQuery) {\\n            return\\n                _timeToStartMachine +\\n                ((currentPartitionSize * _picoSecondsToRunInsn) / 1e12) +\\n                _roundDuration;\\n        }\\n        if (_state == state.WaitingHashes) {\\n            return\\n                _timeToStartMachine +\\n                ((currentPartitionSize * _picoSecondsToRunInsn) / 1e12) +\\n                _roundDuration;\\n        }\\n        if (\\n            _state == state.ClaimerWon ||\\n            _state == state.ChallengerWon ||\\n            _state == state.DivergenceFound\\n        ) {\\n            return 0; // final state\\n        }\\n        require(false, \\\"Unrecognized state\\\");\\n    }\\n\\n    /// @notice Get the worst case scenario duration for an instance of this contract\\n    /// @param _roundDuration security parameter, the max time an agent\\n    //          has to react and submit one simple transaction\\n    /// @param _timeToStartMachine time to build the machine for the first time\\n    /// @param _partitionSize size of partition, how many instructions the\\n    //          will run to reach the necessary hash\\n    /// @param _maxCycle number of instructions until the machine is forcibly halted\\n    /// @param _picoSecondsToRunInsn time the offchain will take to run one instruction\\n    function getMaxInstanceDuration(\\n        uint256 _roundDuration,\\n        uint256 _timeToStartMachine,\\n        uint256 _partitionSize,\\n        uint256 _maxCycle,\\n        uint256 _picoSecondsToRunInsn\\n    ) public override pure returns (uint256) {\\n        uint256 waitingQueryDuration = getMaxStateDuration(\\n            state.WaitingQuery,\\n            _roundDuration,\\n            _timeToStartMachine,\\n            _partitionSize,\\n            0, //_partitionGameIndex \\\"worst case\\\" is zero\\n            _maxCycle,\\n            _picoSecondsToRunInsn\\n        );\\n\\n        uint256 waitingHashesDuration = getMaxStateDuration(\\n            state.WaitingHashes,\\n            _roundDuration,\\n            _timeToStartMachine,\\n            _partitionSize,\\n            0, //_partitionGameIndex \\\"worst case\\\" is zero\\n            _maxCycle,\\n            _picoSecondsToRunInsn\\n        );\\n\\n        // TO-DO: When we have DUMP this should be 2 should be 1 / (1 - 1/querySize)\\n        // also has to add the round duration for each state transition\\n        return\\n            (uint256(2) * waitingQueryDuration) +\\n            (uint256(2) * waitingHashesDuration) +\\n            (_roundDuration * log2OverTwo(_maxCycle));\\n    }\\n\\n    // Getters methods\\n\\n    function getState(uint256 _index, address)\\n        public\\n        view\\n        returns (\\n            //onlyInstantiated(_index)\\n            address _challenger,\\n            address _claimer,\\n            uint256[] memory _queryArray,\\n            bool[] memory _submittedArray,\\n            bytes32[] memory _hashArray,\\n            bytes32 _currentState,\\n            uint256[] memory _uintValues\\n        )\\n    {\\n        PartitionCtx storage i = instance[_index];\\n\\n        uint256[] memory uintValues = new uint256[](4);\\n        uintValues[0] = i.finalTime;\\n        uintValues[1] = i.querySize;\\n        uintValues[2] =\\n            i.timeOfLastMove +\\n            getMaxStateDuration(\\n                i.currentState,\\n                i.roundDuration,\\n                40,\\n                i.querySize,\\n                i.partitionGameIndex,\\n                i.finalTime,\\n                500\\n            ); //deadline (40 seconds to build machine, 500 pico seconds per insn\\n        uintValues[3] = i.divergenceTime;\\n\\n        bool[] memory submittedArray = new bool[](MAX_QUERY_SIZE);\\n        bytes32[] memory hashArray = new bytes32[](MAX_QUERY_SIZE);\\n\\n        for (uint256 j = 0; j < i.querySize; j++) {\\n            submittedArray[j] = instance[_index].timeSubmitted[i.queryArray[j]];\\n            hashArray[j] = instance[_index].timeHash[i.queryArray[j]];\\n        }\\n\\n        // we have to duplicate the code for getCurrentState because of\\n        // \\\"stack too deep\\\"\\n        bytes32 currentState;\\n        if (i.currentState == state.WaitingQuery) {\\n            currentState = \\\"WaitingQuery\\\";\\n        }\\n        if (i.currentState == state.WaitingHashes) {\\n            currentState = \\\"WaitingHashes\\\";\\n        }\\n        if (i.currentState == state.ChallengerWon) {\\n            currentState = \\\"ChallengerWon\\\";\\n        }\\n        if (i.currentState == state.ClaimerWon) {\\n            currentState = \\\"ClaimerWon\\\";\\n        }\\n        if (i.currentState == state.DivergenceFound) {\\n            currentState = \\\"DivergenceFound\\\";\\n        }\\n\\n        return (\\n            i.challenger,\\n            i.claimer,\\n            i.queryArray,\\n            submittedArray,\\n            hashArray,\\n            currentState,\\n            uintValues\\n        );\\n    }\\n\\n    /*\\n    function challenger(uint256 _index) public view returns (address) {\\n        return instance[_index].challenger;\\n    }\\n\\n    function claimer(uint256 _index) public view returns (address) {\\n        return instance[_index].claimer;\\n    }\\n\\n    function finalTime(uint256 _index) public view returns (uint) {\\n        return instance[_index].finalTime;\\n    }\\n\\n    function querySize(uint256 _index) public view returns (uint) {\\n        return instance[_index].querySize;\\n    }\\n\\n    function timeOfLastMove(uint256 _index) public view returns (uint) {\\n        return instance[_index].timeOfLastMove;\\n    }\\n\\n    function roundDuration(uint256 _index) public view returns (uint) {\\n        return instance[_index].roundDuration;\\n    }\\n    */\\n    function divergenceTime(uint256 _index)\\n        public\\n        override\\n        view\\n        onlyInstantiated(_index)\\n        returns (uint256)\\n    {\\n        return instance[_index].divergenceTime;\\n    }\\n\\n    function timeSubmitted(uint256 _index, uint256 key)\\n        public\\n        view\\n        onlyInstantiated(_index)\\n        returns (bool)\\n    {\\n        return instance[_index].timeSubmitted[key];\\n    }\\n\\n    function timeHash(uint256 _index, uint256 key)\\n        public\\n        override\\n        view\\n        onlyInstantiated(_index)\\n        returns (bytes32)\\n    {\\n        return instance[_index].timeHash[key];\\n    }\\n\\n    function queryArray(uint256 _index, uint256 i)\\n        public\\n        view\\n        onlyInstantiated(_index)\\n        returns (uint256)\\n    {\\n        return instance[_index].queryArray[i];\\n    }\\n\\n    function getPartitionGameIndex(uint256 _index)\\n        public\\n        override\\n        view\\n        onlyInstantiated(_index)\\n        returns (uint256)\\n    {\\n        return instance[_index].partitionGameIndex;\\n    }\\n\\n    function getQuerySize(uint256 _index)\\n        public\\n        override\\n        view\\n        onlyInstantiated(_index)\\n        returns (uint256)\\n    {\\n        return instance[_index].querySize;\\n    }\\n\\n    // state getters\\n\\n    function isConcerned(uint256 _index, address _user)\\n        public\\n        override\\n        view\\n        returns (bool)\\n    {\\n        return ((instance[_index].challenger == _user) ||\\n            (instance[_index].claimer == _user));\\n    }\\n\\n    function getSubInstances(uint256, address)\\n        public\\n        override\\n        pure\\n        returns (address[] memory, uint256[] memory)\\n    {\\n        address[] memory a = new address[](0);\\n        uint256[] memory i = new uint256[](0);\\n        return (a, i);\\n    }\\n\\n    function getCurrentState(uint256 _index)\\n        public\\n        override\\n        view\\n        onlyInstantiated(_index)\\n        returns (bytes32)\\n    {\\n        if (instance[_index].currentState == state.WaitingQuery) {\\n            return \\\"WaitingQuery\\\";\\n        }\\n        if (instance[_index].currentState == state.WaitingHashes) {\\n            return \\\"WaitingHashes\\\";\\n        }\\n        if (instance[_index].currentState == state.ChallengerWon) {\\n            return \\\"ChallengerWon\\\";\\n        }\\n        if (instance[_index].currentState == state.ClaimerWon) {\\n            return \\\"ClaimerWon\\\";\\n        }\\n        if (instance[_index].currentState == state.DivergenceFound) {\\n            return \\\"DivergenceFound\\\";\\n        }\\n        require(false, \\\"Unrecognized state\\\");\\n    }\\n\\n    // remove these functions and change tests accordingly\\n    function stateIsWaitingQuery(uint256 _index)\\n        public\\n        override\\n        view\\n        onlyInstantiated(_index)\\n        returns (bool)\\n    {\\n        return instance[_index].currentState == state.WaitingQuery;\\n    }\\n\\n    function stateIsWaitingHashes(uint256 _index)\\n        public\\n        override\\n        view\\n        onlyInstantiated(_index)\\n        returns (bool)\\n    {\\n        return instance[_index].currentState == state.WaitingHashes;\\n    }\\n\\n    function stateIsChallengerWon(uint256 _index)\\n        public\\n        override\\n        view\\n        onlyInstantiated(_index)\\n        returns (bool)\\n    {\\n        return instance[_index].currentState == state.ChallengerWon;\\n    }\\n\\n    function stateIsClaimerWon(uint256 _index)\\n        public\\n        override\\n        view\\n        onlyInstantiated(_index)\\n        returns (bool)\\n    {\\n        return instance[_index].currentState == state.ClaimerWon;\\n    }\\n\\n    function stateIsDivergenceFound(uint256 _index)\\n        public\\n        override\\n        view\\n        onlyInstantiated(_index)\\n        returns (bool)\\n    {\\n        return instance[_index].currentState == state.DivergenceFound;\\n    }\\n\\n    // split an interval using (querySize) points (placed in queryArray)\\n    // leftPoint rightPoint are always the first and last points in queryArray.\\n    function slice(\\n        uint256 _index,\\n        uint256 leftPoint,\\n        uint256 rightPoint\\n    ) internal {\\n        require(\\n            rightPoint > leftPoint,\\n            \\\"rightPoint has to be bigger than leftPoint\\\"\\n        );\\n        uint256 i;\\n        uint256 intervalLength = rightPoint - leftPoint;\\n        uint256 queryLastIndex = instance[_index].querySize - 1;\\n        // if intervalLength is not big enough to allow us jump sizes larger then\\n        // one, we go step by step\\n        if (intervalLength < 2 * queryLastIndex) {\\n            for (i = 0; i < queryLastIndex; i++) {\\n                if (leftPoint + i < rightPoint) {\\n                    instance[_index].queryArray[i] = leftPoint + i;\\n                } else {\\n                    instance[_index].queryArray[i] = rightPoint;\\n                }\\n            }\\n        } else {\\n            // otherwise: intervalLength = (querySize - 1) * divisionLength + j\\n            // with divisionLength >= 1 and j in {0, ..., querySize - 2}. in this\\n            // case the size of maximum slice drops to a proportion of intervalLength\\n            uint256 divisionLength = intervalLength / queryLastIndex;\\n            for (i = 0; i < queryLastIndex; i++) {\\n                instance[_index].queryArray[i] = leftPoint + i * divisionLength;\\n            }\\n        }\\n        instance[_index].queryArray[queryLastIndex] = rightPoint;\\n    }\\n\\n    //TODO: It is supposed to be log10 * C, because we're using a partition of 10\\n    function log2OverTwo(uint256 x) public pure returns (uint256 y) {\\n        uint256 leading = 256;\\n\\n        while (x != 0) {\\n            x = x >> 1;\\n            leading--;\\n        }\\n        // plus one to do an approx ceiling\\n        return (255 - leading) / 2;\\n    }\\n}\\n\",\"keccak256\":\"0x06554348c95d7209925c64d8f10144145e94c2a96d852289f85178bb5864182c\",\"license\":\"GPL-3.0-only\"},\"contracts/PartitionInterface.sol\":{\"content\":\"// Copyright (C) 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: GPL-3.0-only\\n// This program is free software: you can redistribute it and/or modify it under\\n// the terms of the GNU General Public License as published by the Free Software\\n// Foundation, either version 3 of the License, or (at your option) any later\\n// version.\\n\\n// This program is distributed in the hope that it will be useful, but WITHOUT ANY\\n// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\\n// PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n\\n// You should have received a copy of the GNU General Public License\\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n\\n// Note: This component currently has dependencies that are licensed under the GNU\\n// GPL, version 3, and so you should treat this component as a whole as being under\\n// the GPL version 3. But all Cartesi-written code in this component is licensed\\n// under the Apache License, version 2, or a compatible permissive license, and can\\n// be used independently under the Apache v2 license. After this component is\\n// rewritten, the entire component will be released under the Apache v2 license.\\n\\n/// @title Abstract interface for partition instantiator\\npragma solidity ^0.7.0;\\n\\nimport \\\"@cartesi/util/contracts/Instantiator.sol\\\";\\n\\ninterface PartitionInterface is Instantiator {\\n    enum state {\\n        WaitingQuery,\\n        WaitingHashes,\\n        ChallengerWon,\\n        ClaimerWon,\\n        DivergenceFound\\n    }\\n\\n    function getCurrentState(uint256 _index) external view returns (bytes32);\\n\\n    function instantiate(\\n        address _challenger,\\n        address _claimer,\\n        bytes32 _initialHash,\\n        bytes32 _claimerFinalHash,\\n        uint256 _finalTime,\\n        uint256 _querySize,\\n        uint256 _roundDuration\\n    ) external returns (uint256);\\n\\n    function timeHash(uint256 _index, uint256 key)\\n        external\\n        view\\n        returns (bytes32);\\n\\n    function divergenceTime(uint256 _index) external view returns (uint256);\\n\\n    function stateIsWaitingQuery(uint256 _index) external view returns (bool);\\n\\n    function stateIsWaitingHashes(uint256 _index) external view returns (bool);\\n\\n    function stateIsChallengerWon(uint256 _index) external view returns (bool);\\n\\n    function stateIsClaimerWon(uint256 _index) external view returns (bool);\\n\\n    function stateIsDivergenceFound(uint256 _index)\\n        external\\n        view\\n        returns (bool);\\n\\n    function getPartitionGameIndex(uint256 _index)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function getQuerySize(uint256 _index) external view returns (uint256);\\n\\n    function getMaxInstanceDuration(\\n        uint256 _roundDuration,\\n        uint256 _timeToStartMachine,\\n        uint256 _partitionSize,\\n        uint256 _maxCycle,\\n        uint256 _picoSecondsToRunInsn\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x00b63017019412475d1ceee5a817fa1d714d7e6cff9aac7d2662eaef492f6687\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 94,
        "contract": "contracts/PartitionInstantiator.sol:PartitionInstantiator",
        "label": "currentIndex",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 98,
        "contract": "contracts/PartitionInstantiator.sol:PartitionInstantiator",
        "label": "active",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 102,
        "contract": "contracts/PartitionInstantiator.sol:PartitionInstantiator",
        "label": "nonce",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 3003,
        "contract": "contracts/PartitionInstantiator.sol:PartitionInstantiator",
        "label": "instance",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(PartitionCtx)2999_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(state)4636": {
        "encoding": "inplace",
        "label": "enum PartitionInterface.state",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_mapping(t_uint256,t_struct(PartitionCtx)2999_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct PartitionInstantiator.PartitionCtx)",
        "numberOfBytes": "32",
        "value": "t_struct(PartitionCtx)2999_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(PartitionCtx)2999_storage": {
        "encoding": "inplace",
        "label": "struct PartitionInstantiator.PartitionCtx",
        "members": [
          {
            "astId": 2971,
            "contract": "contracts/PartitionInstantiator.sol:PartitionInstantiator",
            "label": "challenger",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 2973,
            "contract": "contracts/PartitionInstantiator.sol:PartitionInstantiator",
            "label": "claimer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 2975,
            "contract": "contracts/PartitionInstantiator.sol:PartitionInstantiator",
            "label": "finalTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 2979,
            "contract": "contracts/PartitionInstantiator.sol:PartitionInstantiator",
            "label": "timeSubmitted",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_bool)"
          },
          {
            "astId": 2983,
            "contract": "contracts/PartitionInstantiator.sol:PartitionInstantiator",
            "label": "timeHash",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_bytes32)"
          },
          {
            "astId": 2985,
            "contract": "contracts/PartitionInstantiator.sol:PartitionInstantiator",
            "label": "querySize",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 2988,
            "contract": "contracts/PartitionInstantiator.sol:PartitionInstantiator",
            "label": "queryArray",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 2990,
            "contract": "contracts/PartitionInstantiator.sol:PartitionInstantiator",
            "label": "timeOfLastMove",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 2992,
            "contract": "contracts/PartitionInstantiator.sol:PartitionInstantiator",
            "label": "roundDuration",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 2994,
            "contract": "contracts/PartitionInstantiator.sol:PartitionInstantiator",
            "label": "partitionGameIndex",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 2996,
            "contract": "contracts/PartitionInstantiator.sol:PartitionInstantiator",
            "label": "currentState",
            "offset": 0,
            "slot": "10",
            "type": "t_enum(state)4636"
          },
          {
            "astId": 2998,
            "contract": "contracts/PartitionInstantiator.sol:PartitionInstantiator",
            "label": "divergenceTime",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "claimVictoryByTime(uint256)": {
        "notice": "Claim victory for opponent timeout."
      },
      "instantiate(address,address,bytes32,bytes32,uint256,uint256,uint256)": {
        "notice": "Instantiate a partition instance."
      },
      "makeQuery(uint256,uint256,uint256,uint256)": {
        "notice": "Makes a query (only challenger can call it)."
      },
      "presentDivergence(uint256,uint256)": {
        "notice": "Present a precise time of divergence (can only be called by challenger)."
      },
      "replyQuery(uint256,uint256[],bytes32[])": {
        "notice": "Answer the query (only claimer can call it)."
      }
    },
    "version": 1
  }
}