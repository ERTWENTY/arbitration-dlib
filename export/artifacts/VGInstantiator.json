{
  "contractName": "VGInstantiator",
  "sourceName": "contracts/VGInstantiator.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_partitionInstantiatorAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_mmInstantiatorAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "MemoryWriten",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_mmInstance",
          "type": "uint256"
        }
      ],
      "name": "PartitionDivergenceFound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_challenger",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_roundDuration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_machineAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_initialHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_claimerFinalHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_finalTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_partitionInstance",
          "type": "uint256"
        }
      ],
      "name": "VGCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum VGInterface.state",
          "name": "_finalState",
          "type": "uint8"
        }
      ],
      "name": "VGFinished",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "claimVictoryByTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "deactivate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getCurrentState",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_roundDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timeToStartMachine",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_partitionSize",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxCycle",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_picoSecondsToRunInsn",
          "type": "uint256"
        }
      ],
      "name": "getMaxInstanceDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentNonce",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getPartitionGameIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getPartitionQuerySize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getState",
      "outputs": [
        {
          "internalType": "address",
          "name": "_challenger",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "contract MachineInterface",
          "name": "_machine",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_initialHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_claimerFinalHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_hashBeforeDivergence",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_hashAfterDivergence",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_currentState",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "_uintValues",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getSubInstances",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "_addresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_indices",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_challenger",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_roundDuration",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_machineAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_initialHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_claimerFinalHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_finalTime",
          "type": "uint256"
        }
      ],
      "name": "instantiate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "isConcerned",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        }
      ],
      "name": "log2OverTwo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "settleVerificationGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "startMachineRunChallenge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "stateIsFinishedChallengerWon",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "stateIsFinishedClaimerWon",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "winByPartitionTimeout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526000805534801561001457600080fd5b5060405161282d38038061282d8339818101604052604081101561003757600080fd5b508051602090910151600380546001600160a01b039384166001600160a01b031991821617909155600480549390921692169190911790556127af8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106101205760003560e01c806373df1612116100ad578063b6b5c31911610071578063b6b5c319146103de578063bfa69ed8146103fb578063c526656c14610418578063cd3784e7146104dd578063daaadf4e146104fa57610120565b806373df16121461029557806382afd23b14610368578063916b9bef14610385578063a2dc7973146103a4578063a703df28146103c157610120565b806326987b60116100f457806326987b6014610201578063370f31aa146102095780633d46b8191461023e5780635748c1301461025b5780636cc9f17e1461027857610120565b80624463861461012557806301ff62ab146101545780630c91927b1461019457806320b73870146101b1575b600080fd5b6101426004803603602081101561013b57600080fd5b5035610517565b60408051918252519081900360200190f35b6101806004803603604081101561016a57600080fd5b50803590602001356001600160a01b03166105a4565b604080519115158252519081900360200190f35b610142600480360360208110156101aa57600080fd5b50356105ef565b610142600480360360e08110156101c757600080fd5b506001600160a01b038135811691602081013582169160408201359160608101359091169060808101359060a08101359060c0013561064c565b6101426108e8565b610142600480360360a081101561021f57600080fd5b50803590602081013590604081013590606081013590608001356108ee565b6101426004803603602081101561025457600080fd5b5035610922565b6101426004803603602081101561027157600080fd5b50356109cc565b6101806004803603602081101561028e57600080fd5b5035610b66565b6102c1600480360360408110156102ab57600080fd5b50803590602001356001600160a01b0316610bd8565b604051808a6001600160a01b03168152602001896001600160a01b03168152602001886001600160a01b0316815260200187815260200186815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019060200280838360005b8381101561034c578181015183820152602001610334565b505050509050019a505050505050505050505060405180910390f35b6101806004803603602081101561037e57600080fd5b5035610f80565b6103a26004803603602081101561039b57600080fd5b5035610f95565b005b6103a2600480360360208110156103ba57600080fd5b5035610fb8565b6103a2600480360360208110156103d757600080fd5b50356111df565b610180600480360360208110156103f457600080fd5b50356119da565b6103a26004803603602081101561041157600080fd5b5035611a28565b6104446004803603604081101561042e57600080fd5b50803590602001356001600160a01b0316611c3c565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015610488578181015183820152602001610470565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156104c75781810151838201526020016104af565b5050505090500194505050505060405180910390f35b6103a2600480360360208110156104f357600080fd5b5035611de7565b6101426004803603602081101561051057600080fd5b5035612256565b6003546000828152600560209081526040808320600901548151622231c360e11b81526004810191909152905192936001600160a01b0316926244638692602480840193919291829003018186803b15801561057257600080fd5b505afa158015610586573d6000803e3d6000fd5b505050506040513d602081101561059c57600080fd5b505192915050565b6000828152600560205260408120546001600160a01b03838116911614806105e857506000838152600560205260409020600101546001600160a01b038381169116145b9392505050565b60035460008281526005602090815260408083206009015481516341fde16f60e01b81526004810191909152905192936001600160a01b0316926341fde16f92602480840193919291829003018186803b15801561057257600080fd5b600080821161068c5760405162461bcd60e51b815260040180806020018281038252602481526020018061266a6024913960400191505060405180910390fd5b6000805481526005602052604080822080546001600160a01b03808d166001600160a01b03199283161790925583548452919092206001018054928a16929091169190911790556106dc82612256565b6000805481526005602081815260408084206004958c02860160029091015583548452808420600390810180546001600160a01b03808e166001600160a01b0319909216919091179091558554865282862087018b905585548652828620909401899055845485528185206006018890558454855281852042600790910155548151633562820d60e01b81528e8516968101969096528c84166024870152604486018a90526064860189905260848601889052600a60a487015260c486018c90529051921693633562820d9360e480830194928390030190829087803b1580156107c557600080fd5b505af11580156107d9573d6000803e3d6000fd5b505050506040513d60208110156107ef57600080fd5b5051600080548152600560205260408082206009019290925580548152908120600d01805460ff19169055547fd4ad9a0f11913813f7818801ad85d597c0dfd1d2c01bcb1a02f29c6d6544fdd590898961084886612256565b600080548152600560209081526040918290206009015482519687526001600160a01b0395861691870191909152928416858201526004918c02919091016060850152918916608084015260a0830188905260c0830187905260e0830186905261010083015251908190036101200190a1506000805481526001602081905260408220805460ff1916821790558154908101909155979650505050505050565b60005481565b60008061090060008888888888612287565b9050600061091360008989898989612287565b91909101979650505050505050565b6000818060005411610969576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b61097281610f80565b6109b4576040805162461bcd60e51b815260206004820152600e60248201526d496e64657820696e61637469766560901b604482015290519081900360640190fd5b60008381526002602052604090205491505b50919050565b6000818060005411610a13576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b6000838152600560205260408120600d015460ff166003811115610a3357fe5b1415610a51576c2bb0b4ba2830b93a34ba34b7b760991b91506109c6565b60016000848152600560205260409020600d015460ff166003811115610a7357fe5b1415610a995774576169744d656d6f727950726f766556616c75657360581b91506109c6565b60026000848152600560205260409020600d015460ff166003811115610abb57fe5b1415610adc576f2334b734b9b421b630b4b6b2b92bb7b760811b91506109c6565b60036000848152600560205260409020600d015460ff166003811115610afe57fe5b1415610b2457742334b734b9b432b221b430b63632b733b2b92bb7b760591b91506109c6565b6040805162461bcd60e51b8152602060048201526012602482015271556e7265636f676e697a656420737461746560701b604482015290519081900360640190fd5b6000818060005411610bad576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b60025b6000848152600560205260409020600d015460ff166003811115610bd057fe5b149392505050565b60008060008060008060008060608a8060005411610c2b576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b610c336125d2565b60008d81526005602081815260409283902083516101c08101855281546001600160a01b03908116825260018301548116938201939093526002820154948101949094526003808201549092166060850152600481015460808501529182015460a0840152600682015460c0840152600782015460e084015260088201546101008401526009820154610120840152600a820154610140840152600b820154610160840152600c820154610180840152600d8201546101a084019160ff90911690811115610cfd57fe5b6003811115610d0857fe5b90525060408051600580825260c08201909252919250606091906020820160a0803683370190505090508160c0015181600081518110610d4457fe5b602002602001018181525050610df7826101a0015183604001516028600360009054906101000a90046001600160a01b03166001600160a01b03166341fde16f8761012001516040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610dbe57600080fd5b505afa158015610dd2573d6000803e3d6000fd5b505050506040513d6020811015610de857600080fd5b505160c08701516101f4612287565b8260e001510181600181518110610e0a57fe5b60200260200101818152505081610100015181600281518110610e2957fe5b60200260200101818152505081610120015181600381518110610e4857fe5b60200260200101818152505081610140015181600481518110610e6757fe5b6020908102919091010152600080836101a001516003811115610e8657fe5b1415610e9f57506c2bb0b4ba2830b93a34ba34b7b760991b5b6001836101a001516003811115610eb257fe5b1415610ed3575074576169744d656d6f727950726f766556616c75657360581b5b6002836101a001516003811115610ee657fe5b1415610f0257506f2334b734b9b421b630b4b6b2b92bb7b760811b5b6003836101a001516003811115610f1557fe5b1415610f365750742334b734b9b432b221b430b63632b733b2b92bb7b760591b5b82600001518360200151846060015185608001518660a0015187610160015188610180015187899c509c509c509c509c509c509c509c509c50505050509295985092959850929598565b60009081526001602052604090205460ff1690565b6000908152600160209081526040808320805460ff191690556002909152812055565b808060005411610ffd576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b6000828152600560205260409020600101546001600160a01b0316338114611067576040805162461bcd60e51b815260206004820152601860248201527721b0b73737ba1031329031b0b63632b210313c903ab9b2b960411b604482015290519081900360640190fd5b600083815260056020908152604091829020600d810154600282015460035460099093015485516341fde16f60e01b8152600481019190915294516111239560ff9093169491936028936001600160a01b03909116926341fde16f92602480840193829003018186803b1580156110dd57600080fd5b505afa1580156110f1573d6000803e3d6000fd5b505050506040513d602081101561110757600080fd5b50516000888152600560205260409020600601546101f4612287565b6000848152600560205260409020600701540142116111735760405162461bcd60e51b815260040180806020018281038252602e8152602001806126b3602e913960400191505060405180910390fd5b60016000848152600560205260409020600d015460ff16600381111561119557fe5b146111d15760405162461bcd60e51b81526004018080602001828103825260258152602001806126456025913960400191505060405180910390fd5b6111da836123d4565b505050565b808060005411611224576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b6000828152600560205260409020546001600160a01b031633811461128b576040805162461bcd60e51b815260206004820152601860248201527721b0b73737ba1031329031b0b63632b210313c903ab9b2b960411b604482015290519081900360640190fd5b60016000848152600560205260409020600d015460ff1660038111156112ad57fe5b146112e95760405162461bcd60e51b81526004018080602001828103825260258152602001806126456025913960400191505060405180910390fd5b600083815260056020908152604091829020600801546004805484516343d4b78b60e01b8152918201839052935191936001600160a01b0316926343d4b78b92602480840193829003018186803b15801561134357600080fd5b505afa158015611357573d6000803e3d6000fd5b505050506040513d602081101561136d57600080fd5b50516113aa5760405162461bcd60e51b81526004018080602001828103825260238152602001806127136023913960400191505060405180910390fd5b600480546040805163f154f91d60e01b815292830184905251606092839283926001600160a01b039091169163f154f91d916024808301926000929190829003018186803b1580156113fb57600080fd5b505afa15801561140f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052606081101561143857600080fd5b810190808051604051939291908464010000000082111561145857600080fd5b90830190602082018581111561146d57600080fd5b825186602082028301116401000000008211171561148a57600080fd5b82525081516020918201928201910280838360005b838110156114b757818101518382015260200161149f565b50505050905001604052602001805160405193929190846401000000008211156114e057600080fd5b9083019060208201858111156114f557600080fd5b825186602082028301116401000000008211171561151257600080fd5b82525081516020918201928201910280838360005b8381101561153f578181015183820152602001611527565b505050509050016040526020018051604051939291908464010000000082111561156857600080fd5b90830190602082018581111561157d57600080fd5b825186602082028301116401000000008211171561159a57600080fd5b82525081516020918201928201910280838360005b838110156115c75781810151838201526020016115af565b50505050905001604052505050925092509250600080600560008a815260200190815260200160002060030160009054906101000a90046001600160a01b03166001600160a01b0316637718d4c88686866040518463ffffffff1660e01b815260040180806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b8381101561166f578181015183820152602001611657565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156116ae578181015183820152602001611696565b50505050905001848103825285818151815260200191508051906020019060200280838360005b838110156116ed5781810151838201526020016116d5565b5050505090500196505050505050506040805180830381600087803b15801561171557600080fd5b505af1158015611729573d6000803e3d6000fd5b505050506040513d604081101561173f57600080fd5b508051602090910151909250905060ff8216156117a3576040805162461bcd60e51b815260206004820152601960248201527f53746570206469646e74206578697420636f72726563746c7900000000000000604482015290519081900360640190fd5b845181146117e25760405162461bcd60e51b81526004018080602001828103825260248152602001806127366024913960400191505060405180910390fd5b6004805460408051631f6aea2b60e11b8152928301899052516001600160a01b0390911691633ed5d45691602480830192600092919082900301818387803b15801561182d57600080fd5b505af1158015611841573d6000803e3d6000fd5b50506004805460408051634b7a14dd60e11b81529283018b9052516001600160a01b0390911693506396f429ba92506024808301926020929190829003018186803b15801561188f57600080fd5b505afa1580156118a3573d6000803e3d6000fd5b505050506040513d60208110156118b957600080fd5b50516118f65760405162461bcd60e51b815260040180806020018281038252602581526020018061268e6025913960400191505060405180910390fd5b600089815260056020908152604091829020600c0154600480548451630241916160e61b81529182018b9052935191936001600160a01b031692639064584092602480840193829003018186803b15801561195057600080fd5b505afa158015611964573d6000803e3d6000fd5b505050506040513d602081101561197a57600080fd5b505114156119c6576040805162461bcd60e51b81526020600482015260146024820152730dccaee90c2e6d040e6d0deead8c840dac2e8c6d60631b604482015290519081900360640190fd5b6119cf896124a3565b505050505050505050565b6000818060005411611a21576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b6003610bb0565b808060005411611a6d576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b6000828152600560205260408120600d015460ff166003811115611a8d57fe5b14611adf576040805162461bcd60e51b815260206004820152601d60248201527f53746174652073686f756c642062652057616974506172746974696f6e000000604482015290519081900360640190fd5b6000828152600560209081526040918290206009015460035483516332a3a14f60e11b815260048101839052935191936001600160a01b0390911692636547429e92602480840193829003018186803b158015611b3b57600080fd5b505afa158015611b4f573d6000803e3d6000fd5b505050506040513d6020811015611b6557600080fd5b505115611b7b57611b75836124a3565b50611c38565b6003546040805163d0a068cf60e01b81526004810184905290516001600160a01b039092169163d0a068cf91602480820192602092909190829003018186803b158015611bc757600080fd5b505afa158015611bdb573d6000803e3d6000fd5b505050506040513d6020811015611bf157600080fd5b505115611c0157611b75836123d4565b60405162461bcd60e51b81526004018080602001828103825260328152602001806126e16032913960400191505060405180910390fd5b5050565b6060808080600080878152600560205260409020600d015460ff166003811115611c6257fe5b1415611d0c5760408051600180825281830190925290602080830190803683375050604080516001808252818301909252929450905060208083019080368337505060035484519293506001600160a01b031691849150600090611cc257fe5b6001600160a01b03909216602092830291909101820152600087815260059091526040812060090154825190918391611cf757fe5b60209081029190910101529092509050611de0565b60016000878152600560205260409020600d015460ff166003811115611d2e57fe5b1415611dc35760408051600180825281830190925290602080830190803683375050604080516001808252818301909252929450905060208083019080368337505060045484519293506001600160a01b031691849150600090611d8e57fe5b6001600160a01b03909216602092830291909101820152600087815260059091526040812060080154825190918391611cf757fe5b505060408051600080825260208201908152818301909252925090505b9250929050565b808060005411611e2c576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b60008281526002602052604081208054600101905582906000848152600560205260409020600d015460ff166003811115611e6357fe5b14611eb5576040805162461bcd60e51b815260206004820152601d60248201527f53746174652073686f756c642062652057616974506172746974696f6e000000604482015290519081900360640190fd5b600354600084815260056020908152604091829020600901548251631d9f2d7760e01b8152600481019190915291516001600160a01b0390931692631d9f2d77926024808201939291829003018186803b158015611f1257600080fd5b505afa158015611f26573d6000803e3d6000fd5b505050506040513d6020811015611f3c57600080fd5b5051611f8f576040805162461bcd60e51b815260206004820152601a60248201527f446976657267656e63652073686f756c6420626520666f756e64000000000000604482015290519081900360640190fd5b600083815260056020908152604080832060090154600354825163326ff2f560e01b81526004810183905292519194936001600160a01b039091169263326ff2f59260248083019392829003018186803b158015611fec57600080fd5b505afa158015612000573d6000803e3d6000fd5b505050506040513d602081101561201657600080fd5b5051600086815260056020908152604091829020600a0183905560035482516360696f8160e01b8152600481018790526024810185905292519394506001600160a01b0316926360696f81926044808201939291829003018186803b15801561207e57600080fd5b505afa158015612092573d6000803e3d6000fd5b505050506040513d60208110156120a857600080fd5b5051600086815260056020908152604091829020600b019290925560035481516360696f8160e01b81526004810186905260018501602482015291516001600160a01b03909116926360696f819260448082019391829003018186803b15801561211157600080fd5b505afa158015612125573d6000803e3d6000fd5b505050506040513d602081101561213b57600080fd5b50516000868152600560209081526040808320600c810194909455600480548554600b909601548351631140bc8f60e31b815230938101939093526001600160a01b039687166024840152604483015291519490911693638a05e47893606480840194938390030190829087803b1580156121b557600080fd5b505af11580156121c9573d6000803e3d6000fd5b505050506040513d60208110156121df57600080fd5b50516000868152600560209081526040808320600881018590556009810193909355426007840155600d909201805460ff1916600117905581518881529081019290925280517fe6772c68f52fac01f8694176345ad126ec91d30c32f27a57e8d20c076c2b063d9281900390910190a15050505050565b60006101005b82156122725760019290921c916000190161225c565b60028160ff038161227f57fe5b049392505050565b60008087600381111561229657fe5b14156123375760035460408051631b8798d560e11b8152600481018990526024810188905260448101879052606481018690526084810185905290516001600160a01b039092169163370f31aa9160a480820192602092909190829003018186803b15801561230457600080fd5b505afa158015612318573d6000803e3d6000fd5b505050506040513d602081101561232e57600080fd5b505190506123ca565b600187600381111561234557fe5b141561239c5760048054604080516384dfd44d60e01b815292830189905260248301889052516001600160a01b03909116916384dfd44d916044808301926020929190829003018186803b15801561230457600080fd5b60028760038111156123aa57fe5b14806123c1575060038760038111156123bf57fe5b145b15610b24575060005b9695505050505050565b808060005411612419576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b61242282612514565b6000828152600560205260409020600d0180546002919060ff19166001835b021790555060008281526005602052604090819020600d015490517f2b38fc22e74e632df708aa11ee5b00b21845d40c64ccf39fafc8ef018b82b9b19160ff16908082600381111561248f57fe5b815260200191505060405180910390a15050565b8080600054116124e8576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b6124f182612514565b6000828152600560205260409020600d0180546003919060ff1916600183612441565b808060005411612559576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b6000828152600560208190526040822080546001600160a01b031990811682556001820180548216905560028201849055600382018054909116905560048101839055908101829055600681018290556007810182905560088101829055600a8101829055600b8101829055600c0155611c3882610f95565b604080516101c081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081018290526101808101829052906101a08201529056fe53746174652073686f756c6420626520576169744d656d6f727950726f766556616c75657346696e616c2074696d65206d7573742062652067726561746572207468616e207a65726f5374617465206f66204d4d202073686f756c642062652046696e69736865645265706c61794475726174696f6e206f6620576169744d656d6f727950726f766556616c756573206d757374206265206f7665724661696c20746f2057696e4279506172746974696f6e54696d656f757420696e2063757272656e7420636f6e646974696f6e5374617465206f66204d4d2073686f756c642062652057616974696e675265706c61794e756d626572206f66206d656d6f72792061636365736573206469646e74206d61746368496e646578206e6f7420696e7374616e74696174656400000000000000000000a26469706673582212201a9e3f79da2958fd5b42faf6f99c637f7c6798312c75b628414e40bc0cd5372264736f6c63430007040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101205760003560e01c806373df1612116100ad578063b6b5c31911610071578063b6b5c319146103de578063bfa69ed8146103fb578063c526656c14610418578063cd3784e7146104dd578063daaadf4e146104fa57610120565b806373df16121461029557806382afd23b14610368578063916b9bef14610385578063a2dc7973146103a4578063a703df28146103c157610120565b806326987b60116100f457806326987b6014610201578063370f31aa146102095780633d46b8191461023e5780635748c1301461025b5780636cc9f17e1461027857610120565b80624463861461012557806301ff62ab146101545780630c91927b1461019457806320b73870146101b1575b600080fd5b6101426004803603602081101561013b57600080fd5b5035610517565b60408051918252519081900360200190f35b6101806004803603604081101561016a57600080fd5b50803590602001356001600160a01b03166105a4565b604080519115158252519081900360200190f35b610142600480360360208110156101aa57600080fd5b50356105ef565b610142600480360360e08110156101c757600080fd5b506001600160a01b038135811691602081013582169160408201359160608101359091169060808101359060a08101359060c0013561064c565b6101426108e8565b610142600480360360a081101561021f57600080fd5b50803590602081013590604081013590606081013590608001356108ee565b6101426004803603602081101561025457600080fd5b5035610922565b6101426004803603602081101561027157600080fd5b50356109cc565b6101806004803603602081101561028e57600080fd5b5035610b66565b6102c1600480360360408110156102ab57600080fd5b50803590602001356001600160a01b0316610bd8565b604051808a6001600160a01b03168152602001896001600160a01b03168152602001886001600160a01b0316815260200187815260200186815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019060200280838360005b8381101561034c578181015183820152602001610334565b505050509050019a505050505050505050505060405180910390f35b6101806004803603602081101561037e57600080fd5b5035610f80565b6103a26004803603602081101561039b57600080fd5b5035610f95565b005b6103a2600480360360208110156103ba57600080fd5b5035610fb8565b6103a2600480360360208110156103d757600080fd5b50356111df565b610180600480360360208110156103f457600080fd5b50356119da565b6103a26004803603602081101561041157600080fd5b5035611a28565b6104446004803603604081101561042e57600080fd5b50803590602001356001600160a01b0316611c3c565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015610488578181015183820152602001610470565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156104c75781810151838201526020016104af565b5050505090500194505050505060405180910390f35b6103a2600480360360208110156104f357600080fd5b5035611de7565b6101426004803603602081101561051057600080fd5b5035612256565b6003546000828152600560209081526040808320600901548151622231c360e11b81526004810191909152905192936001600160a01b0316926244638692602480840193919291829003018186803b15801561057257600080fd5b505afa158015610586573d6000803e3d6000fd5b505050506040513d602081101561059c57600080fd5b505192915050565b6000828152600560205260408120546001600160a01b03838116911614806105e857506000838152600560205260409020600101546001600160a01b038381169116145b9392505050565b60035460008281526005602090815260408083206009015481516341fde16f60e01b81526004810191909152905192936001600160a01b0316926341fde16f92602480840193919291829003018186803b15801561057257600080fd5b600080821161068c5760405162461bcd60e51b815260040180806020018281038252602481526020018061266a6024913960400191505060405180910390fd5b6000805481526005602052604080822080546001600160a01b03808d166001600160a01b03199283161790925583548452919092206001018054928a16929091169190911790556106dc82612256565b6000805481526005602081815260408084206004958c02860160029091015583548452808420600390810180546001600160a01b03808e166001600160a01b0319909216919091179091558554865282862087018b905585548652828620909401899055845485528185206006018890558454855281852042600790910155548151633562820d60e01b81528e8516968101969096528c84166024870152604486018a90526064860189905260848601889052600a60a487015260c486018c90529051921693633562820d9360e480830194928390030190829087803b1580156107c557600080fd5b505af11580156107d9573d6000803e3d6000fd5b505050506040513d60208110156107ef57600080fd5b5051600080548152600560205260408082206009019290925580548152908120600d01805460ff19169055547fd4ad9a0f11913813f7818801ad85d597c0dfd1d2c01bcb1a02f29c6d6544fdd590898961084886612256565b600080548152600560209081526040918290206009015482519687526001600160a01b0395861691870191909152928416858201526004918c02919091016060850152918916608084015260a0830188905260c0830187905260e0830186905261010083015251908190036101200190a1506000805481526001602081905260408220805460ff1916821790558154908101909155979650505050505050565b60005481565b60008061090060008888888888612287565b9050600061091360008989898989612287565b91909101979650505050505050565b6000818060005411610969576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b61097281610f80565b6109b4576040805162461bcd60e51b815260206004820152600e60248201526d496e64657820696e61637469766560901b604482015290519081900360640190fd5b60008381526002602052604090205491505b50919050565b6000818060005411610a13576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b6000838152600560205260408120600d015460ff166003811115610a3357fe5b1415610a51576c2bb0b4ba2830b93a34ba34b7b760991b91506109c6565b60016000848152600560205260409020600d015460ff166003811115610a7357fe5b1415610a995774576169744d656d6f727950726f766556616c75657360581b91506109c6565b60026000848152600560205260409020600d015460ff166003811115610abb57fe5b1415610adc576f2334b734b9b421b630b4b6b2b92bb7b760811b91506109c6565b60036000848152600560205260409020600d015460ff166003811115610afe57fe5b1415610b2457742334b734b9b432b221b430b63632b733b2b92bb7b760591b91506109c6565b6040805162461bcd60e51b8152602060048201526012602482015271556e7265636f676e697a656420737461746560701b604482015290519081900360640190fd5b6000818060005411610bad576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b60025b6000848152600560205260409020600d015460ff166003811115610bd057fe5b149392505050565b60008060008060008060008060608a8060005411610c2b576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b610c336125d2565b60008d81526005602081815260409283902083516101c08101855281546001600160a01b03908116825260018301548116938201939093526002820154948101949094526003808201549092166060850152600481015460808501529182015460a0840152600682015460c0840152600782015460e084015260088201546101008401526009820154610120840152600a820154610140840152600b820154610160840152600c820154610180840152600d8201546101a084019160ff90911690811115610cfd57fe5b6003811115610d0857fe5b90525060408051600580825260c08201909252919250606091906020820160a0803683370190505090508160c0015181600081518110610d4457fe5b602002602001018181525050610df7826101a0015183604001516028600360009054906101000a90046001600160a01b03166001600160a01b03166341fde16f8761012001516040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610dbe57600080fd5b505afa158015610dd2573d6000803e3d6000fd5b505050506040513d6020811015610de857600080fd5b505160c08701516101f4612287565b8260e001510181600181518110610e0a57fe5b60200260200101818152505081610100015181600281518110610e2957fe5b60200260200101818152505081610120015181600381518110610e4857fe5b60200260200101818152505081610140015181600481518110610e6757fe5b6020908102919091010152600080836101a001516003811115610e8657fe5b1415610e9f57506c2bb0b4ba2830b93a34ba34b7b760991b5b6001836101a001516003811115610eb257fe5b1415610ed3575074576169744d656d6f727950726f766556616c75657360581b5b6002836101a001516003811115610ee657fe5b1415610f0257506f2334b734b9b421b630b4b6b2b92bb7b760811b5b6003836101a001516003811115610f1557fe5b1415610f365750742334b734b9b432b221b430b63632b733b2b92bb7b760591b5b82600001518360200151846060015185608001518660a0015187610160015188610180015187899c509c509c509c509c509c509c509c509c50505050509295985092959850929598565b60009081526001602052604090205460ff1690565b6000908152600160209081526040808320805460ff191690556002909152812055565b808060005411610ffd576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b6000828152600560205260409020600101546001600160a01b0316338114611067576040805162461bcd60e51b815260206004820152601860248201527721b0b73737ba1031329031b0b63632b210313c903ab9b2b960411b604482015290519081900360640190fd5b600083815260056020908152604091829020600d810154600282015460035460099093015485516341fde16f60e01b8152600481019190915294516111239560ff9093169491936028936001600160a01b03909116926341fde16f92602480840193829003018186803b1580156110dd57600080fd5b505afa1580156110f1573d6000803e3d6000fd5b505050506040513d602081101561110757600080fd5b50516000888152600560205260409020600601546101f4612287565b6000848152600560205260409020600701540142116111735760405162461bcd60e51b815260040180806020018281038252602e8152602001806126b3602e913960400191505060405180910390fd5b60016000848152600560205260409020600d015460ff16600381111561119557fe5b146111d15760405162461bcd60e51b81526004018080602001828103825260258152602001806126456025913960400191505060405180910390fd5b6111da836123d4565b505050565b808060005411611224576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b6000828152600560205260409020546001600160a01b031633811461128b576040805162461bcd60e51b815260206004820152601860248201527721b0b73737ba1031329031b0b63632b210313c903ab9b2b960411b604482015290519081900360640190fd5b60016000848152600560205260409020600d015460ff1660038111156112ad57fe5b146112e95760405162461bcd60e51b81526004018080602001828103825260258152602001806126456025913960400191505060405180910390fd5b600083815260056020908152604091829020600801546004805484516343d4b78b60e01b8152918201839052935191936001600160a01b0316926343d4b78b92602480840193829003018186803b15801561134357600080fd5b505afa158015611357573d6000803e3d6000fd5b505050506040513d602081101561136d57600080fd5b50516113aa5760405162461bcd60e51b81526004018080602001828103825260238152602001806127136023913960400191505060405180910390fd5b600480546040805163f154f91d60e01b815292830184905251606092839283926001600160a01b039091169163f154f91d916024808301926000929190829003018186803b1580156113fb57600080fd5b505afa15801561140f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052606081101561143857600080fd5b810190808051604051939291908464010000000082111561145857600080fd5b90830190602082018581111561146d57600080fd5b825186602082028301116401000000008211171561148a57600080fd5b82525081516020918201928201910280838360005b838110156114b757818101518382015260200161149f565b50505050905001604052602001805160405193929190846401000000008211156114e057600080fd5b9083019060208201858111156114f557600080fd5b825186602082028301116401000000008211171561151257600080fd5b82525081516020918201928201910280838360005b8381101561153f578181015183820152602001611527565b505050509050016040526020018051604051939291908464010000000082111561156857600080fd5b90830190602082018581111561157d57600080fd5b825186602082028301116401000000008211171561159a57600080fd5b82525081516020918201928201910280838360005b838110156115c75781810151838201526020016115af565b50505050905001604052505050925092509250600080600560008a815260200190815260200160002060030160009054906101000a90046001600160a01b03166001600160a01b0316637718d4c88686866040518463ffffffff1660e01b815260040180806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b8381101561166f578181015183820152602001611657565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156116ae578181015183820152602001611696565b50505050905001848103825285818151815260200191508051906020019060200280838360005b838110156116ed5781810151838201526020016116d5565b5050505090500196505050505050506040805180830381600087803b15801561171557600080fd5b505af1158015611729573d6000803e3d6000fd5b505050506040513d604081101561173f57600080fd5b508051602090910151909250905060ff8216156117a3576040805162461bcd60e51b815260206004820152601960248201527f53746570206469646e74206578697420636f72726563746c7900000000000000604482015290519081900360640190fd5b845181146117e25760405162461bcd60e51b81526004018080602001828103825260248152602001806127366024913960400191505060405180910390fd5b6004805460408051631f6aea2b60e11b8152928301899052516001600160a01b0390911691633ed5d45691602480830192600092919082900301818387803b15801561182d57600080fd5b505af1158015611841573d6000803e3d6000fd5b50506004805460408051634b7a14dd60e11b81529283018b9052516001600160a01b0390911693506396f429ba92506024808301926020929190829003018186803b15801561188f57600080fd5b505afa1580156118a3573d6000803e3d6000fd5b505050506040513d60208110156118b957600080fd5b50516118f65760405162461bcd60e51b815260040180806020018281038252602581526020018061268e6025913960400191505060405180910390fd5b600089815260056020908152604091829020600c0154600480548451630241916160e61b81529182018b9052935191936001600160a01b031692639064584092602480840193829003018186803b15801561195057600080fd5b505afa158015611964573d6000803e3d6000fd5b505050506040513d602081101561197a57600080fd5b505114156119c6576040805162461bcd60e51b81526020600482015260146024820152730dccaee90c2e6d040e6d0deead8c840dac2e8c6d60631b604482015290519081900360640190fd5b6119cf896124a3565b505050505050505050565b6000818060005411611a21576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b6003610bb0565b808060005411611a6d576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b6000828152600560205260408120600d015460ff166003811115611a8d57fe5b14611adf576040805162461bcd60e51b815260206004820152601d60248201527f53746174652073686f756c642062652057616974506172746974696f6e000000604482015290519081900360640190fd5b6000828152600560209081526040918290206009015460035483516332a3a14f60e11b815260048101839052935191936001600160a01b0390911692636547429e92602480840193829003018186803b158015611b3b57600080fd5b505afa158015611b4f573d6000803e3d6000fd5b505050506040513d6020811015611b6557600080fd5b505115611b7b57611b75836124a3565b50611c38565b6003546040805163d0a068cf60e01b81526004810184905290516001600160a01b039092169163d0a068cf91602480820192602092909190829003018186803b158015611bc757600080fd5b505afa158015611bdb573d6000803e3d6000fd5b505050506040513d6020811015611bf157600080fd5b505115611c0157611b75836123d4565b60405162461bcd60e51b81526004018080602001828103825260328152602001806126e16032913960400191505060405180910390fd5b5050565b6060808080600080878152600560205260409020600d015460ff166003811115611c6257fe5b1415611d0c5760408051600180825281830190925290602080830190803683375050604080516001808252818301909252929450905060208083019080368337505060035484519293506001600160a01b031691849150600090611cc257fe5b6001600160a01b03909216602092830291909101820152600087815260059091526040812060090154825190918391611cf757fe5b60209081029190910101529092509050611de0565b60016000878152600560205260409020600d015460ff166003811115611d2e57fe5b1415611dc35760408051600180825281830190925290602080830190803683375050604080516001808252818301909252929450905060208083019080368337505060045484519293506001600160a01b031691849150600090611d8e57fe5b6001600160a01b03909216602092830291909101820152600087815260059091526040812060080154825190918391611cf757fe5b505060408051600080825260208201908152818301909252925090505b9250929050565b808060005411611e2c576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b60008281526002602052604081208054600101905582906000848152600560205260409020600d015460ff166003811115611e6357fe5b14611eb5576040805162461bcd60e51b815260206004820152601d60248201527f53746174652073686f756c642062652057616974506172746974696f6e000000604482015290519081900360640190fd5b600354600084815260056020908152604091829020600901548251631d9f2d7760e01b8152600481019190915291516001600160a01b0390931692631d9f2d77926024808201939291829003018186803b158015611f1257600080fd5b505afa158015611f26573d6000803e3d6000fd5b505050506040513d6020811015611f3c57600080fd5b5051611f8f576040805162461bcd60e51b815260206004820152601a60248201527f446976657267656e63652073686f756c6420626520666f756e64000000000000604482015290519081900360640190fd5b600083815260056020908152604080832060090154600354825163326ff2f560e01b81526004810183905292519194936001600160a01b039091169263326ff2f59260248083019392829003018186803b158015611fec57600080fd5b505afa158015612000573d6000803e3d6000fd5b505050506040513d602081101561201657600080fd5b5051600086815260056020908152604091829020600a0183905560035482516360696f8160e01b8152600481018790526024810185905292519394506001600160a01b0316926360696f81926044808201939291829003018186803b15801561207e57600080fd5b505afa158015612092573d6000803e3d6000fd5b505050506040513d60208110156120a857600080fd5b5051600086815260056020908152604091829020600b019290925560035481516360696f8160e01b81526004810186905260018501602482015291516001600160a01b03909116926360696f819260448082019391829003018186803b15801561211157600080fd5b505afa158015612125573d6000803e3d6000fd5b505050506040513d602081101561213b57600080fd5b50516000868152600560209081526040808320600c810194909455600480548554600b909601548351631140bc8f60e31b815230938101939093526001600160a01b039687166024840152604483015291519490911693638a05e47893606480840194938390030190829087803b1580156121b557600080fd5b505af11580156121c9573d6000803e3d6000fd5b505050506040513d60208110156121df57600080fd5b50516000868152600560209081526040808320600881018590556009810193909355426007840155600d909201805460ff1916600117905581518881529081019290925280517fe6772c68f52fac01f8694176345ad126ec91d30c32f27a57e8d20c076c2b063d9281900390910190a15050505050565b60006101005b82156122725760019290921c916000190161225c565b60028160ff038161227f57fe5b049392505050565b60008087600381111561229657fe5b14156123375760035460408051631b8798d560e11b8152600481018990526024810188905260448101879052606481018690526084810185905290516001600160a01b039092169163370f31aa9160a480820192602092909190829003018186803b15801561230457600080fd5b505afa158015612318573d6000803e3d6000fd5b505050506040513d602081101561232e57600080fd5b505190506123ca565b600187600381111561234557fe5b141561239c5760048054604080516384dfd44d60e01b815292830189905260248301889052516001600160a01b03909116916384dfd44d916044808301926020929190829003018186803b15801561230457600080fd5b60028760038111156123aa57fe5b14806123c1575060038760038111156123bf57fe5b145b15610b24575060005b9695505050505050565b808060005411612419576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b61242282612514565b6000828152600560205260409020600d0180546002919060ff19166001835b021790555060008281526005602052604090819020600d015490517f2b38fc22e74e632df708aa11ee5b00b21845d40c64ccf39fafc8ef018b82b9b19160ff16908082600381111561248f57fe5b815260200191505060405180910390a15050565b8080600054116124e8576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b6124f182612514565b6000828152600560205260409020600d0180546003919060ff1916600183612441565b808060005411612559576040805162461bcd60e51b8152602060048201526016602482015260008051602061275a833981519152604482015290519081900360640190fd5b6000828152600560208190526040822080546001600160a01b031990811682556001820180548216905560028201849055600382018054909116905560048101839055908101829055600681018290556007810182905560088101829055600a8101829055600b8101829055600c0155611c3882610f95565b604080516101c081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081018290526101808101829052906101a08201529056fe53746174652073686f756c6420626520576169744d656d6f727950726f766556616c75657346696e616c2074696d65206d7573742062652067726561746572207468616e207a65726f5374617465206f66204d4d202073686f756c642062652046696e69736865645265706c61794475726174696f6e206f6620576169744d656d6f727950726f766556616c756573206d757374206265206f7665724661696c20746f2057696e4279506172746974696f6e54696d656f757420696e2063757272656e7420636f6e646974696f6e5374617465206f66204d4d2073686f756c642062652057616974696e675265706c61794e756d626572206f66206d656d6f72792061636365736573206469646e74206d61746368496e646578206e6f7420696e7374616e74696174656400000000000000000000a26469706673582212201a9e3f79da2958fd5b42faf6f99c637f7c6798312c75b628414e40bc0cd5372264736f6c63430007040033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getMaxInstanceDuration(uint256,uint256,uint256,uint256,uint256)": {
        "params": {
          "_maxCycle": "is the maximum amount of steps a machine can perform"
        }
      },
      "instantiate(address,address,uint256,address,bytes32,bytes32,uint256)": {
        "params": {
          "_challenger": "address of the challenger.",
          "_claimer": "address of the claimer.",
          "_claimerFinalHash": "final hash claimed by claimer",
          "_finalTime": "max cycle of the machine for that computation",
          "_initialHash": "hash in which both claimer and challenger agree on",
          "_machineAddress": "address of the machine that will run the instruction",
          "_roundDuration": "duration of the round (security param)"
        },
        "returns": {
          "_0": "VG index."
        }
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x282D CODESIZE SUB DUP1 PUSH2 0x282D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP4 SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x27AF DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x120 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73DF1612 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB6B5C319 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB6B5C319 EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0xBFA69ED8 EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xC526656C EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0xCD3784E7 EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0xDAAADF4E EQ PUSH2 0x4FA JUMPI PUSH2 0x120 JUMP JUMPDEST DUP1 PUSH4 0x73DF1612 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x82AFD23B EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x916B9BEF EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xA2DC7973 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0xA703DF28 EQ PUSH2 0x3C1 JUMPI PUSH2 0x120 JUMP JUMPDEST DUP1 PUSH4 0x26987B60 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x26987B60 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x370F31AA EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x3D46B819 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x5748C130 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x6CC9F17E EQ PUSH2 0x278 JUMPI PUSH2 0x120 JUMP JUMPDEST DUP1 PUSH3 0x446386 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x1FF62AB EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xC91927B EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x20B73870 EQ PUSH2 0x1B1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x5EF JUMP JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x64C JUMP JUMPDEST PUSH2 0x142 PUSH2 0x8E8 JUMP JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x8EE JUMP JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB66 JUMP JUMPDEST PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x34C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x334 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP11 POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xF80 JUMP JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xF95 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x11DF JUMP JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x19DA JUMP JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1A28 JUMP JUMPDEST PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x488 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x470 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4C7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4AF JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1DE7 JUMP JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x9 ADD SLOAD DUP2 MLOAD PUSH3 0x2231C3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH3 0x446386 SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x586 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x59C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x5E8 JUMPI POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x9 ADD SLOAD DUP2 MLOAD PUSH4 0x41FDE16F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x41FDE16F SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x266A PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP14 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE DUP4 SLOAD DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x6DC DUP3 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x4 SWAP6 DUP13 MUL DUP7 ADD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE DUP4 SLOAD DUP5 MSTORE DUP1 DUP5 KECCAK256 PUSH1 0x3 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP15 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP6 SLOAD DUP7 MSTORE DUP3 DUP7 KECCAK256 DUP8 ADD DUP12 SWAP1 SSTORE DUP6 SLOAD DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP1 SWAP5 ADD DUP10 SWAP1 SSTORE DUP5 SLOAD DUP6 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x6 ADD DUP9 SWAP1 SSTORE DUP5 SLOAD DUP6 MSTORE DUP2 DUP6 KECCAK256 TIMESTAMP PUSH1 0x7 SWAP1 SWAP2 ADD SSTORE SLOAD DUP2 MLOAD PUSH4 0x3562820D PUSH1 0xE0 SHL DUP2 MSTORE DUP15 DUP6 AND SWAP7 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP13 DUP5 AND PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0x44 DUP7 ADD DUP11 SWAP1 MSTORE PUSH1 0x64 DUP7 ADD DUP10 SWAP1 MSTORE PUSH1 0x84 DUP7 ADD DUP9 SWAP1 MSTORE PUSH1 0xA PUSH1 0xA4 DUP8 ADD MSTORE PUSH1 0xC4 DUP7 ADD DUP13 SWAP1 MSTORE SWAP1 MLOAD SWAP3 AND SWAP4 PUSH4 0x3562820D SWAP4 PUSH1 0xE4 DUP1 DUP4 ADD SWAP5 SWAP3 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x9 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP1 SLOAD DUP2 MSTORE SWAP1 DUP2 KECCAK256 PUSH1 0xD ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SLOAD PUSH32 0xD4AD9A0F11913813F7818801AD85D597C0DFD1D2C01BCB1A02F29C6D6544FDD5 SWAP1 DUP10 DUP10 PUSH2 0x848 DUP7 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x9 ADD SLOAD DUP3 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND SWAP2 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 DUP5 AND DUP6 DUP3 ADD MSTORE PUSH1 0x4 SWAP2 DUP13 MUL SWAP2 SWAP1 SWAP2 ADD PUSH1 0x60 DUP6 ADD MSTORE SWAP2 DUP10 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0xC0 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0xE0 DUP4 ADD DUP7 SWAP1 MSTORE PUSH2 0x100 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x120 ADD SWAP1 LOG1 POP PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 OR SWAP1 SSTORE DUP2 SLOAD SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x900 PUSH1 0x0 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x2287 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x913 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x2287 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x969 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x972 DUP2 PUSH2 0xF80 JUMP JUMPDEST PUSH2 0x9B4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E64657820696E616374697665 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0xA13 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA33 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA51 JUMPI PUSH13 0x2BB0B4BA2830B93A34BA34B7B7 PUSH1 0x99 SHL SWAP2 POP PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA73 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA99 JUMPI PUSH21 0x576169744D656D6F727950726F766556616C756573 PUSH1 0x58 SHL SWAP2 POP PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xABB JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xADC JUMPI PUSH16 0x2334B734B9B421B630B4B6B2B92BB7B7 PUSH1 0x81 SHL SWAP2 POP PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xAFE JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xB24 JUMPI PUSH21 0x2334B734B9B432B221B430B63632B733B2B92BB7B7 PUSH1 0x59 SHL SWAP2 POP PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x556E7265636F676E697A6564207374617465 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0xBAD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBD0 JUMPI INVALID JUMPDEST EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP11 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0xC2B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xC33 PUSH2 0x25D2 JUMP JUMPDEST PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x1C0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP1 DUP3 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE SWAP2 DUP3 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x8 DUP3 ADD SLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x9 DUP3 ADD SLOAD PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0xA DUP3 ADD SLOAD PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0xB DUP3 ADD SLOAD PUSH2 0x160 DUP5 ADD MSTORE PUSH1 0xC DUP3 ADD SLOAD PUSH2 0x180 DUP5 ADD MSTORE PUSH1 0xD DUP3 ADD SLOAD PUSH2 0x1A0 DUP5 ADD SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP2 GT ISZERO PUSH2 0xCFD JUMPI INVALID JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD08 JUMPI INVALID JUMPDEST SWAP1 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x5 DUP1 DUP3 MSTORE PUSH1 0xC0 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x60 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0xA0 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP2 PUSH1 0xC0 ADD MLOAD DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD44 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0xDF7 DUP3 PUSH2 0x1A0 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x28 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x41FDE16F DUP8 PUSH2 0x120 ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xC0 DUP8 ADD MLOAD PUSH2 0x1F4 PUSH2 0x2287 JUMP JUMPDEST DUP3 PUSH1 0xE0 ADD MLOAD ADD DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xE0A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH2 0x100 ADD MLOAD DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xE29 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH2 0x120 ADD MLOAD DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0xE48 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH2 0x140 ADD MLOAD DUP2 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0xE67 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x0 DUP1 DUP4 PUSH2 0x1A0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xE86 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xE9F JUMPI POP PUSH13 0x2BB0B4BA2830B93A34BA34B7B7 PUSH1 0x99 SHL JUMPDEST PUSH1 0x1 DUP4 PUSH2 0x1A0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xEB2 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xED3 JUMPI POP PUSH21 0x576169744D656D6F727950726F766556616C756573 PUSH1 0x58 SHL JUMPDEST PUSH1 0x2 DUP4 PUSH2 0x1A0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xEE6 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xF02 JUMPI POP PUSH16 0x2334B734B9B421B630B4B6B2B92BB7B7 PUSH1 0x81 SHL JUMPDEST PUSH1 0x3 DUP4 PUSH2 0x1A0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF15 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xF36 JUMPI POP PUSH21 0x2334B734B9B432B221B430B63632B733B2B92BB7B7 PUSH1 0x59 SHL JUMPDEST DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x80 ADD MLOAD DUP7 PUSH1 0xA0 ADD MLOAD DUP8 PUSH2 0x160 ADD MLOAD DUP9 PUSH2 0x180 ADD MLOAD DUP8 DUP10 SWAP13 POP SWAP13 POP SWAP13 POP SWAP13 POP SWAP13 POP SWAP13 POP SWAP13 POP SWAP13 POP SWAP13 POP POP POP POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE JUMP JUMPDEST DUP1 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0xFFD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ PUSH2 0x1067 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x21B0B73737BA1031329031B0B63632B210313C903AB9B2B9 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0xD DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SLOAD PUSH1 0x9 SWAP1 SWAP4 ADD SLOAD DUP6 MLOAD PUSH4 0x41FDE16F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP5 MLOAD PUSH2 0x1123 SWAP6 PUSH1 0xFF SWAP1 SWAP4 AND SWAP5 SWAP2 SWAP4 PUSH1 0x28 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x41FDE16F SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x1F4 PUSH2 0x2287 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD ADD TIMESTAMP GT PUSH2 0x1173 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26B3 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1195 JUMPI INVALID JUMPDEST EQ PUSH2 0x11D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2645 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11DA DUP4 PUSH2 0x23D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x1224 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ PUSH2 0x128B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x21B0B73737BA1031329031B0B63632B210313C903AB9B2B9 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12AD JUMPI INVALID JUMPDEST EQ PUSH2 0x12E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2645 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0x4 DUP1 SLOAD DUP5 MLOAD PUSH4 0x43D4B78B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x43D4B78B SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1357 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x136D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x13AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2713 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xF154F91D PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 ADD DUP5 SWAP1 MSTORE MLOAD PUSH1 0x60 SWAP3 DUP4 SWAP3 DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xF154F91D SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x140F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x1458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x146D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x148A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14B7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x149F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x14E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x14F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x1512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x153F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1527 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x1568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x157D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x159A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15C7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15AF JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7718D4C8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x166F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1657 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16AE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1696 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16ED JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16D5 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1729 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x173F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 POP SWAP1 POP PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x17A3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746570206469646E74206578697420636F72726563746C7900000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP5 MLOAD DUP2 EQ PUSH2 0x17E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2736 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1F6AEA2B PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 ADD DUP10 SWAP1 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x3ED5D456 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x182D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1841 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x4B7A14DD PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 ADD DUP12 SWAP1 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 POP PUSH4 0x96F429BA SWAP3 POP PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x188F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x18F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x268E PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0xC ADD SLOAD PUSH1 0x4 DUP1 SLOAD DUP5 MLOAD PUSH4 0x2419161 PUSH1 0xE6 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP12 SWAP1 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x90645840 SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1964 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x197A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD EQ ISZERO PUSH2 0x19C6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0xDCCAEE90C2E6D040E6D0DEEAD8C840DAC2E8C6D PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x19CF DUP10 PUSH2 0x24A3 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x1A21 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH2 0xBB0 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x1A6D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A8D JUMPI INVALID JUMPDEST EQ PUSH2 0x1ADF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746174652073686F756C642062652057616974506172746974696F6E000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x9 ADD SLOAD PUSH1 0x3 SLOAD DUP4 MLOAD PUSH4 0x32A3A14F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x6547429E SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH2 0x1B7B JUMPI PUSH2 0x1B75 DUP4 PUSH2 0x24A3 JUMP JUMPDEST POP PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD0A068CF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xD0A068CF SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BDB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH2 0x1C01 JUMPI PUSH2 0x1B75 DUP4 PUSH2 0x23D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26E1 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP1 DUP1 PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C62 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1D0C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP5 POP SWAP1 POP PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x3 SLOAD DUP5 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP5 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1CC2 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD DUP3 ADD MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x9 ADD SLOAD DUP3 MLOAD SWAP1 SWAP2 DUP4 SWAP2 PUSH2 0x1CF7 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1DE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D2E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1DC3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP5 POP SWAP1 POP PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x4 SLOAD DUP5 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP5 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1D8E JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD DUP3 ADD MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD SLOAD DUP3 MLOAD SWAP1 SWAP2 DUP4 SWAP2 PUSH2 0x1CF7 JUMPI INVALID JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP3 POP SWAP1 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x1E2C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP3 SWAP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1E63 JUMPI INVALID JUMPDEST EQ PUSH2 0x1EB5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746174652073686F756C642062652057616974506172746974696F6E000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x9 ADD SLOAD DUP3 MLOAD PUSH4 0x1D9F2D77 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0x1D9F2D77 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1F8F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446976657267656E63652073686F756C6420626520666F756E64000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x9 ADD SLOAD PUSH1 0x3 SLOAD DUP3 MLOAD PUSH4 0x326FF2F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 MLOAD SWAP2 SWAP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x326FF2F5 SWAP3 PUSH1 0x24 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2000 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2016 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0xA ADD DUP4 SWAP1 SSTORE PUSH1 0x3 SLOAD DUP3 MLOAD PUSH4 0x60696F81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP3 MLOAD SWAP4 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x60696F81 SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x207E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2092 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0xB ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x3 SLOAD DUP2 MLOAD PUSH4 0x60696F81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 DUP6 ADD PUSH1 0x24 DUP3 ADD MSTORE SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x60696F81 SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2111 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2125 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x213B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xC DUP2 ADD SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x4 DUP1 SLOAD DUP6 SLOAD PUSH1 0xB SWAP1 SWAP7 ADD SLOAD DUP4 MLOAD PUSH4 0x1140BC8F PUSH1 0xE3 SHL DUP2 MSTORE ADDRESS SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE SWAP2 MLOAD SWAP5 SWAP1 SWAP2 AND SWAP4 PUSH4 0x8A05E478 SWAP4 PUSH1 0x64 DUP1 DUP5 ADD SWAP5 SWAP4 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x8 DUP2 ADD DUP6 SWAP1 SSTORE PUSH1 0x9 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE TIMESTAMP PUSH1 0x7 DUP5 ADD SSTORE PUSH1 0xD SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD DUP9 DUP2 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD PUSH32 0xE6772C68F52FAC01F8694176345AD126EC91D30C32F27A57E8D20C076C2B063D SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 JUMPDEST DUP3 ISZERO PUSH2 0x2272 JUMPI PUSH1 0x1 SWAP3 SWAP1 SWAP3 SHR SWAP2 PUSH1 0x0 NOT ADD PUSH2 0x225C JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0xFF SUB DUP2 PUSH2 0x227F JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP8 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2296 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2337 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1B8798D5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x84 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x370F31AA SWAP2 PUSH1 0xA4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2318 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x232E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x1 DUP8 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2345 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x239C JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x84DFD44D PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 ADD DUP10 SWAP1 MSTORE PUSH1 0x24 DUP4 ADD DUP9 SWAP1 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x84DFD44D SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP8 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23AA JUMPI INVALID JUMPDEST EQ DUP1 PUSH2 0x23C1 JUMPI POP PUSH1 0x3 DUP8 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23BF JUMPI INVALID JUMPDEST EQ JUMPDEST ISZERO PUSH2 0xB24 JUMPI POP PUSH1 0x0 JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x2419 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2422 DUP3 PUSH2 0x2514 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD DUP1 SLOAD PUSH1 0x2 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0xD ADD SLOAD SWAP1 MLOAD PUSH32 0x2B38FC22E74E632DF708AA11EE5B00B21845D40C64CCF39FAFC8EF018B82B9B1 SWAP2 PUSH1 0xFF AND SWAP1 DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x248F JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST DUP1 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x24E8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x24F1 DUP3 PUSH2 0x2514 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD DUP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH2 0x2441 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x2559 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP5 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 SSTORE SWAP1 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x6 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x7 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x8 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0xA DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0xB DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0xC ADD SSTORE PUSH2 0x1C38 DUP3 PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x1C0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x140 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x160 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x180 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH2 0x1A0 DUP3 ADD MSTORE SWAP1 JUMP INVALID MSTORE8 PUSH21 0x6174652073686F756C6420626520576169744D656D PUSH16 0x727950726F766556616C75657346696E PUSH2 0x6C20 PUSH21 0x696D65206D75737420626520677265617465722074 PUSH9 0x616E207A65726F5374 PUSH2 0x7465 KECCAK256 PUSH16 0x66204D4D202073686F756C6420626520 CHAINID PUSH10 0x6E69736865645265706C PUSH2 0x7944 PUSH22 0x726174696F6E206F6620576169744D656D6F72795072 PUSH16 0x766556616C756573206D757374206265 KECCAK256 PUSH16 0x7665724661696C20746F2057696E4279 POP PUSH2 0x7274 PUSH10 0x74696F6E54696D656F75 PUSH21 0x20696E2063757272656E7420636F6E646974696F6E MSTORE8 PUSH21 0x617465206F66204D4D2073686F756C642062652057 PUSH2 0x6974 PUSH10 0x6E675265706C61794E75 PUSH14 0x626572206F66206D656D6F727920 PUSH2 0x6363 PUSH6 0x736573206469 PUSH5 0x6E74206D61 PUSH21 0x6368496E646578206E6F7420696E7374616E746961 PUSH21 0x656400000000000000000000A26469706673582212 KECCAK256 BYTE SWAP15 EXTCODEHASH PUSH26 0xDA2958FD5B42FAF6F99C637F7C6798312C75B628414E40BC0CD5 CALLDATACOPY 0x22 PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER ",
      "sourceMap": "1510:19616:11:-:0;;;759:1:2;729:31;;4440:227:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4440:227:11;;;;;;;4549:9;:61;;-1:-1:-1;;;;;4549:61:11;;;-1:-1:-1;;;;;;4549:61:11;;;;;;;4620:2;:40;;;;;;;;;;;;;;1510:19616;;;;;;"
    },
    "deployedBytecode": {
      "generatedSources": [],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x120 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73DF1612 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB6B5C319 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB6B5C319 EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0xBFA69ED8 EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xC526656C EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0xCD3784E7 EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0xDAAADF4E EQ PUSH2 0x4FA JUMPI PUSH2 0x120 JUMP JUMPDEST DUP1 PUSH4 0x73DF1612 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x82AFD23B EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x916B9BEF EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xA2DC7973 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0xA703DF28 EQ PUSH2 0x3C1 JUMPI PUSH2 0x120 JUMP JUMPDEST DUP1 PUSH4 0x26987B60 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x26987B60 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x370F31AA EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x3D46B819 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x5748C130 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x6CC9F17E EQ PUSH2 0x278 JUMPI PUSH2 0x120 JUMP JUMPDEST DUP1 PUSH3 0x446386 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x1FF62AB EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xC91927B EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x20B73870 EQ PUSH2 0x1B1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x517 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x5EF JUMP JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x64C JUMP JUMPDEST PUSH2 0x142 PUSH2 0x8E8 JUMP JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x8EE JUMP JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x922 JUMP JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB66 JUMP JUMPDEST PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x34C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x334 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP11 POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xF80 JUMP JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xF95 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x11DF JUMP JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x19DA JUMP JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1A28 JUMP JUMPDEST PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x488 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x470 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4C7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4AF JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1DE7 JUMP JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x9 ADD SLOAD DUP2 MLOAD PUSH3 0x2231C3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH3 0x446386 SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x586 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x59C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x5E8 JUMPI POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x9 ADD SLOAD DUP2 MLOAD PUSH4 0x41FDE16F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x41FDE16F SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x266A PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP14 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE DUP4 SLOAD DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x6DC DUP3 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x4 SWAP6 DUP13 MUL DUP7 ADD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE DUP4 SLOAD DUP5 MSTORE DUP1 DUP5 KECCAK256 PUSH1 0x3 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP15 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP6 SLOAD DUP7 MSTORE DUP3 DUP7 KECCAK256 DUP8 ADD DUP12 SWAP1 SSTORE DUP6 SLOAD DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP1 SWAP5 ADD DUP10 SWAP1 SSTORE DUP5 SLOAD DUP6 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x6 ADD DUP9 SWAP1 SSTORE DUP5 SLOAD DUP6 MSTORE DUP2 DUP6 KECCAK256 TIMESTAMP PUSH1 0x7 SWAP1 SWAP2 ADD SSTORE SLOAD DUP2 MLOAD PUSH4 0x3562820D PUSH1 0xE0 SHL DUP2 MSTORE DUP15 DUP6 AND SWAP7 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP13 DUP5 AND PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0x44 DUP7 ADD DUP11 SWAP1 MSTORE PUSH1 0x64 DUP7 ADD DUP10 SWAP1 MSTORE PUSH1 0x84 DUP7 ADD DUP9 SWAP1 MSTORE PUSH1 0xA PUSH1 0xA4 DUP8 ADD MSTORE PUSH1 0xC4 DUP7 ADD DUP13 SWAP1 MSTORE SWAP1 MLOAD SWAP3 AND SWAP4 PUSH4 0x3562820D SWAP4 PUSH1 0xE4 DUP1 DUP4 ADD SWAP5 SWAP3 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x9 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP1 SLOAD DUP2 MSTORE SWAP1 DUP2 KECCAK256 PUSH1 0xD ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SLOAD PUSH32 0xD4AD9A0F11913813F7818801AD85D597C0DFD1D2C01BCB1A02F29C6D6544FDD5 SWAP1 DUP10 DUP10 PUSH2 0x848 DUP7 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x9 ADD SLOAD DUP3 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND SWAP2 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 DUP5 AND DUP6 DUP3 ADD MSTORE PUSH1 0x4 SWAP2 DUP13 MUL SWAP2 SWAP1 SWAP2 ADD PUSH1 0x60 DUP6 ADD MSTORE SWAP2 DUP10 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0xC0 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0xE0 DUP4 ADD DUP7 SWAP1 MSTORE PUSH2 0x100 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x120 ADD SWAP1 LOG1 POP PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 OR SWAP1 SSTORE DUP2 SLOAD SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x900 PUSH1 0x0 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x2287 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x913 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x2287 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x969 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x972 DUP2 PUSH2 0xF80 JUMP JUMPDEST PUSH2 0x9B4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E64657820696E616374697665 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0xA13 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA33 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA51 JUMPI PUSH13 0x2BB0B4BA2830B93A34BA34B7B7 PUSH1 0x99 SHL SWAP2 POP PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA73 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xA99 JUMPI PUSH21 0x576169744D656D6F727950726F766556616C756573 PUSH1 0x58 SHL SWAP2 POP PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xABB JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xADC JUMPI PUSH16 0x2334B734B9B421B630B4B6B2B92BB7B7 PUSH1 0x81 SHL SWAP2 POP PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xAFE JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xB24 JUMPI PUSH21 0x2334B734B9B432B221B430B63632B733B2B92BB7B7 PUSH1 0x59 SHL SWAP2 POP PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x556E7265636F676E697A6564207374617465 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0xBAD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBD0 JUMPI INVALID JUMPDEST EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP11 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0xC2B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xC33 PUSH2 0x25D2 JUMP JUMPDEST PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x1C0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP1 DUP3 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE SWAP2 DUP3 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x8 DUP3 ADD SLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x9 DUP3 ADD SLOAD PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0xA DUP3 ADD SLOAD PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0xB DUP3 ADD SLOAD PUSH2 0x160 DUP5 ADD MSTORE PUSH1 0xC DUP3 ADD SLOAD PUSH2 0x180 DUP5 ADD MSTORE PUSH1 0xD DUP3 ADD SLOAD PUSH2 0x1A0 DUP5 ADD SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP2 GT ISZERO PUSH2 0xCFD JUMPI INVALID JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD08 JUMPI INVALID JUMPDEST SWAP1 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x5 DUP1 DUP3 MSTORE PUSH1 0xC0 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x60 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0xA0 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP2 PUSH1 0xC0 ADD MLOAD DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD44 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0xDF7 DUP3 PUSH2 0x1A0 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x28 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x41FDE16F DUP8 PUSH2 0x120 ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xC0 DUP8 ADD MLOAD PUSH2 0x1F4 PUSH2 0x2287 JUMP JUMPDEST DUP3 PUSH1 0xE0 ADD MLOAD ADD DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xE0A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH2 0x100 ADD MLOAD DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xE29 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH2 0x120 ADD MLOAD DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0xE48 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH2 0x140 ADD MLOAD DUP2 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0xE67 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x0 DUP1 DUP4 PUSH2 0x1A0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xE86 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xE9F JUMPI POP PUSH13 0x2BB0B4BA2830B93A34BA34B7B7 PUSH1 0x99 SHL JUMPDEST PUSH1 0x1 DUP4 PUSH2 0x1A0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xEB2 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xED3 JUMPI POP PUSH21 0x576169744D656D6F727950726F766556616C756573 PUSH1 0x58 SHL JUMPDEST PUSH1 0x2 DUP4 PUSH2 0x1A0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xEE6 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xF02 JUMPI POP PUSH16 0x2334B734B9B421B630B4B6B2B92BB7B7 PUSH1 0x81 SHL JUMPDEST PUSH1 0x3 DUP4 PUSH2 0x1A0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF15 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0xF36 JUMPI POP PUSH21 0x2334B734B9B432B221B430B63632B733B2B92BB7B7 PUSH1 0x59 SHL JUMPDEST DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x80 ADD MLOAD DUP7 PUSH1 0xA0 ADD MLOAD DUP8 PUSH2 0x160 ADD MLOAD DUP9 PUSH2 0x180 ADD MLOAD DUP8 DUP10 SWAP13 POP SWAP13 POP SWAP13 POP SWAP13 POP SWAP13 POP SWAP13 POP SWAP13 POP SWAP13 POP SWAP13 POP POP POP POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE JUMP JUMPDEST DUP1 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0xFFD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ PUSH2 0x1067 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x21B0B73737BA1031329031B0B63632B210313C903AB9B2B9 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0xD DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SLOAD PUSH1 0x9 SWAP1 SWAP4 ADD SLOAD DUP6 MLOAD PUSH4 0x41FDE16F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP5 MLOAD PUSH2 0x1123 SWAP6 PUSH1 0xFF SWAP1 SWAP4 AND SWAP5 SWAP2 SWAP4 PUSH1 0x28 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x41FDE16F SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x1F4 PUSH2 0x2287 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD ADD TIMESTAMP GT PUSH2 0x1173 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26B3 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1195 JUMPI INVALID JUMPDEST EQ PUSH2 0x11D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2645 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11DA DUP4 PUSH2 0x23D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x1224 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ PUSH2 0x128B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x21B0B73737BA1031329031B0B63632B210313C903AB9B2B9 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12AD JUMPI INVALID JUMPDEST EQ PUSH2 0x12E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2645 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0x4 DUP1 SLOAD DUP5 MLOAD PUSH4 0x43D4B78B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x43D4B78B SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1357 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x136D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x13AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2713 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xF154F91D PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 ADD DUP5 SWAP1 MSTORE MLOAD PUSH1 0x60 SWAP3 DUP4 SWAP3 DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xF154F91D SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x140F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x1458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x146D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x148A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14B7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x149F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x14E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x14F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x1512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x153F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1527 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x1568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x157D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x159A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15C7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15AF JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7718D4C8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x166F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1657 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16AE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1696 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16ED JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16D5 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1729 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x173F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 POP SWAP1 POP PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x17A3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746570206469646E74206578697420636F72726563746C7900000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP5 MLOAD DUP2 EQ PUSH2 0x17E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2736 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1F6AEA2B PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 ADD DUP10 SWAP1 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x3ED5D456 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x182D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1841 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x4B7A14DD PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 ADD DUP12 SWAP1 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 POP PUSH4 0x96F429BA SWAP3 POP PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x188F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x18F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x268E PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0xC ADD SLOAD PUSH1 0x4 DUP1 SLOAD DUP5 MLOAD PUSH4 0x2419161 PUSH1 0xE6 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP12 SWAP1 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x90645840 SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1964 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x197A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD EQ ISZERO PUSH2 0x19C6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0xDCCAEE90C2E6D040E6D0DEEAD8C840DAC2E8C6D PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x19CF DUP10 PUSH2 0x24A3 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x1A21 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH2 0xBB0 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x1A6D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A8D JUMPI INVALID JUMPDEST EQ PUSH2 0x1ADF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746174652073686F756C642062652057616974506172746974696F6E000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x9 ADD SLOAD PUSH1 0x3 SLOAD DUP4 MLOAD PUSH4 0x32A3A14F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x6547429E SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH2 0x1B7B JUMPI PUSH2 0x1B75 DUP4 PUSH2 0x24A3 JUMP JUMPDEST POP PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD0A068CF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xD0A068CF SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BDB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH2 0x1C01 JUMPI PUSH2 0x1B75 DUP4 PUSH2 0x23D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26E1 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP1 DUP1 PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C62 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1D0C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP5 POP SWAP1 POP PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x3 SLOAD DUP5 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP5 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1CC2 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD DUP3 ADD MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x9 ADD SLOAD DUP3 MLOAD SWAP1 SWAP2 DUP4 SWAP2 PUSH2 0x1CF7 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1DE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D2E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1DC3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP5 POP SWAP1 POP PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x4 SLOAD DUP5 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP5 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1D8E JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD DUP3 ADD MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD SLOAD DUP3 MLOAD SWAP1 SWAP2 DUP4 SWAP2 PUSH2 0x1CF7 JUMPI INVALID JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP3 POP SWAP1 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x1E2C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP3 SWAP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1E63 JUMPI INVALID JUMPDEST EQ PUSH2 0x1EB5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746174652073686F756C642062652057616974506172746974696F6E000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x9 ADD SLOAD DUP3 MLOAD PUSH4 0x1D9F2D77 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0x1D9F2D77 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1F8F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446976657267656E63652073686F756C6420626520666F756E64000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x9 ADD SLOAD PUSH1 0x3 SLOAD DUP3 MLOAD PUSH4 0x326FF2F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 MLOAD SWAP2 SWAP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x326FF2F5 SWAP3 PUSH1 0x24 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2000 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2016 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0xA ADD DUP4 SWAP1 SSTORE PUSH1 0x3 SLOAD DUP3 MLOAD PUSH4 0x60696F81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP3 MLOAD SWAP4 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x60696F81 SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x207E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2092 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0xB ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x3 SLOAD DUP2 MLOAD PUSH4 0x60696F81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 DUP6 ADD PUSH1 0x24 DUP3 ADD MSTORE SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x60696F81 SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2111 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2125 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x213B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xC DUP2 ADD SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x4 DUP1 SLOAD DUP6 SLOAD PUSH1 0xB SWAP1 SWAP7 ADD SLOAD DUP4 MLOAD PUSH4 0x1140BC8F PUSH1 0xE3 SHL DUP2 MSTORE ADDRESS SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE SWAP2 MLOAD SWAP5 SWAP1 SWAP2 AND SWAP4 PUSH4 0x8A05E478 SWAP4 PUSH1 0x64 DUP1 DUP5 ADD SWAP5 SWAP4 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x8 DUP2 ADD DUP6 SWAP1 SSTORE PUSH1 0x9 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE TIMESTAMP PUSH1 0x7 DUP5 ADD SSTORE PUSH1 0xD SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD DUP9 DUP2 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD PUSH32 0xE6772C68F52FAC01F8694176345AD126EC91D30C32F27A57E8D20C076C2B063D SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 JUMPDEST DUP3 ISZERO PUSH2 0x2272 JUMPI PUSH1 0x1 SWAP3 SWAP1 SWAP3 SHR SWAP2 PUSH1 0x0 NOT ADD PUSH2 0x225C JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0xFF SUB DUP2 PUSH2 0x227F JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP8 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2296 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2337 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1B8798D5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x84 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x370F31AA SWAP2 PUSH1 0xA4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2318 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x232E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x1 DUP8 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2345 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x239C JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x84DFD44D PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 ADD DUP10 SWAP1 MSTORE PUSH1 0x24 DUP4 ADD DUP9 SWAP1 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x84DFD44D SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP8 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23AA JUMPI INVALID JUMPDEST EQ DUP1 PUSH2 0x23C1 JUMPI POP PUSH1 0x3 DUP8 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23BF JUMPI INVALID JUMPDEST EQ JUMPDEST ISZERO PUSH2 0xB24 JUMPI POP PUSH1 0x0 JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x2419 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2422 DUP3 PUSH2 0x2514 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD DUP1 SLOAD PUSH1 0x2 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0xD ADD SLOAD SWAP1 MLOAD PUSH32 0x2B38FC22E74E632DF708AA11EE5B00B21845D40C64CCF39FAFC8EF018B82B9B1 SWAP2 PUSH1 0xFF AND SWAP1 DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x248F JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST DUP1 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x24E8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x24F1 DUP3 PUSH2 0x2514 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xD ADD DUP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH2 0x2441 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x0 SLOAD GT PUSH2 0x2559 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x275A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP5 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 SSTORE SWAP1 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x6 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x7 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x8 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0xA DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0xB DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0xC ADD SSTORE PUSH2 0x1C38 DUP3 PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x1C0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x140 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x160 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x180 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH2 0x1A0 DUP3 ADD MSTORE SWAP1 JUMP INVALID MSTORE8 PUSH21 0x6174652073686F756C6420626520576169744D656D PUSH16 0x727950726F766556616C75657346696E PUSH2 0x6C20 PUSH21 0x696D65206D75737420626520677265617465722074 PUSH9 0x616E207A65726F5374 PUSH2 0x7465 KECCAK256 PUSH16 0x66204D4D202073686F756C6420626520 CHAINID PUSH10 0x6E69736865645265706C PUSH2 0x7944 PUSH22 0x726174696F6E206F6620576169744D656D6F72795072 PUSH16 0x766556616C756573206D757374206265 KECCAK256 PUSH16 0x7665724661696C20746F2057696E4279 POP PUSH2 0x7274 PUSH10 0x74696F6E54696D656F75 PUSH21 0x20696E2063757272656E7420636F6E646974696F6E MSTORE8 PUSH21 0x617465206F66204D4D2073686F756C642062652057 PUSH2 0x6974 PUSH10 0x6E675265706C61794E75 PUSH14 0x626572206F66206D656D6F727920 PUSH2 0x6363 PUSH6 0x736573206469 PUSH5 0x6E74206D61 PUSH21 0x6368496E646578206E6F7420696E7374616E746961 PUSH21 0x656400000000000000000000A26469706673582212 KECCAK256 BYTE SWAP15 EXTCODEHASH PUSH26 0xDA2958FD5B42FAF6F99C637F7C6798312C75B628414E40BC0CD5 CALLDATACOPY 0x22 PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER ",
      "sourceMap": "1510:19616:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20604:177;;;;;;;;;;;;;;;;-1:-1:-1;20604:177:11;;:::i;:::-;;;;;;;;;;;;;;;;13970:191;;;;;;;;;;;;;;;;-1:-1:-1;13970:191:11;;;;;;-1:-1:-1;;;;;13970:191:11;;:::i;:::-;;;;;;;;;;;;;;;;;;20430:168;;;;;;;;;;;;;;;;-1:-1:-1;20430:168:11;;:::i;5211:1594::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5211:1594:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;729:31:2:-;;;:::i;15912:816:11:-;;;;;;;;;;;;;;;;-1:-1:-1;15912:816:11;;;;;;;;;;;;;;;;;;;;;;:::i;1405:186:2:-;;;;;;;;;;;;;;;;-1:-1:-1;1405:186:2;;:::i;17590:674:11:-;;;;;;;;;;;;;;;;-1:-1:-1;17590:674:11;;:::i;18761:201::-;;;;;;;;;;;;;;;;-1:-1:-1;18761:201:11;;:::i;12009:1955::-;;;;;;;;;;;;;;;;-1:-1:-1;12009:1955:11;;;;;;-1:-1:-1;;;;;12009:1955:11;;:::i;:::-;;;;;-1:-1:-1;;;;;12009:1955:11;;;;;;-1:-1:-1;;;;;12009:1955:11;;;;;;-1:-1:-1;;;;;12009:1955:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1289:110:2;;;;;;;;;;;;;;;;-1:-1:-1;1289:110:2;;:::i;1597:118::-;;;;;;;;;;;;;;;;-1:-1:-1;1597:118:2;;:::i;:::-;;10923:1058:11;;;;;;;;;;;;;;;;-1:-1:-1;10923:1058:11;;:::i;9684:1108::-;;;;;;;;;;;;;;;;-1:-1:-1;9684:1108:11;;:::i;18968:207::-;;;;;;;;;;;;;;;;-1:-1:-1;18968:207:11;;:::i;7085:600::-;;;;;;;;;;;;;;;;-1:-1:-1;7085:600:11;;:::i;16734:850::-;;;;;;;;;;;;;;;;-1:-1:-1;16734:850:11;;;;;;-1:-1:-1;;;;;16734:850:11;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8100:1272;;;;;;;;;;;;;;;;-1:-1:-1;8100:1272:11;;:::i;20869:255::-;;;;;;;;;;;;;;;;-1:-1:-1;20869:255:11;;:::i;20604:177::-;20707:9;;20681:7;20739:16;;;:8;:16;;;;;;;;:34;;;20707:67;;-1:-1:-1;;;20707:67:11;;;;;;;;;;;20681:7;;-1:-1:-1;;;;;20707:9:11;;:31;;:67;;;;;20739:16;;20707:67;;;;;;:9;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20707:67:11;;20604:177;-1:-1:-1;;20604:177:11:o;13970:191::-;14052:4;14077:16;;;:8;:16;;;;;:27;-1:-1:-1;;;;;14077:36:11;;;:27;;:36;;14076:77;;-1:-1:-1;14119:16:11;;;;:8;:16;;;;;:24;;;-1:-1:-1;;;;;14119:33:11;;;:24;;:33;14076:77;14068:86;13970:191;-1:-1:-1;;;13970:191:11:o;20430:168::-;20533:9;;20507:7;20556:16;;;:8;:16;;;;;;;;:34;;;20533:58;;-1:-1:-1;;;20533:58:11;;;;;;;;;;;20507:7;;-1:-1:-1;;;;;20533:9:11;;:22;;:58;;;;;20556:16;;20533:58;;;;;;:9;:58;;;;;;;;;;5211:1594;5465:7;5509:1;5496:10;:14;5488:63;;;;-1:-1:-1;;;5488:63:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5561:22;5570:12;;5561:22;;:8;:22;;;;;;:47;;-1:-1:-1;;;;;5561:47:11;;;-1:-1:-1;;;;;;5561:47:11;;;;;;;5627:12;;5618:22;;;;;;5561:47;5618:30;:41;;;;;;;;;;;;;;;5725:23;5737:10;5725:11;:23::i;:::-;5669:22;5678:12;;5669:22;;:8;:22;;;;;;;;5751:1;5708:40;;;:44;;5669:36;;;;:83;5771:12;;5762:22;;;;;:30;;;;:66;;-1:-1:-1;;;;;5762:66:11;;;-1:-1:-1;;;;;;5762:66:11;;;;;;;;;;5847:12;;5838:22;;;;;:34;;:49;;;5906:12;;5897:22;;;;;:39;;;:59;;;5975:12;;5966:22;;;;;:32;;:45;;;6030:12;;6021:22;;;;;6061:15;6021:37;;;;:55;6129:9;:203;;-1:-1:-1;;;6129:203:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6292:2;6129:203;;;;;;;;;;;;:9;;;:21;;:203;;;;;;;;;;;;;:9;:203;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6129:203:11;6086:22;6095:12;;6086:22;;:8;6129:203;6086:22;;;;;:40;;:246;;;;6351:12;;6342:22;;;;;:35;;:57;;-1:-1:-1;;6342:57:11;;;6437:12;6414:314;;6463:11;6488:8;6527:23;6539:10;6527:11;:23::i;:::-;6678:22;6687:12;;6678:22;;:8;:22;;;;;;;;;:40;;;6414:314;;;;;-1:-1:-1;;;;;6414:314:11;;;;;;;;;;;;;;;;;6553:1;6510:40;;;:44;;;;6414:314;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6739:20:11;6746:12;;6739:20;;6762:4;6739:20;;;;;;;:27;;-1:-1:-1;;6739:27:11;;;;;6783:14;;;;;;;;5211:1594;;;;;;;;;:::o;729:31:2:-;;;;:::o;15912:816:11:-;16142:7;16165:29;16197:209;16230:19;16263:14;16291:19;16324:14;16352:9;16375:21;16197:19;:209::i;:::-;16165:241;;16417:29;16449:209;16482:19;16515:14;16543:19;16576:14;16604:9;16627:21;16449:19;:209::i;:::-;16676:45;;;;;15912:816;-1:-1:-1;;;;;;;15912:816:11:o;1405:186:2:-;1528:20;1503:6;1081;1066:12;;:21;1058:56;;;;;-1:-1:-1;;;1058:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1058:56:2;;;;;;;;;;;;;;;1132:16;1141:6;1132:8;:16::i;:::-;1124:43;;;;;-1:-1:-1;;;1124:43:2;;;;;;;;;;;;-1:-1:-1;;;1124:43:2;;;;;;;;;;;;;;;1571:13:::1;::::0;;;:5:::1;:13;::::0;;;;;;-1:-1:-1;1177:1:2::1;1405:186:::0;;;;:::o;17590:674:11:-;17702:7;17677:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;17762:19:11::1;17729:16:::0;;;:8:::1;:16;::::0;;;;:29:::1;;::::0;::::1;;:52;::::0;::::1;;;;;;;17725:105;;;-1:-1:-1::0;;;17797:22:11::1;;;;17725:105;17876:27;17843:16;::::0;;;:8:::1;:16;::::0;;;;:29:::1;;::::0;::::1;;:60;::::0;::::1;;;;;;;17839:121;;;-1:-1:-1::0;;;17919:30:11::1;;;;17839:121;18006:24;17973:16;::::0;;;:8:::1;:16;::::0;;;;:29:::1;;::::0;::::1;;:57;::::0;::::1;;;;;;;17969:113;;;-1:-1:-1::0;;;18046:25:11::1;;;;17969:113;18128:27;18095:16;::::0;;;:8:::1;:16;::::0;;;;:29:::1;;::::0;::::1;;:60;::::0;::::1;;;;;;;18091:121;;;-1:-1:-1::0;;;18171:30:11::1;;;;18091:121;18221:36;::::0;;-1:-1:-1;;;18221:36:11;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;18221:36:11;;;;;;;;;;;;;::::1;18761:201:::0;18883:4;18858:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;18935:24:11::1;18902:57;:16;::::0;;;:8:::1;:16;::::0;;;;:29:::1;;::::0;::::1;;:57;::::0;::::1;;;;;;;::::0;18761:201;-1:-1:-1;;;18761:201:11:o;12009:1955::-;12115:19;12152:16;12186:25;12229:20;12267:25;12310:29;12357:28;12403:21;12442:25;12089:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;12483:14:11::1;;:::i;:::-;12500:16;::::0;;;:8:::1;:16;::::0;;;;;;;;12483:33;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;12483:33:11;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;::::1;;;;;;;;;;;;;;::::0;;-1:-1:-1;12554:13:11::1;::::0;;12565:1:::1;12554:13:::0;;;;;::::1;::::0;;;12483:33;;-1:-1:-1;12527:24:11::1;::::0;12554:13;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;12554:13:11::1;12527:40;;12593:1;:11;;;12577:10;12588:1;12577:13;;;;;;;;;;;;;:27;;;::::0;::::1;12649:293;12686:1;:14;;;12718:1;:15;;;12751:2;12796:9;;;;;;;;;-1:-1:-1::0;;;;;12796:9:11::1;-1:-1:-1::0;;;;;12796:22:11::1;;12819:1;:19;;;12796:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;12796:43:11;12857:11:::1;::::0;::::1;::::0;12897:3:::1;12649:19;:293::i;:::-;12630:1;:16;;;:312;12614:10;12625:1;12614:13;;;;;;;;;;;;;:328;;;::::0;::::1;12979:1;:12;;;12963:10;12974:1;12963:13;;;;;;;;;;;;;:28;;;::::0;::::1;13017:1;:19;;;13001:10;13012:1;13001:13;;;;;;;;;;;;;:35;;;::::0;::::1;13062:1;:16;;;13046:10;13057:1;13046:13;;;;;;;;;::::0;;::::1;::::0;;;;;:32;13189:20:::1;::::0;13223:1:::1;:14;;;:37;;;;;;;;;13219:98;;;-1:-1:-1::0;;;;13219:98:11::1;13348:27;13330:1;:14;;;:45;;;;;;;;;13326:114;;;-1:-1:-1::0;;;;13326:114:11::1;13471:24;13453:1;:14;;;:42;;;;;;;;;13449:106;;;-1:-1:-1::0;;;;13449:106:11::1;13586:27;13568:1;:14;;;:45;;;;;;;;;13564:114;;;-1:-1:-1::0;;;;13564:114:11::1;13709:1;:12;;;13735:1;:9;;;13758:1;:9;;;13781:1;:13;;;13808:1;:18;;;13840:1;:22;;;13876:1;:21;;;13911:12;13937:10;13688:269;;;;;;;;;;;;;;;;;;;;;12009:1955:::0;;;;;;;;;;;;:::o;1289:110:2:-;1353:4;1377:14;;;:6;:14;;;;;;;;;1289:110::o;1597:118::-;1676:5;1659:14;;;:6;:14;;;;;;;;:22;;-1:-1:-1;;1659:22:2;;;1691:5;:13;;;;;:17;1597:118::o;10923:1058:11:-;11008:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;11031:16:11::1;::::0;;;:8:::1;:16;::::0;;;;:24:::1;;::::0;-1:-1:-1;;;;;11031:24:11::1;834:10:0;:18:::0;::::1;826:55;;;::::0;;-1:-1:-1;;;826:55:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;826:55:0;;;;;;;;;;;;;::::1;;11461:16:11::2;::::0;;;:8:::2;:16;::::0;;;;;;;;:29:::2;::::0;::::2;::::0;11508:30:::2;::::0;::::2;::::0;11601:9:::2;::::0;11624:34:::2;::::0;;::::2;::::0;11601:58;;-1:-1:-1;;;11601:58:11;;::::2;::::0;::::2;::::0;;;;;;11424:349:::2;::::0;11461:29:::2;::::0;;::::2;::::0;11508:30;;11556:2:::2;::::0;-1:-1:-1;;;;;11601:9:11;;::::2;::::0;:22:::2;::::0;:58;;;;;;;;;;:9;:58;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;11601:58:11;11677:16:::2;::::0;;;:8:::2;11601:58;11677:16:::0;;;;:26:::2;;::::0;11732:3:::2;11424:19;:349::i;:::-;11390:16;::::0;;;:8:::2;:16;::::0;;;;:31:::2;;::::0;:383:::2;11372:15;:401;11351:473;;;;-1:-1:-1::0;;;11351:473:11::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11876:27;11843:16;::::0;;;:8:::2;:16;::::0;;;;:29:::2;;::::0;::::2;;:60;::::0;::::2;;;;;;;11835:110;;;;-1:-1:-1::0;;;11835:110:11::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11955:19;11967:6;11955:11;:19::i;:::-;989:1:2::1;10923:1058:11::0;;:::o;9684:1108::-;9773:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;9796:16:11::1;::::0;;;:8:::1;:16;::::0;;;;:27;-1:-1:-1;;;;;9796:27:11::1;834:10:0;:18:::0;::::1;826:55;;;::::0;;-1:-1:-1;;;826:55:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;826:55:0;;;;;;;;;;;;;::::1;;9880:27:11::2;9847:16;::::0;;;:8:::2;:16;::::0;;;;:29:::2;;::::0;::::2;;:60;::::0;::::2;;;;;;;9839:110;;;;-1:-1:-1::0;;;9839:110:11::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9959:15;9977:16:::0;;;:8:::2;:16;::::0;;;;;;;;:27:::2;;::::0;10022:2:::2;::::0;;:32;;-1:-1:-1;;;10022:32:11;;;;::::2;::::0;;;;;9977:27;;-1:-1:-1;;;;;10022:2:11::2;::::0;:23:::2;::::0;:32;;;;;;;;;;:2;:32;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;10022:32:11;10014:80:::2;;;;-1:-1:-1::0;;;10014:80:11::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10228:2;::::0;;:23:::2;::::0;;-1:-1:-1;;;10228:23:11;;;;::::2;::::0;;;;10119:25:::2;::::0;;;;;-1:-1:-1;;;;;10228:2:11;;::::2;::::0;:14:::2;::::0;:23;;;;;:2:::2;::::0;:23;;;;;;;:2;:23;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;::::0;;::::2;-1:-1:-1::0;;10228:23:11::2;::::0;::::2;;::::0;::::2;::::0;::::2;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;::::0;;-1:-1:-1;10228:23:11;;::::2;::::0;;::::2;::::0;;::::2;::::0;::::2;::::0;;;::::2;;;;;;;;::::0;;::::2;::::0;;;::::2;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;::::0;;-1:-1:-1;10228:23:11;;::::2;::::0;;::::2;::::0;;::::2;::::0;::::2;::::0;;;::::2;;;;;;;;::::0;;::::2;::::0;;;::::2;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;::::0;;-1:-1:-1;10228:23:11;;::::2;::::0;;::::2;::::0;;::::2;::::0;::::2;::::0;;;::::2;;;;;;;;::::0;;::::2;::::0;;;::::2;::::0;::::2;;;;;;;;;;;;;;::::0;::::2;;10105:146;;;;;;10263:14;10279:22:::0;10305:8:::2;:16;10314:6;10305:16;;;;;;;;;;;:24;;;;;;;;;;-1:-1:-1::0;;;;;10305:24:11::2;-1:-1:-1::0;;;;;10305:29:11::2;;10335:9;10346:6;10354:7;10305:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::2;::::0;;;::::2;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::2;::::0;;;::::2;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::2;::::0;;;::::2;::::0;::::2;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;10305:57:11;;::::2;::::0;;::::2;::::0;;;-1:-1:-1;10305:57:11;-1:-1:-1;10381:13:11::2;::::0;::::2;::::0;10373:51:::2;;;::::0;;-1:-1:-1;;;10373:51:11;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;10460:9;:16;10442:14;:34;10434:83;;;;-1:-1:-1::0;;;10434:83:11::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10528:2;::::0;;:29:::2;::::0;;-1:-1:-1;;;10528:29:11;;;;::::2;::::0;;;;-1:-1:-1;;;;;10528:2:11;;::::2;::::0;:20:::2;::::0;:29;;;;;:2:::2;::::0;:29;;;;;;;:2;;:29;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;10576:2:11::2;::::0;;:33:::2;::::0;;-1:-1:-1;;;10576:33:11;;;;::::2;::::0;;;;-1:-1:-1;;;;;10576:2:11;;::::2;::::0;-1:-1:-1;10576:24:11::2;::::0;-1:-1:-1;10576:33:11;;;;;::::2;::::0;;;;;;;;:2;:33;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;10576:33:11;10568:83:::2;;;;-1:-1:-1::0;;;10568:83:11::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10692:16;::::0;;;:8:::2;:16;::::0;;;;;;;;:36:::2;;::::0;10669:2:::2;::::0;;:19;;-1:-1:-1;;;10669:19:11;;;;::::2;::::0;;;;;10692:36;;-1:-1:-1;;;;;10669:2:11::2;::::0;:10:::2;::::0;:19;;;;;;;;;;:2;:19;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;10669:19:11;:59:::2;;10661:92;;;::::0;;-1:-1:-1;;;10661:92:11;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;10661:92:11;;;;;;;;;;;;;::::2;;10763:22;10778:6;10763:14;:22::i;:::-;891:1:0;;;;;;989::2::1;9684:1108:11::0;;:::o;18968:207::-;19093:4;19068:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;19145:27:11::1;19112:60;::::0;7085:600;7173:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;7236:19:11::1;7203:16:::0;;;:8:::1;:16;::::0;;;;:29:::1;;::::0;::::1;;:52;::::0;::::1;;;;;;;7195:94;;;::::0;;-1:-1:-1;;;7195:94:11;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;7299:22;7324:16:::0;;;:8:::1;:16;::::0;;;;;;;;:34:::1;;::::0;7372:9:::1;::::0;:46;;-1:-1:-1;;;7372:46:11;;::::1;::::0;::::1;::::0;;;;;7324:34;;-1:-1:-1;;;;;7372:9:11;;::::1;::::0;:30:::1;::::0;:46;;;;;;;;;;:9;:46;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;7372:46:11;7368:119:::1;;;7434:22;7449:6;7434:14;:22::i;:::-;7470:7;;;7368:119;7500:9;::::0;:43:::1;::::0;;-1:-1:-1;;;7500:43:11;;::::1;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;7500:9:11;;::::1;::::0;:27:::1;::::0;:43;;;;;::::1;::::0;;;;;;;;;:9;:43;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;7500:43:11;7496:113:::1;;;7559:19;7571:6;7559:11;:19::i;7496:113::-;7618:60;;-1:-1:-1::0;;;7618:60:11::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;989:1:2;7085:600:11::0;;:::o;16734:850::-;16822:27;;;;17013:19;16980:16;;;;:8;:16;;;;;:29;;;;;:52;;;;;;;;;16976:258;;;17052:16;;;17066:1;17052:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17086:16:11;;;17100:1;17086:16;;;;;;;;;17048:20;;-1:-1:-1;17100:1:11;-1:-1:-1;17086:16:11;;;;;;;;;-1:-1:-1;;17131:9:11;;17116:4;;17082:20;;-1:-1:-1;;;;;;17131:9:11;;17116:4;;-1:-1:-1;17131:9:11;;17116:4;;;;-1:-1:-1;;;;;17116:25:11;;;:4;;;;;;;;;;:25;17162:16;;;;:8;:16;;;;;;:34;;;17155:4;;17162:34;;17155:1;;:4;;;;;;;;;;;;;:41;17218:1;;-1:-1:-1;17221:1:11;-1:-1:-1;17210:13:11;;16976:258;17280:27;17247:16;;;;:8;:16;;;;;:29;;;;;:60;;;;;;;;;17243:252;;;17327:16;;;17341:1;17327:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17361:16:11;;;17375:1;17361:16;;;;;;;;;17323:20;;-1:-1:-1;17375:1:11;-1:-1:-1;17361:16:11;;;;;;;;;-1:-1:-1;;17406:2:11;;17391:4;;17357:20;;-1:-1:-1;;;;;;17406:2:11;;17391:4;;-1:-1:-1;17406:2:11;;17391:4;;;;-1:-1:-1;;;;;17391:18:11;;;:4;;;;;;;;;;:18;17430:16;;;;:8;:16;;;;;;:27;;;17423:4;;17430:27;;17423:1;;:4;;;17243:252;-1:-1:-1;;17508:16:11;;;17522:1;17508:16;;;;;;17538;;;;;;;;;17508;-1:-1:-1;17508:16:11;-1:-1:-1;16734:850:11;;;;;;:::o;8100:1272::-;8191:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;1250:13:::1;::::0;;;:5:::1;:13;::::0;;;;:15;;::::1;;::::0;;8222:6:11;;8252:16:::2;::::0;;;:8:::2;:16;::::0;;;;:29:::2;;::::0;::::2;;:52;::::0;::::2;;;;;;;8244:94;;;::::0;;-1:-1:-1;;;8244:94:11;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;8356:9;::::0;::::2;8389:16:::0;;;:8:::2;:16;::::0;;;;;;;;:34:::2;;::::0;8356:68;;-1:-1:-1;;;8356:68:11;;::::2;::::0;::::2;::::0;;;;;;-1:-1:-1;;;;;8356:9:11;;::::2;::::0;:32:::2;::::0;:68;;;;;8389:16;8356:68;;;;;;:9;:68;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;8356:68:11;8348:107:::2;;;::::0;;-1:-1:-1;;;8348:107:11;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;8465:22;8490:16:::0;;;:8:::2;:16;::::0;;;;;;;:34:::2;;::::0;8556:9:::2;::::0;:40;;-1:-1:-1;;;8556:40:11;;::::2;::::0;::::2;::::0;;;;;8490:34;;8465:22;-1:-1:-1;;;;;8556:9:11;;::::2;::::0;:24:::2;::::0;:40;;;;;8490:16;8556:40;;;;;:9;:40;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;8556:40:11;8606:16:::2;::::0;;;:8:::2;8556:40;8606:16:::0;;;;;;;;:31:::2;;:48:::0;;;8704:9:::2;::::0;:50;;-1:-1:-1;;;8704:50:11;;::::2;::::0;::::2;::::0;;;;;;;;;;;8556:40;;-1:-1:-1;;;;;;8704:9:11::2;::::0;:18:::2;::::0;:50;;;;;8556:40;8704:50;;;;;;:9;:50;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;8704:50:11;8664:16:::2;::::0;;;:8:::2;8704:50;8664:16:::0;;;;;;;;:37:::2;;:90:::0;;;;8803:9:::2;::::0;:54;;-1:-1:-1;;;8803:54:11;;::::2;::::0;::::2;::::0;;;:9;8838:18;::::2;8803:54:::0;;;;;;-1:-1:-1;;;;;8803:9:11;;::::2;::::0;:18:::2;::::0;:54;;;;;;;;;;;:9;:54;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;8803:54:11;8764:16:::2;::::0;;;:8:::2;8803:54;8764:16:::0;;;;;;;:36:::2;::::0;::::2;:93:::0;;;;8897:2:::2;::::0;;8952:27;;8993:37:::2;::::0;;::::2;::::0;8897:143;;-1:-1:-1;;;8897:143:11;;8933:4:::2;8897:143:::0;;::::2;::::0;;;;-1:-1:-1;;;;;8952:27:11;;::::2;8897:143:::0;;;;;;;;;;:2;;;::::2;::::0;:14:::2;::::0;:143;;;;;8803:54;8897:143;;;;;;;:2;:143;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;8897:143:11;8867:16:::2;::::0;;;:8:::2;8897:143;8867:16:::0;;;;;;;:27:::2;::::0;::::2;:173:::0;;;9127:34:::2;::::0;::::2;9120:41:::0;;;;9205:15:::2;9171:31;::::0;::::2;:49:::0;9230:29:::2;::::0;;::::2;:59:::0;;-1:-1:-1;;9230:59:11::2;-1:-1:-1::0;9230:59:11::2;::::0;;9304:61;;;;;;;::::2;::::0;;;;;;::::2;::::0;;;;;;;;::::2;1275:1:2;;989::::1;8100:1272:11::0;;:::o;20869:255::-;20919:6;20951:3;20965:73;20972:6;;20965:73;;21003:1;20998:6;;;;;-1:-1:-1;;21018:9:11;20965:73;;;21116:1;21105:7;21099:3;:13;21098:19;;;;;;;20869:255;-1:-1:-1;;;20869:255:11:o;14719:843::-;14960:7;;15043:6;:29;;;;;;;;;15039:186;;;15095:9;;:119;;;-1:-1:-1;;;15095:119:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15095:9:11;;;;:32;;:119;;;;;;;;;;;;;;;:9;:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15095:119:11;;-1:-1:-1;15088:126:11;;15039:186;15248:27;15238:6;:37;;;;;;;;;15234:137;;;15298:2;;;:62;;;-1:-1:-1;;;15298:62:11;;;;;;;;;;;;;;;-1:-1:-1;;;;;15298:2:11;;;;:25;;:62;;;;;;;;;;;;;;:2;:62;;;;;;;;;;15234:137;15395:24;15385:6;:34;;;;;;;;;:75;;;-1:-1:-1;15433:27:11;15423:6;:37;;;;;;;;;15385:75;15381:129;;;-1:-1:-1;15483:1:11;15519:36;14719:843;;;;;;;;:::o;20182:242::-;20252:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;20274:21:11::1;20288:6;20274:13;:21::i;:::-;20305:16;::::0;;;:8:::1;:16;::::0;;;;:29:::1;;:56:::0;;20337:24:::1;::::0;20305:29;-1:-1:-1;;20305:56:11::1;::::0;20337:24;20305:56:::1;;;::::0;;-1:-1:-1;20387:16:11::1;::::0;;;:8:::1;:16;::::0;;;;;;:29:::1;;::::0;20376:41;;::::1;::::0;20387:29:::1;;::::0;20376:41;20387:29;20376:41:::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;20182:242:::0;;:::o;19928:248::-;20001:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;20023:21:11::1;20037:6;20023:13;:21::i;:::-;20054:16;::::0;;;:8:::1;:16;::::0;;;;:29:::1;;:59:::0;;20086:27:::1;::::0;20054:29;-1:-1:-1;;20054:59:11::1;::::0;20086:27;20054:59:::1;::::0;19181:741;19254:6;946::2;931:12;;:21;923:56;;;;;-1:-1:-1;;;923:56:2;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;923:56:2;;;;;;;;;;;;;;;19283:16:11::1;::::0;;;:8:::1;:16;::::0;;;;;;19276:34;;-1:-1:-1;;;;;;19276:34:11;;::::1;::::0;;;19327:24;::::1;19320:31:::0;;;::::1;::::0;;19368:30:::1;::::0;::::1;19361:37:::0;;;19415:24:::1;::::0;::::1;19408:31:::0;;;;::::1;::::0;;19456:28:::1;::::0;::::1;19449:35:::0;;;19501:33;;::::1;19494:40:::0;;;19551:26:::1;::::0;::::1;19544:33:::0;;;19594:31:::1;::::0;::::1;19587:38:::0;;;19705:27:::1;::::0;::::1;19698:34:::0;;;19749:31:::1;::::0;::::1;19742:38:::0;;;19797:37:::1;::::0;::::1;19790:44:::0;;;19851:36:::1;;19844:43:::0;19897:18:::1;19292:6:::0;19897:10:::1;:18::i;-1:-1:-1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "2031800",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "claimVictoryByTime(uint256)": "infinite",
        "currentIndex()": "1021",
        "deactivate(uint256)": "26203",
        "getCurrentState(uint256)": "infinite",
        "getMaxInstanceDuration(uint256,uint256,uint256,uint256,uint256)": "infinite",
        "getNonce(uint256)": "infinite",
        "getPartitionGameIndex(uint256)": "infinite",
        "getPartitionQuerySize(uint256)": "infinite",
        "getState(uint256,address)": "infinite",
        "getSubInstances(uint256,address)": "infinite",
        "instantiate(address,address,uint256,address,bytes32,bytes32,uint256)": "infinite",
        "isActive(uint256)": "1163",
        "isConcerned(uint256,address)": "2160",
        "log2OverTwo(uint256)": "infinite",
        "settleVerificationGame(uint256)": "infinite",
        "startMachineRunChallenge(uint256)": "infinite",
        "stateIsFinishedChallengerWon(uint256)": "infinite",
        "stateIsFinishedClaimerWon(uint256)": "infinite",
        "winByPartitionTimeout(uint256)": "infinite"
      },
      "internal": {
        "challengerWins(uint256)": "infinite",
        "claimerWins(uint256)": "infinite",
        "clearInstance(uint256)": "infinite",
        "getMaxStateDuration(enum VGInterface.state,uint256,uint256,uint256,uint256,uint256)": "infinite"
      }
    },
    "methodIdentifiers": {
      "claimVictoryByTime(uint256)": "a2dc7973",
      "currentIndex()": "26987b60",
      "deactivate(uint256)": "916b9bef",
      "getCurrentState(uint256)": "5748c130",
      "getMaxInstanceDuration(uint256,uint256,uint256,uint256,uint256)": "370f31aa",
      "getNonce(uint256)": "3d46b819",
      "getPartitionGameIndex(uint256)": "00446386",
      "getPartitionQuerySize(uint256)": "0c91927b",
      "getState(uint256,address)": "73df1612",
      "getSubInstances(uint256,address)": "c526656c",
      "instantiate(address,address,uint256,address,bytes32,bytes32,uint256)": "20b73870",
      "isActive(uint256)": "82afd23b",
      "isConcerned(uint256,address)": "01ff62ab",
      "log2OverTwo(uint256)": "daaadf4e",
      "settleVerificationGame(uint256)": "a703df28",
      "startMachineRunChallenge(uint256)": "cd3784e7",
      "stateIsFinishedChallengerWon(uint256)": "b6b5c319",
      "stateIsFinishedClaimerWon(uint256)": "6cc9f17e",
      "winByPartitionTimeout(uint256)": "bfa69ed8"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_partitionInstantiatorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mmInstantiatorAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"MemoryWriten\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_mmInstance\",\"type\":\"uint256\"}],\"name\":\"PartitionDivergenceFound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_challenger\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_roundDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_machineAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_initialHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_claimerFinalHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_finalTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_partitionInstance\",\"type\":\"uint256\"}],\"name\":\"VGCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum VGInterface.state\",\"name\":\"_finalState\",\"type\":\"uint8\"}],\"name\":\"VGFinished\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"claimVictoryByTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"deactivate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getCurrentState\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_roundDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timeToStartMachine\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_partitionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxCycle\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_picoSecondsToRunInsn\",\"type\":\"uint256\"}],\"name\":\"getMaxInstanceDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getPartitionGameIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getPartitionQuerySize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getState\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_challenger\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"contract MachineInterface\",\"name\":\"_machine\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_initialHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_claimerFinalHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_hashBeforeDivergence\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_hashAfterDivergence\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_currentState\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"_uintValues\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getSubInstances\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_indices\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_challenger\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_roundDuration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_machineAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_initialHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_claimerFinalHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_finalTime\",\"type\":\"uint256\"}],\"name\":\"instantiate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isConcerned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"log2OverTwo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"settleVerificationGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"startMachineRunChallenge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"stateIsFinishedChallengerWon\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"stateIsFinishedClaimerWon\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"winByPartitionTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getMaxInstanceDuration(uint256,uint256,uint256,uint256,uint256)\":{\"params\":{\"_maxCycle\":\"is the maximum amount of steps a machine can perform\"}},\"instantiate(address,address,uint256,address,bytes32,bytes32,uint256)\":{\"params\":{\"_challenger\":\"address of the challenger.\",\"_claimer\":\"address of the claimer.\",\"_claimerFinalHash\":\"final hash claimed by claimer\",\"_finalTime\":\"max cycle of the machine for that computation\",\"_initialHash\":\"hash in which both claimer and challenger agree on\",\"_machineAddress\":\"address of the machine that will run the instruction\",\"_roundDuration\":\"duration of the round (security param)\"},\"returns\":{\"_0\":\"VG index.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimVictoryByTime(uint256)\":{\"notice\":\"Claimer can claim victory if challenger has lost the deadline for some of the steps in the protocol.\"},\"instantiate(address,address,uint256,address,bytes32,bytes32,uint256)\":{\"notice\":\"Instantiate a vg instance.\"},\"settleVerificationGame(uint256)\":{\"notice\":\"After having filled the memory manager with the necessary data, the provider calls this function to instantiate the machine and perform one step on it. The machine will write to memory now. Later, the provider will be expected to update the memory hash accordingly.\"},\"startMachineRunChallenge(uint256)\":{\"notice\":\"After the partition challenge has lead to a divergence in the hash within one time step, anyone can start a mechine run challenge to decide whether the claimer was correct about that particular step transition. This function call solely instantiate a memory manager, so the provider must fill the appropriate addresses that will be read by the machine.\"},\"winByPartitionTimeout(uint256)\":{\"notice\":\"In case one of the parties wins the partition challenge by timeout, then he or she can call this function to claim victory in the hireCPU contract as well.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VGInstantiator.sol\":\"VGInstantiator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@cartesi/util/contracts/Decorated.sol\":{\"content\":\"// Copyright 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity ^0.7.0;\\n\\n\\ncontract Decorated {\\n    // This contract defines several modifiers but does not use\\n    // them - they will be used in derived contracts.\\n    modifier onlyBy(address user) {\\n        require(msg.sender == user, \\\"Cannot be called by user\\\");\\n        _;\\n    }\\n\\n    modifier onlyAfter(uint256 time) {\\n        require(block.timestamp > time, \\\"Cannot be called now\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xdbba019b8f7f93b212a5bbae402ee988321c4fa82ed2b4c9e55b4d7ddf35dcc3\",\"license\":\"Apache-2.0\"},\"@cartesi/util/contracts/Instantiator.sol\":{\"content\":\"// Copyright 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\npragma solidity ^0.7.0;\\n\\n\\ninterface Instantiator {\\n\\n    modifier onlyInstantiated(uint256 _index) virtual;\\n\\n    modifier onlyActive(uint256 _index) virtual;\\n\\n    modifier increasesNonce(uint256 _index) virtual;\\n\\n    function isActive(uint256 _index) external view returns (bool);\\n\\n    function getNonce(uint256 _index) external view returns (uint256);\\n\\n    function isConcerned(uint256 _index, address _user) external view returns (bool);\\n\\n    function getSubInstances(uint256 _index, address) external view returns (address[] memory _addresses, uint256[] memory _indices);\\n\\n    function deactivate(uint256 _index) external;\\n}\\n\",\"keccak256\":\"0x084e3e769f423b3f32bd8faf119be132a478eeea8006bed69b527b2fdcfd45a1\",\"license\":\"Apache-2.0\"},\"@cartesi/util/contracts/InstantiatorImpl.sol\":{\"content\":\"// Copyright 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"./Instantiator.sol\\\";\\n\\nabstract contract InstantiatorImpl is Instantiator {\\n    uint256 public currentIndex = 0;\\n\\n    mapping(uint256 => bool) internal active;\\n    mapping(uint256 => uint256) internal nonce;\\n\\n    modifier onlyInstantiated(uint256 _index) override {\\n        require(currentIndex > _index, \\\"Index not instantiated\\\");\\n        _;\\n    }\\n\\n    modifier onlyActive(uint256 _index) override {\\n        require(currentIndex > _index, \\\"Index not instantiated\\\");\\n        require(isActive(_index), \\\"Index inactive\\\");\\n        _;\\n    }\\n\\n    modifier increasesNonce(uint256 _index) override {\\n        nonce[_index]++;\\n        _;\\n    }\\n\\n    function isActive(uint256 _index) public override view returns (bool) {\\n        return (active[_index]);\\n    }\\n\\n    function getNonce(uint256 _index)\\n        public\\n        override\\n        view\\n        onlyActive(_index)\\n        returns (uint256 currentNonce)\\n    {\\n        return nonce[_index];\\n    }\\n\\n    function deactivate(uint256 _index) public override {\\n        active[_index] = false;\\n        nonce[_index] = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xc1db237a28042f74224ae2d4398616fb670ce87709ffd8505c142cddedee6954\",\"license\":\"Apache-2.0\"},\"contracts/MMInterface.sol\":{\"content\":\"// Copyright (C) 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: GPL-3.0-only\\n// This program is free software: you can redistribute it and/or modify it under\\n// the terms of the GNU General Public License as published by the Free Software\\n// Foundation, either version 3 of the License, or (at your option) any later\\n// version.\\n\\n// This program is distributed in the hope that it will be useful, but WITHOUT ANY\\n// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\\n// PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n\\n// You should have received a copy of the GNU General Public License\\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n\\n// Note: This component currently has dependencies that are licensed under the GNU\\n// GPL, version 3, and so you should treat this component as a whole as being under\\n// the GPL version 3. But all Cartesi-written code in this component is licensed\\n// under the Apache License, version 2, or a compatible permissive license, and can\\n// be used independently under the Apache v2 license. After this component is\\n// rewritten, the entire component will be released under the Apache v2 license.\\n\\n/// @title Interface for memory manager instantiator\\npragma solidity ^0.7.0;\\n\\nimport \\\"@cartesi/util/contracts/Instantiator.sol\\\";\\n\\ninterface MMInterface is Instantiator {\\n    enum state {WaitingProofs, WaitingReplay, FinishedReplay}\\n\\n    function getCurrentState(uint256 _index) external view returns (bytes32);\\n\\n    function instantiate(\\n        address _owner,\\n        address _provider,\\n        bytes32 _initialHash\\n    ) external returns (uint256);\\n\\n    function newHash(uint256 _index) external view returns (bytes32);\\n\\n    function finishProofPhase(uint256 _index) external;\\n\\n    function finishReplayPhase(uint256 _index) external;\\n\\n    function getRWArrays(\\n        uint256 _index\\n    )\\n    external\\n    view\\n    returns (\\n        uint64[] memory,\\n        bytes8[] memory,\\n        bool[] memory\\n    );\\n\\n    function stateIsWaitingProofs(uint256 _index) external view returns (bool);\\n\\n    function stateIsWaitingReplay(uint256 _index) external view returns (bool);\\n\\n    function stateIsFinishedReplay(uint256 _index) external view returns (bool);\\n\\n    function getMaxInstanceDuration(\\n        uint256 _roundDuration,\\n        uint256 _timeToStartMachine\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x9d54d1313fb89fffc10dd80a1ea13227a5df26f669716d61704186dee5bf95d9\",\"license\":\"GPL-3.0-only\"},\"contracts/MachineInterface.sol\":{\"content\":\"// Copyright (C) 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: GPL-3.0-only\\n// This program is free software: you can redistribute it and/or modify it under\\n// the terms of the GNU General Public License as published by the Free Software\\n// Foundation, either version 3 of the License, or (at your option) any later\\n// version.\\n\\n// This program is distributed in the hope that it will be useful, but WITHOUT ANY\\n// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\\n// PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n\\n// You should have received a copy of the GNU General Public License\\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n\\n// Note: This component currently has dependencies that are licensed under the GNU\\n// GPL, version 3, and so you should treat this component as a whole as being under\\n// the GPL version 3. But all Cartesi-written code in this component is licensed\\n// under the Apache License, version 2, or a compatible permissive license, and can\\n// be used independently under the Apache v2 license. After this component is\\n// rewritten, the entire component will be released under the Apache v2 license.\\n\\n\\n/// @title MachineInterface interface contract\\npragma solidity ^0.7.0;\\n\\n\\ninterface MachineInterface {\\n    event StepGiven(uint8 exitCode);\\n\\n    function step(\\n        uint64[] memory _rwPositions,\\n        bytes8[] memory _rwValues,\\n        bool[] memory _isRead\\n    ) external returns (uint8, uint256);\\n\\n    function getMemoryInteractor() external view returns (address);\\n}\\n\",\"keccak256\":\"0x227a51ac54bc8246aec29d73bc48701c6c2bcd0ad0b606105c079f31283526d7\",\"license\":\"GPL-3.0-only\"},\"contracts/PartitionInterface.sol\":{\"content\":\"// Copyright (C) 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: GPL-3.0-only\\n// This program is free software: you can redistribute it and/or modify it under\\n// the terms of the GNU General Public License as published by the Free Software\\n// Foundation, either version 3 of the License, or (at your option) any later\\n// version.\\n\\n// This program is distributed in the hope that it will be useful, but WITHOUT ANY\\n// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\\n// PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n\\n// You should have received a copy of the GNU General Public License\\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n\\n// Note: This component currently has dependencies that are licensed under the GNU\\n// GPL, version 3, and so you should treat this component as a whole as being under\\n// the GPL version 3. But all Cartesi-written code in this component is licensed\\n// under the Apache License, version 2, or a compatible permissive license, and can\\n// be used independently under the Apache v2 license. After this component is\\n// rewritten, the entire component will be released under the Apache v2 license.\\n\\n/// @title Abstract interface for partition instantiator\\npragma solidity ^0.7.0;\\n\\nimport \\\"@cartesi/util/contracts/Instantiator.sol\\\";\\n\\ninterface PartitionInterface is Instantiator {\\n    enum state {\\n        WaitingQuery,\\n        WaitingHashes,\\n        ChallengerWon,\\n        ClaimerWon,\\n        DivergenceFound\\n    }\\n\\n    function getCurrentState(uint256 _index) external view returns (bytes32);\\n\\n    function instantiate(\\n        address _challenger,\\n        address _claimer,\\n        bytes32 _initialHash,\\n        bytes32 _claimerFinalHash,\\n        uint256 _finalTime,\\n        uint256 _querySize,\\n        uint256 _roundDuration\\n    ) external returns (uint256);\\n\\n    function timeHash(uint256 _index, uint256 key)\\n        external\\n        view\\n        returns (bytes32);\\n\\n    function divergenceTime(uint256 _index) external view returns (uint256);\\n\\n    function stateIsWaitingQuery(uint256 _index) external view returns (bool);\\n\\n    function stateIsWaitingHashes(uint256 _index) external view returns (bool);\\n\\n    function stateIsChallengerWon(uint256 _index) external view returns (bool);\\n\\n    function stateIsClaimerWon(uint256 _index) external view returns (bool);\\n\\n    function stateIsDivergenceFound(uint256 _index)\\n        external\\n        view\\n        returns (bool);\\n\\n    function getPartitionGameIndex(uint256 _index)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function getQuerySize(uint256 _index) external view returns (uint256);\\n\\n    function getMaxInstanceDuration(\\n        uint256 _roundDuration,\\n        uint256 _timeToStartMachine,\\n        uint256 _partitionSize,\\n        uint256 _maxCycle,\\n        uint256 _picoSecondsToRunInsn\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x00b63017019412475d1ceee5a817fa1d714d7e6cff9aac7d2662eaef492f6687\",\"license\":\"GPL-3.0-only\"},\"contracts/VGInstantiator.sol\":{\"content\":\"// Copyright (C) 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: GPL-3.0-only\\n// This program is free software: you can redistribute it and/or modify it under\\n// the terms of the GNU General Public License as published by the Free Software\\n// Foundation, either version 3 of the License, or (at your option) any later\\n// version.\\n\\n// This program is distributed in the hope that it will be useful, but WITHOUT ANY\\n// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\\n// PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n\\n// You should have received a copy of the GNU General Public License\\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n\\n// Note: This component currently has dependencies that are licensed under the GNU\\n// GPL, version 3, and so you should treat this component as a whole as being under\\n// the GPL version 3. But all Cartesi-written code in this component is licensed\\n// under the Apache License, version 2, or a compatible permissive license, and can\\n// be used independently under the Apache v2 license. After this component is\\n// rewritten, the entire component will be released under the Apache v2 license.\\n\\n\\n// @title Verification game instantiator\\npragma solidity ^0.7.0;\\n\\nimport \\\"@cartesi/util/contracts/Decorated.sol\\\";\\nimport \\\"@cartesi/util/contracts/InstantiatorImpl.sol\\\";\\nimport \\\"./VGInterface.sol\\\";\\nimport \\\"./PartitionInterface.sol\\\";\\nimport \\\"./MMInterface.sol\\\";\\nimport \\\"./MachineInterface.sol\\\";\\n\\n\\ncontract VGInstantiator is InstantiatorImpl, Decorated, VGInterface {\\n    //  using SafeMath for uint;\\n\\n    PartitionInterface private partition;\\n    MMInterface private mm;\\n\\n    struct VGCtx {\\n        address challenger; // the two parties involved in each instance\\n        address claimer;\\n        uint roundDuration; // time interval to interact with this contract\\n        MachineInterface machine; // the machine which will run the challenge\\n        bytes32 initialHash; // hash of machine memory that both aggree uppon\\n        bytes32 claimerFinalHash; // hash claimer commited for machine after running\\n        uint finalTime; // the time for which the machine should run\\n        uint timeOfLastMove; // last time someone made a move with deadline\\n        uint256 mmInstance; // the instance of the memory that was given to this game\\n        uint256 partitionInstance; // the partition instance given to this game\\n        uint divergenceTime; // the time in which the divergence happened\\n        bytes32 hashBeforeDivergence; // hash aggreed right before divergence\\n        bytes32 hashAfterDivergence; // hash in conflict right after divergence\\n        state currentState;\\n    }\\n\\n    mapping(uint256 => VGCtx) private instance;\\n\\n    // These are the possible states and transitions of the contract.\\n    //\\n    //               +---+\\n    //               |   |\\n    //               +---+\\n    //                 |\\n    //                 | instantiate\\n    //                 v\\n    //               +----------------+  winByPartitionTimeout\\n    //   +-----------| WaitPartition  |------------------------+\\n    //   |           +----------------+                        |\\n    //   |                         |                           |\\n    //   | winByPartitionTimeout   | startMachineRunChallenge  |\\n    //   |                         v                           |\\n    //   |           +-----------------------+                 |\\n    //   | +---------| WaitMemoryProveValues |---------------+ |\\n    //   | |         +-----------------------+               | |\\n    //   | |                                                 | |\\n    //   | |claimVictoryByDeadline   settleVerificationGame  | |\\n    //   v v                                                 v v\\n    // +--------------------+               +-----------------------+\\n    // | FinishedClaimerWon |               | FinishedChallengerWon |\\n    // +--------------------+               +-----------------------+\\n    //\\n\\n    event VGCreated(\\n        uint256 _index,\\n        address _challenger,\\n        address _claimer,\\n        uint _roundDuration,\\n        address _machineAddress,\\n        bytes32 _initialHash,\\n        bytes32 _claimerFinalHash,\\n        uint _finalTime,\\n        uint256 _partitionInstance\\n    );\\n    event PartitionDivergenceFound(uint256 _index, uint256 _mmInstance);\\n    event MemoryWriten(uint256 _index);\\n    event VGFinished(state _finalState);\\n\\n    constructor(address _partitionInstantiatorAddress,\\n                address _mmInstantiatorAddress) {\\n        partition = PartitionInterface(_partitionInstantiatorAddress);\\n        mm = MMInterface(_mmInstantiatorAddress);\\n    }\\n\\n    /// @notice Instantiate a vg instance.\\n    /// @param _challenger address of the challenger.\\n    /// @param _claimer address of the claimer.\\n    /// @param _roundDuration duration of the round (security param)\\n    /// @param _machineAddress address of the machine that will run the instruction\\n    /// @param _initialHash hash in which both claimer and challenger agree on\\n    /// @param _claimerFinalHash final hash claimed by claimer\\n    /// @param _finalTime max cycle of the machine for that computation\\n    /// @return VG index.\\n    function instantiate(\\n        address _challenger,\\n        address _claimer,\\n        uint _roundDuration,\\n        address _machineAddress,\\n        bytes32 _initialHash,\\n        bytes32 _claimerFinalHash,\\n        uint _finalTime) public override returns (uint256)\\n    {\\n        require(_finalTime > 0, \\\"Final time must be greater than zero\\\");\\n        instance[currentIndex].challenger = _challenger;\\n        instance[currentIndex].claimer = _claimer;\\n        instance[currentIndex].roundDuration = _roundDuration * log2OverTwo(_finalTime) + 4;\\n        instance[currentIndex].machine = MachineInterface(_machineAddress);\\n        instance[currentIndex].initialHash = _initialHash;\\n        instance[currentIndex].claimerFinalHash = _claimerFinalHash;\\n        instance[currentIndex].finalTime = _finalTime;\\n        instance[currentIndex].timeOfLastMove = block.timestamp;\\n        instance[currentIndex].partitionInstance = partition.instantiate(\\n            _challenger,\\n            _claimer,\\n            _initialHash,\\n            _claimerFinalHash,\\n            _finalTime,\\n            10,\\n            _roundDuration\\n        );\\n        instance[currentIndex].currentState = state.WaitPartition;\\n        emit VGCreated(\\n            currentIndex,\\n            _challenger,\\n            _claimer,\\n            _roundDuration * log2OverTwo(_finalTime) + 4,\\n            _machineAddress,\\n            _initialHash,\\n            _claimerFinalHash,\\n            _finalTime,\\n            instance[currentIndex].partitionInstance\\n        );\\n\\n        active[currentIndex] = true;\\n        return(currentIndex++);\\n    }\\n\\n    /// @notice In case one of the parties wins the partition challenge by\\n    /// timeout, then he or she can call this function to claim victory in\\n    /// the hireCPU contract as well.\\n\\n    // TO-DO: should this stop existing? We can make claimVictory by timeout generic\\n    function winByPartitionTimeout(uint256 _index) public override\\n        onlyInstantiated(_index)\\n    {\\n        require(instance[_index].currentState == state.WaitPartition, \\\"State should be WaitPartition\\\");\\n        uint256 partitionIndex = instance[_index].partitionInstance;\\n        if (partition.stateIsChallengerWon(partitionIndex)) {\\n            challengerWins(_index);\\n            return;\\n        }\\n        if (partition.stateIsClaimerWon(partitionIndex)) {\\n            claimerWins(_index);\\n            return;\\n        }\\n        revert(\\\"Fail to WinByPartitionTimeout in current condition\\\");\\n    }\\n\\n    /// @notice After the partition challenge has lead to a divergence in the hash\\n    /// within one time step, anyone can start a mechine run challenge to decide\\n    /// whether the claimer was correct about that particular step transition.\\n    /// This function call solely instantiate a memory manager, so the\\n    /// provider must fill the appropriate addresses that will be read by the\\n    /// machine.\\n    function startMachineRunChallenge(uint256 _index) public override\\n        onlyInstantiated(_index)\\n        increasesNonce(_index)\\n    {\\n        require(instance[_index].currentState == state.WaitPartition, \\\"State should be WaitPartition\\\");\\n        require(partition.stateIsDivergenceFound(instance[_index].partitionInstance), \\\"Divergence should be found\\\");\\n        uint256 partitionIndex = instance[_index].partitionInstance;\\n        uint divergenceTime = partition.divergenceTime(partitionIndex);\\n        instance[_index].divergenceTime = divergenceTime;\\n        instance[_index].hashBeforeDivergence = partition.timeHash(partitionIndex, divergenceTime);\\n        instance[_index].hashAfterDivergence = partition.timeHash(partitionIndex, divergenceTime + 1);\\n        instance[_index].mmInstance = mm.instantiate(\\n            address(this),\\n            instance[_index].challenger,\\n            instance[_index].hashBeforeDivergence\\n        );\\n        // !!!!!!!!! should call clear in partitionInstance !!!!!!!!!\\n        delete instance[_index].partitionInstance;\\n        instance[_index].timeOfLastMove = block.timestamp;\\n        instance[_index].currentState = state.WaitMemoryProveValues;\\n        emit PartitionDivergenceFound(_index, instance[_index].mmInstance);\\n    }\\n\\n    /// @notice After having filled the memory manager with the necessary data,\\n    /// the provider calls this function to instantiate the machine and perform\\n    /// one step on it. The machine will write to memory now. Later, the\\n    /// provider will be expected to update the memory hash accordingly.\\n    function settleVerificationGame(uint256 _index) public override\\n        onlyInstantiated(_index)\\n        onlyBy(instance[_index].challenger)\\n    {\\n        require(instance[_index].currentState == state.WaitMemoryProveValues, \\\"State should be WaitMemoryProveValues\\\");\\n        uint256 mmIndex = instance[_index].mmInstance;\\n        require(mm.stateIsWaitingReplay(mmIndex), \\\"State of MM should be WaitingReplay\\\");\\n\\n        (\\n            uint64[] memory positions,\\n            bytes8[] memory values,\\n            bool[] memory wasRead\\n        ) = mm.getRWArrays(mmIndex);\\n\\n        (uint8 exitCode, uint256 memoryAccesses) = instance[_index].machine.step(positions, values, wasRead);\\n\\n        require(exitCode == 0, \\\"Step didnt exit correctly\\\");\\n        require(memoryAccesses == positions.length, \\\"Number of memory acceses didnt match\\\");\\n\\n        mm.finishReplayPhase(mmIndex);\\n\\n        require(mm.stateIsFinishedReplay(mmIndex), \\\"State of MM  should be FinishedReplay\\\");\\n        require(mm.newHash(mmIndex) != instance[_index].hashAfterDivergence, \\\"newHash should match\\\");\\n        challengerWins(_index);\\n    }\\n\\n    /// @notice Claimer can claim victory if challenger has lost the deadline\\n    /// for some of the steps in the protocol.\\n    function claimVictoryByTime(uint256 _index) public override\\n        onlyInstantiated(_index)\\n        onlyBy(instance[_index].claimer)\\n    {\\n        // TO-DO: should we add onlyAfter as a function in solidity-utils lib?\\n        // This should be the onlyAfter modifier, but it cannot use functions:\\n        // DeclarationError: Function type can not be used in this context.\\n        // TO-DO: change the hardcode numbers\\n        require(\\n            block.timestamp > instance[_index].timeOfLastMove + getMaxStateDuration(\\n                instance[_index].currentState,\\n                instance[_index].roundDuration,\\n                40, // time to start machine\\n                partition.getQuerySize(instance[_index].partitionInstance),\\n                instance[_index].finalTime, //maxCycle\\n                500 // pico seconds to run insn\\n        ), \\\"Duration of WaitMemoryProveValues must be over\\\");\\n\\n        require(instance[_index].currentState == state.WaitMemoryProveValues, \\\"State should be WaitMemoryProveValues\\\");\\n        claimerWins(_index);\\n    }\\n\\n    // state getters\\n\\n    function getState(uint256 _index, address) public view\\n        onlyInstantiated(_index)\\n        returns ( address _challenger,\\n                address _claimer,\\n                MachineInterface _machine,\\n                bytes32 _initialHash,\\n                bytes32 _claimerFinalHash,\\n                bytes32 _hashBeforeDivergence,\\n                bytes32 _hashAfterDivergence,\\n                bytes32 _currentState,\\n                uint[] memory _uintValues)\\n    {\\n        VGCtx memory i = instance[_index];\\n\\n        uint[] memory uintValues = new uint[](5);\\n        uintValues[0] = i.finalTime;\\n        uintValues[1] = i.timeOfLastMove + getMaxStateDuration(\\n                i.currentState,\\n                i.roundDuration,\\n                40, // time to start machine\\n                partition.getQuerySize(i.partitionInstance),\\n                i.finalTime, //maxCycle\\n                500 // pico seconds to run insn\\n            ); //deadline\\n        uintValues[2] = i.mmInstance;\\n        uintValues[3] = i.partitionInstance;\\n        uintValues[4] = i.divergenceTime;\\n\\n        // we have to duplicate the code for getCurrentState because of\\n        // \\\"stack too deep\\\"\\n        bytes32 currentState;\\n        if (i.currentState == state.WaitPartition) {\\n            currentState = \\\"WaitPartition\\\";\\n        }\\n        if (i.currentState == state.WaitMemoryProveValues) {\\n            currentState = \\\"WaitMemoryProveValues\\\";\\n        }\\n        if (i.currentState == state.FinishedClaimerWon) {\\n            currentState = \\\"FinishClaimerWon\\\";\\n        }\\n        if (i.currentState == state.FinishedChallengerWon) {\\n            currentState = \\\"FinishedChallengerWon\\\";\\n        }\\n\\n        return (\\n            i.challenger,\\n            i.claimer,\\n            i.machine,\\n            i.initialHash,\\n            i.claimerFinalHash,\\n            i.hashBeforeDivergence,\\n            i.hashAfterDivergence,\\n            currentState,\\n            uintValues\\n        );\\n    }\\n\\n    function isConcerned(uint256 _index, address _user) public override view returns (bool) {\\n        return ((instance[_index].challenger == _user) || (instance[_index].claimer == _user));\\n    }\\n\\n    /// @notice Get the worst case scenario duration for a specific state\\n    /// @param _roundDuration security parameter, the max time an agent\\n    //          has to react and submit one simple transaction\\n    /// @param _timeToStartMachine time to build the machine for the first time\\n    /// @param _partitionSize size of partition, how many instructions the\\n    //          will run to reach the necessary hash\\n    /// @param _maxCycle is the maximum amount of steps a machine can perform\\n    //          before being forced into becoming halted\\n    function getMaxStateDuration(\\n        state _state,\\n        uint256 _roundDuration,\\n        uint256 _timeToStartMachine,\\n        uint256 _partitionSize,\\n        uint256 _maxCycle,\\n        uint256 _picoSecondsToRunInsn) private view returns (uint256)\\n    {\\n        // TODO: the 1 should probably be roundDuration\\n        if (_state == state.WaitPartition) {\\n            return partition.getMaxInstanceDuration(_roundDuration, _timeToStartMachine, _partitionSize, _maxCycle, _picoSecondsToRunInsn);\\n        }\\n        if (_state == state.WaitMemoryProveValues) {\\n            return mm.getMaxInstanceDuration(_roundDuration, _timeToStartMachine);\\n        }\\n\\n        if (_state == state.FinishedClaimerWon || _state == state.FinishedChallengerWon) {\\n            return 0; // final state\\n        }\\n        require(false, \\\"Unrecognized state\\\");\\n    }\\n\\n    /// @notice Get the worst case scenario duration for a specific state\\n    /// @param _roundDuration security parameter, the max time an agent\\n    //          has to react and submit one simple transaction\\n    /// @param _maxCycle is the maximum amount of steps a machine can perform\\n    //          before being forced into becoming halted\\n    function getMaxInstanceDuration(\\n        uint256 _roundDuration,\\n        uint256 _timeToStartMachine,\\n        uint256 _partitionSize,\\n        uint256 _maxCycle,\\n        uint256 _picoSecondsToRunInsn) public override view returns (uint256)\\n    {\\n        uint256 waitPartitionDuration = getMaxStateDuration(\\n            state.WaitPartition,\\n            _roundDuration,\\n            _timeToStartMachine,\\n            _partitionSize,\\n            _maxCycle,\\n            _picoSecondsToRunInsn\\n        );\\n\\n        uint256 waitMemoryProveValues = getMaxStateDuration(\\n            state.WaitPartition,\\n            _roundDuration,\\n            _timeToStartMachine,\\n            _partitionSize,\\n            _maxCycle,\\n            _picoSecondsToRunInsn\\n        );\\n\\n        return waitPartitionDuration + waitMemoryProveValues;\\n    }\\n\\n    function getSubInstances(uint256 _index, address)\\n        public override view returns (address[] memory _addresses,\\n                            uint256[] memory _indices)\\n    {\\n        address[] memory a;\\n        uint256[] memory i;\\n        if (instance[_index].currentState == state.WaitPartition) {\\n            a = new address[](1);\\n            i = new uint256[](1);\\n            a[0] = address(partition);\\n            i[0] = instance[_index].partitionInstance;\\n            return (a, i);\\n        }\\n        if (instance[_index].currentState == state.WaitMemoryProveValues) {\\n            a = new address[](1);\\n            i = new uint256[](1);\\n            a[0] = address(mm);\\n            i[0] = instance[_index].mmInstance;\\n            return (a, i);\\n        }\\n        a = new address[](0);\\n        i = new uint256[](0);\\n        return (a, i);\\n    }\\n\\n    function getCurrentState(uint256 _index) public override view\\n        onlyInstantiated(_index)\\n        returns (bytes32)\\n    {\\n        if (instance[_index].currentState == state.WaitPartition) {\\n            return \\\"WaitPartition\\\";\\n        }\\n        if (instance[_index].currentState == state.WaitMemoryProveValues) {\\n            return \\\"WaitMemoryProveValues\\\";\\n        }\\n        if (instance[_index].currentState == state.FinishedClaimerWon) {\\n            return \\\"FinishClaimerWon\\\";\\n        }\\n        if (instance[_index].currentState == state.FinishedChallengerWon) {\\n            return \\\"FinishedChallengerWon\\\";\\n        }\\n        require(false, \\\"Unrecognized state\\\");\\n    }\\n\\n    // remove these functions and change tests accordingly\\n    /* function stateIsWaitPartition(uint256 _index) public view */\\n    /*   onlyInstantiated(_index) */\\n    /*   returns (bool) */\\n    /* { return instance[_index].currentState == state.WaitPartition; } */\\n\\n    /* function stateIsWaitMemoryProveValues(uint256 _index) public view */\\n    /*   onlyInstantiated(_index) */\\n    /*   returns (bool) */\\n    /* { return instance[_index].currentState == state.WaitMemoryProveValues; } */\\n\\n    function stateIsFinishedClaimerWon(uint256 _index) public override view\\n        onlyInstantiated(_index)\\n        returns (bool)\\n    { return instance[_index].currentState == state.FinishedClaimerWon; }\\n\\n    function stateIsFinishedChallengerWon(uint256 _index) public override view\\n        onlyInstantiated(_index)\\n        returns (bool)\\n    { return instance[_index].currentState == state.FinishedChallengerWon; }\\n\\n    function clearInstance(uint256 _index) internal\\n        onlyInstantiated(_index)\\n    {\\n        delete instance[_index].challenger;\\n        delete instance[_index].claimer;\\n        delete instance[_index].roundDuration;\\n        delete instance[_index].machine;\\n        delete instance[_index].initialHash;\\n        delete instance[_index].claimerFinalHash;\\n        delete instance[_index].finalTime;\\n        delete instance[_index].timeOfLastMove;\\n        // !!!!!!!!! should call clear in mmInstance !!!!!!!!!\\n        delete instance[_index].mmInstance;\\n        delete instance[_index].divergenceTime;\\n        delete instance[_index].hashBeforeDivergence;\\n        delete instance[_index].hashAfterDivergence;\\n        deactivate(_index);\\n    }\\n\\n    function challengerWins(uint256 _index) private\\n        onlyInstantiated(_index)\\n    {\\n        clearInstance(_index);\\n        instance[_index].currentState = state.FinishedChallengerWon;\\n        emit VGFinished(instance[_index].currentState);\\n    }\\n\\n    function claimerWins(uint256 _index) private\\n        onlyInstantiated(_index)\\n    {\\n        clearInstance(_index);\\n        instance[_index].currentState = state.FinishedClaimerWon;\\n        emit VGFinished(instance[_index].currentState);\\n    }\\n\\n    function getPartitionQuerySize(uint256 _index) public override view returns (uint256) {\\n        return partition.getQuerySize(instance[_index].partitionInstance);\\n    }\\n\\n    function getPartitionGameIndex(uint256 _index) public override view returns (uint256) {\\n        return partition.getPartitionGameIndex(instance[_index].partitionInstance);\\n    }\\n\\n    //TODO: It is supposed to be log10 * C, because we're using a partition of 10\\n    function log2OverTwo(uint x) public pure returns (uint y){\\n        uint leading = 256;\\n\\n        while (x != 0) {\\n            x = x >> 1;\\n            leading--;\\n        }\\n        // plus one to do an approx ceiling\\n        return (255 - leading) / 2;\\n    }\\n}\\n\",\"keccak256\":\"0x0ba45b70f55af61a3f93b365229af84a11a0a868798e84bf5df49f52e00f1871\",\"license\":\"GPL-3.0-only\"},\"contracts/VGInterface.sol\":{\"content\":\"// Copyright (C) 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: GPL-3.0-only\\n// This program is free software: you can redistribute it and/or modify it under\\n// the terms of the GNU General Public License as published by the Free Software\\n// Foundation, either version 3 of the License, or (at your option) any later\\n// version.\\n\\n// This program is distributed in the hope that it will be useful, but WITHOUT ANY\\n// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\\n// PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n\\n// You should have received a copy of the GNU General Public License\\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n\\n// Note: This component currently has dependencies that are licensed under the GNU\\n// GPL, version 3, and so you should treat this component as a whole as being under\\n// the GPL version 3. But all Cartesi-written code in this component is licensed\\n// under the Apache License, version 2, or a compatible permissive license, and can\\n// be used independently under the Apache v2 license. After this component is\\n// rewritten, the entire component will be released under the Apache v2 license.\\n\\n// @title Verification game instantiator\\npragma solidity ^0.7.0;\\n\\nimport \\\"@cartesi/util/contracts/Decorated.sol\\\";\\nimport \\\"@cartesi/util/contracts/Instantiator.sol\\\";\\nimport \\\"./PartitionInterface.sol\\\";\\nimport \\\"./MMInterface.sol\\\";\\nimport \\\"./MachineInterface.sol\\\";\\n\\ninterface VGInterface is Instantiator {\\n    enum state {\\n        WaitPartition,\\n        WaitMemoryProveValues,\\n        FinishedClaimerWon,\\n        FinishedChallengerWon\\n    }\\n\\n    function instantiate(\\n        address _challenger,\\n        address _claimer,\\n        uint256 _roundDuration,\\n        address _machineAddress,\\n        bytes32 _initialHash,\\n        bytes32 _claimerFinalHash,\\n        uint256 _finalTime\\n    ) external returns (uint256);\\n\\n    function getCurrentState(uint256 _index) external view returns (bytes32);\\n\\n    function stateIsFinishedClaimerWon(uint256 _index)\\n        external\\n        view\\n        returns (bool);\\n\\n    function stateIsFinishedChallengerWon(uint256 _index)\\n        external\\n        view\\n        returns (bool);\\n\\n    function winByPartitionTimeout(uint256 _index) external;\\n\\n    function startMachineRunChallenge(uint256 _index) external;\\n\\n    function settleVerificationGame(uint256 _index) external;\\n\\n    function claimVictoryByTime(uint256 _index) external;\\n\\n    //function stateIsWaitPartition(uint256 _index) public view returns (bool);\\n    //function stateIsWaitMemoryProveValues(uint256 _index) public view\\n    //  returns (bool);\\n    //function clearInstance(uint256 _index) internal;\\n    //function challengerWins(uint256 _index) private;\\n    //function claimerWins(uint256 _index) private;\\n\\n    function getPartitionQuerySize(uint256 _index)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function getPartitionGameIndex(uint256 _index)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function getMaxInstanceDuration(\\n        uint256 _roundDuration,\\n        uint256 _timeToStartMachine,\\n        uint256 _partitionSize,\\n        uint256 _maxCycle,\\n        uint256 _picoSecondsToRunInsn\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x520380137623cac076f23ab845ed9f6611f56065cab174455fcf9815c81d5ba6\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 94,
        "contract": "contracts/VGInstantiator.sol:VGInstantiator",
        "label": "currentIndex",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 98,
        "contract": "contracts/VGInstantiator.sol:VGInstantiator",
        "label": "active",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 102,
        "contract": "contracts/VGInstantiator.sol:VGInstantiator",
        "label": "nonce",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 4759,
        "contract": "contracts/VGInstantiator.sol:VGInstantiator",
        "label": "partition",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(PartitionInterface)4743"
      },
      {
        "astId": 4761,
        "contract": "contracts/VGInstantiator.sol:VGInstantiator",
        "label": "mm",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(MMInterface)2927"
      },
      {
        "astId": 4794,
        "contract": "contracts/VGInstantiator.sol:VGInstantiator",
        "label": "instance",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(VGCtx)4790_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(MMInterface)2927": {
        "encoding": "inplace",
        "label": "contract MMInterface",
        "numberOfBytes": "20"
      },
      "t_contract(MachineInterface)2955": {
        "encoding": "inplace",
        "label": "contract MachineInterface",
        "numberOfBytes": "20"
      },
      "t_contract(PartitionInterface)4743": {
        "encoding": "inplace",
        "label": "contract PartitionInterface",
        "numberOfBytes": "20"
      },
      "t_enum(state)6136": {
        "encoding": "inplace",
        "label": "enum VGInterface.state",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(VGCtx)4790_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct VGInstantiator.VGCtx)",
        "numberOfBytes": "32",
        "value": "t_struct(VGCtx)4790_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(VGCtx)4790_storage": {
        "encoding": "inplace",
        "label": "struct VGInstantiator.VGCtx",
        "members": [
          {
            "astId": 4763,
            "contract": "contracts/VGInstantiator.sol:VGInstantiator",
            "label": "challenger",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 4765,
            "contract": "contracts/VGInstantiator.sol:VGInstantiator",
            "label": "claimer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 4767,
            "contract": "contracts/VGInstantiator.sol:VGInstantiator",
            "label": "roundDuration",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 4769,
            "contract": "contracts/VGInstantiator.sol:VGInstantiator",
            "label": "machine",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(MachineInterface)2955"
          },
          {
            "astId": 4771,
            "contract": "contracts/VGInstantiator.sol:VGInstantiator",
            "label": "initialHash",
            "offset": 0,
            "slot": "4",
            "type": "t_bytes32"
          },
          {
            "astId": 4773,
            "contract": "contracts/VGInstantiator.sol:VGInstantiator",
            "label": "claimerFinalHash",
            "offset": 0,
            "slot": "5",
            "type": "t_bytes32"
          },
          {
            "astId": 4775,
            "contract": "contracts/VGInstantiator.sol:VGInstantiator",
            "label": "finalTime",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 4777,
            "contract": "contracts/VGInstantiator.sol:VGInstantiator",
            "label": "timeOfLastMove",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 4779,
            "contract": "contracts/VGInstantiator.sol:VGInstantiator",
            "label": "mmInstance",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 4781,
            "contract": "contracts/VGInstantiator.sol:VGInstantiator",
            "label": "partitionInstance",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 4783,
            "contract": "contracts/VGInstantiator.sol:VGInstantiator",
            "label": "divergenceTime",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 4785,
            "contract": "contracts/VGInstantiator.sol:VGInstantiator",
            "label": "hashBeforeDivergence",
            "offset": 0,
            "slot": "11",
            "type": "t_bytes32"
          },
          {
            "astId": 4787,
            "contract": "contracts/VGInstantiator.sol:VGInstantiator",
            "label": "hashAfterDivergence",
            "offset": 0,
            "slot": "12",
            "type": "t_bytes32"
          },
          {
            "astId": 4789,
            "contract": "contracts/VGInstantiator.sol:VGInstantiator",
            "label": "currentState",
            "offset": 0,
            "slot": "13",
            "type": "t_enum(state)6136"
          }
        ],
        "numberOfBytes": "448"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "claimVictoryByTime(uint256)": {
        "notice": "Claimer can claim victory if challenger has lost the deadline for some of the steps in the protocol."
      },
      "instantiate(address,address,uint256,address,bytes32,bytes32,uint256)": {
        "notice": "Instantiate a vg instance."
      },
      "settleVerificationGame(uint256)": {
        "notice": "After having filled the memory manager with the necessary data, the provider calls this function to instantiate the machine and perform one step on it. The machine will write to memory now. Later, the provider will be expected to update the memory hash accordingly."
      },
      "startMachineRunChallenge(uint256)": {
        "notice": "After the partition challenge has lead to a divergence in the hash within one time step, anyone can start a mechine run challenge to decide whether the claimer was correct about that particular step transition. This function call solely instantiate a memory manager, so the provider must fill the appropriate addresses that will be read by the machine."
      },
      "winByPartitionTimeout(uint256)": {
        "notice": "In case one of the parties wins the partition challenge by timeout, then he or she can call this function to claim victory in the hireCPU contract as well."
      }
    },
    "version": 1
  }
}